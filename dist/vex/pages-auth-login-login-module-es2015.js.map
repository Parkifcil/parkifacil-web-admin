{"version":3,"sources":["./src/app/models/user.model.ts","./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-auth-login-login-module-es2015.js","sourcesContent":["export class  UserModel{\n  \n    UserName: string;\n    Password: string;\n  \n  }","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\nimport { AuthGuard } from './auth.guard';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent,\n    // canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport user from '@iconify/icons-fa-solid/user';\nimport { UserModel } from '../../../models/user.model';\nimport { AuthService } from '../../../services/login.service';\n\n\n\n\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  user: UserModel = new UserModel(); \n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n\n  constructor(public router: Router,\n              public fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar,\n              public authService: AuthService\n  ) {\n\n   \n  }\n\n  ngOnInit() {\n\n    this.form = this.fb.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n    \n  }\n\n  // send() {\n  //   this.router.navigate(['/']);\n  //   console.log(this.user);\n  //   console.log('hola');\n\n   // this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\n     // duration: 10000\n    // });\n  // }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n\n  loginUser(){\n    console.log('hola');\n    this.authService.signIn(this.form.value);\n\n  }\n}\n","<div class=\"w-full h-full bg-pattern\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div @fadeInUp class=\"card overflow-hidden w-full max-w-xs\">\n        <div class=\"p-6 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"fill-current text-center\">\n                <img class=\"w-24\" src=\"assets/img/parkifacil/logo_parkifacil_sinfondo.png\">\n            </div>\n        </div>\n\n        <div class=\"text-center mt-4\">\n            <!-- <h2 class=\"title m-0\">Welcome back</h2> -->\n            <h2 class=\"title m-0\">¡Bienvenido!</h2>\n            <!-- <h3 class=\"body-2 text-secondary m-0\">Centro de control.</h3> -->\n        </div>\n        <!-- <form class=\"form-signin\" [formGroup]=\"form\" (ngSubmit)=\" loginUser()\"> -->\n        <div ngNativealidate [formGroup]=\"form\" class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n            <div class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n                <div fxFlex=\"auto\" fxLayout=\"column\">\n                    <mat-form-field fxFlex=\"grow\">\n                        <mat-label>Usuario</mat-label>\n                        <input formControlName=\"UserName\" name=\"UserName\" [(ngModel)]=\"user.UserName\" matInput required>\n                        <!-- <input formControlName=\"email\" name=\"userName\" matInput required> -->\n\n                        <!-- <mat-error *ngIf=\"form.get('userName').hasError('required')\">We need an email address to log you in</mat-error> -->\n                        <mat-error *ngIf=\"form.get('UserName').hasError('required')\">Ingresa un usuario por favor </mat-error>\n                    </mat-form-field>\n                    <mat-form-field fxFlex=\"grow\">\n                        <mat-label>Contraseña</mat-label>\n                        <input [type]=\"inputType\" name=\"Password\" [(ngModel)]=\"user.Password\" formControlName=\"Password\" matInput required>\n                        <!-- <input [type]=\"inputType\" name=\"password\" formControlName=\"password\" matInput required> -->\n                        <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"\n                        Alternar visibilidad\" type=\"button\">\n            <mat-icon *ngIf=\"visible\" [icIcon]=\"icVisibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" [icIcon]=\"icVisibilityOff\"></mat-icon>\n          </button>\n                        <mat-hint>Haga clic en el ojo para alternar la visibilidad.</mat-hint>\n                        <mat-error *ngIf=\"form.get('Password').hasError('required')\">Necesitamos una contraseña para iniciar la sesión</mat-error>\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"text-center mt-4\">\n                    <!-- <mat-checkbox class=\"caption\" color=\"primary\">Remember Me</mat-checkbox> -->\n                    <!-- <a [routerLink]=\"['/forgot-password']\" class=\"text-center\">Forgot Password?</a> -->\n                </div>\n\n                <button (click)=\"loginUser()\" color=\"primary\" mat-raised-button type=\"button\">\n                <!-- <button type=\"submit\" color=\"primary\" mat-raised-button type=\"button\"> -->\n                    INGRESAR\n                <!-- SIGN IN -->\n      </button>\n\n                <!-- <p class=\"text-secondary text-center\">\n                    Nuevo usuario<br/>\n                    <a [routerLink]=\"['/register']\">Haga clic aquí para crear uno</a>\n                </p> -->\n\n\n            </div>\n\n\n        </div>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ],\n  providers:[],\n})\nexport class LoginModule {\n\n}\n"],"sourceRoot":"webpack:///"}