{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///src/@vex/animations/fade-in-up.animation.ts"],"names":["_c0","_c1","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CLICK_ACTION","nextUniqueId","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_clickAction","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","disableRipple","disabled","detectChanges","value","checked","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","emit","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","origin","options","focusVia","animSuffix","nativeCheckbox","_required","newValue","changed","ɵfac","MatCheckbox_Factory","t","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","selector","host","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","_MatCheckboxRequiredValidatorModule","ɵmod","ɵinj","_MatCheckboxRequiredValidatorModule_Factory","ngJitMode","declarations","exports","MatCheckboxModule","MatCheckboxModule_Factory","imports","SimpleSnackBar_div_2_Template","SimpleSnackBar_div_2_Template_button_click_1_listener","ctx_r1","action","ctx_r0","data","MatSnackBarContainer_ng_template_0_Template","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","clearTimeout","_durationTimeoutId","next","complete","dismissWithAction","duration","min","dispose","dismissedByAction","asObservable","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","message","hasAction","matSnackBarAnimations","snackBarState","transform","opacity","MatSnackBarContainer","snackBarConfig","_destroyed","_animationState","attachDomPortal","portal","_assertNotAttached","_applySnackBarClasses","_portalOutlet","_role","attachComponentPortal","attachTemplatePortal","fromState","toState","_completeExit","onEnter","run","setAttribute","onMicrotaskEmpty","pipe","panelClasses","panelClass","Array","isArray","forEach","cssClass","hasAttached","Error","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","animation","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_overlay","_live","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","component","config","_attach","_config","Object","assign","openFromComponent","_openedSnackBarRef","overlayRef","userInjector","viewContainerRef","injector","WeakMap","containerPortal","containerRef","attach","instance","content","userConfig","_createOverlay","container","_attachSnackBarContainer","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","state","overlayElement","className","matches","_animateSnackBar","afterDismissed","clear","enter","afterOpened","_dismissAfter","announce","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","create","parent","MatSnackBar_Factory","ɵprov","token","fadeInUpAnimation","fadeInUp400ms"],"mappings":"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","file":"default~ingresos-ingresos-mensuales-ingresos-mensuales-module~pages-auth-login-login-module~usuarios~416e4124-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * @breaking-change 10.0.0\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nlet MatCheckbox = /** @class */ (() => {\n    class MatCheckbox extends _MatCheckboxMixinBase {\n        constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, \n        /**\n         * @deprecated `_clickAction` parameter to be removed, use\n         * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n         * @breaking-change 10.0.0\n         */\n        _clickAction, _animationMode, _options) {\n            super(elementRef);\n            this._changeDetectorRef = _changeDetectorRef;\n            this._focusMonitor = _focusMonitor;\n            this._ngZone = _ngZone;\n            this._clickAction = _clickAction;\n            this._animationMode = _animationMode;\n            this._options = _options;\n            /**\n             * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n             * take precedence so this may be omitted.\n             */\n            this.ariaLabel = '';\n            /**\n             * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n             */\n            this.ariaLabelledby = null;\n            this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n            /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n            this.id = this._uniqueId;\n            /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n            this.labelPosition = 'after';\n            /** Name value will be applied to the input element if present */\n            this.name = null;\n            /** Event emitted when the checkbox's `checked` value changes. */\n            this.change = new EventEmitter();\n            /** Event emitted when the checkbox's `indeterminate` value changes. */\n            this.indeterminateChange = new EventEmitter();\n            /**\n             * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n             * @docs-private\n             */\n            this._onTouched = () => { };\n            this._currentAnimationClass = '';\n            this._currentCheckState = 0 /* Init */;\n            this._controlValueAccessorChangeFn = () => { };\n            this._checked = false;\n            this._disabled = false;\n            this._indeterminate = false;\n            this._options = this._options || {};\n            if (this._options.color) {\n                this.color = this._options.color;\n            }\n            this.tabIndex = parseInt(tabIndex) || 0;\n            // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n            this._clickAction = this._clickAction || this._options.clickAction;\n        }\n        /** Returns the unique id for the visual hidden input. */\n        get inputId() { return `${this.id || this._uniqueId}-input`; }\n        /** Whether the checkbox is required. */\n        get required() { return this._required; }\n        set required(value) { this._required = coerceBooleanProperty(value); }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n                if (!focusOrigin) {\n                    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                    // Angular does not expect events to be raised during change detection, so any state change\n                    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                    // telling the form control it has been touched until the next tick.\n                    Promise.resolve().then(() => {\n                        this._onTouched();\n                        this._changeDetectorRef.markForCheck();\n                    });\n                }\n            });\n            this._syncIndeterminate(this._indeterminate);\n        }\n        // TODO: Delete next major revision.\n        ngAfterViewChecked() { }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /**\n         * Whether the checkbox is checked.\n         */\n        get checked() { return this._checked; }\n        set checked(value) {\n            if (value != this.checked) {\n                this._checked = value;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is disabled. This fully overrides the implementation provided by\n         * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n         */\n        get disabled() { return this._disabled; }\n        set disabled(value) {\n            const newValue = coerceBooleanProperty(value);\n            if (newValue !== this.disabled) {\n                this._disabled = newValue;\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         */\n        get indeterminate() { return this._indeterminate; }\n        set indeterminate(value) {\n            const changed = value != this._indeterminate;\n            this._indeterminate = coerceBooleanProperty(value);\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(3 /* Indeterminate */);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n            this._syncIndeterminate(this._indeterminate);\n        }\n        _isRippleDisabled() {\n            return this.disableRipple || this.disabled;\n        }\n        /** Method being called whenever the label text changes. */\n        _onLabelTextChange() {\n            // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n            // component will be only marked for check, but no actual change detection runs automatically.\n            // Instead of going back into the zone in order to trigger a change detection which causes\n            // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n            // an explicit change detection for the checkbox view and its children.\n            this._changeDetectorRef.detectChanges();\n        }\n        // Implemented as part of ControlValueAccessor.\n        writeValue(value) {\n            this.checked = !!value;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnChange(fn) {\n            this._controlValueAccessorChangeFn = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        registerOnTouched(fn) {\n            this._onTouched = fn;\n        }\n        // Implemented as part of ControlValueAccessor.\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n        }\n        _getAriaChecked() {\n            if (this.checked) {\n                return 'true';\n            }\n            return this.indeterminate ? 'mixed' : 'false';\n        }\n        _transitionCheckState(newState) {\n            let oldState = this._currentCheckState;\n            let element = this._elementRef.nativeElement;\n            if (oldState === newState) {\n                return;\n            }\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.remove(this._currentAnimationClass);\n            }\n            this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n            this._currentCheckState = newState;\n            if (this._currentAnimationClass.length > 0) {\n                element.classList.add(this._currentAnimationClass);\n                // Remove the animation class to avoid animation when the checkbox is moved between containers\n                const animationClass = this._currentAnimationClass;\n                this._ngZone.runOutsideAngular(() => {\n                    setTimeout(() => {\n                        element.classList.remove(animationClass);\n                    }, 1000);\n                });\n            }\n        }\n        _emitChangeEvent() {\n            const event = new MatCheckboxChange();\n            event.source = this;\n            event.checked = this.checked;\n            this._controlValueAccessorChangeFn(this.checked);\n            this.change.emit(event);\n        }\n        /** Toggles the `checked` state of the checkbox. */\n        toggle() {\n            this.checked = !this.checked;\n        }\n        /**\n         * Event handler for checkbox input element.\n         * Toggles checked state if element is not disabled.\n         * Do not toggle on (change) event since IE doesn't fire change event when\n         *   indeterminate checkbox is clicked.\n         * @param event\n         */\n        _onInputClick(event) {\n            // We have to stop propagation for click events on the visual hidden input element.\n            // By default, when a user clicks on a label element, a generated click event will be\n            // dispatched on the associated input element. Since we are using a label element as our\n            // root container, the click event on the `checkbox` will be executed twice.\n            // The real click event will bubble up, and the generated click event also tries to bubble up.\n            // This will lead to multiple click events.\n            // Preventing bubbling for the second event will solve that issue.\n            event.stopPropagation();\n            // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n            if (!this.disabled && this._clickAction !== 'noop') {\n                // When user manually click on the checkbox, `indeterminate` is set to false.\n                if (this.indeterminate && this._clickAction !== 'check') {\n                    Promise.resolve().then(() => {\n                        this._indeterminate = false;\n                        this.indeterminateChange.emit(this._indeterminate);\n                    });\n                }\n                this.toggle();\n                this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n                // Emit our custom change event if the native input emitted one.\n                // It is important to only emit it, if the native input triggered one, because\n                // we don't want to trigger a change event, when the `checked` variable changes for example.\n                this._emitChangeEvent();\n            }\n            else if (!this.disabled && this._clickAction === 'noop') {\n                // Reset native input when clicked with noop. The native checkbox becomes checked after\n                // click, reset it to be align with `checked` value of `mat-checkbox`.\n                this._inputElement.nativeElement.checked = this.checked;\n                this._inputElement.nativeElement.indeterminate = this.indeterminate;\n            }\n        }\n        /** Focuses the checkbox. */\n        focus(origin = 'keyboard', options) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        _onInteractionEvent(event) {\n            // We always have to stop propagation on the change event.\n            // Otherwise the change event, from the input element, will bubble up and\n            // emit its event object to the `change` output.\n            event.stopPropagation();\n        }\n        _getAnimationClassForCheckStateTransition(oldState, newState) {\n            // Don't transition if animations are disabled.\n            if (this._animationMode === 'NoopAnimations') {\n                return '';\n            }\n            let animSuffix = '';\n            switch (oldState) {\n                case 0 /* Init */:\n                    // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                    // [checked] bound to it.\n                    if (newState === 1 /* Checked */) {\n                        animSuffix = 'unchecked-checked';\n                    }\n                    else if (newState == 3 /* Indeterminate */) {\n                        animSuffix = 'unchecked-indeterminate';\n                    }\n                    else {\n                        return '';\n                    }\n                    break;\n                case 2 /* Unchecked */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'unchecked-checked' : 'unchecked-indeterminate';\n                    break;\n                case 1 /* Checked */:\n                    animSuffix = newState === 2 /* Unchecked */ ?\n                        'checked-unchecked' : 'checked-indeterminate';\n                    break;\n                case 3 /* Indeterminate */:\n                    animSuffix = newState === 1 /* Checked */ ?\n                        'indeterminate-checked' : 'indeterminate-unchecked';\n                    break;\n            }\n            return `mat-checkbox-anim-${animSuffix}`;\n        }\n        /**\n         * Syncs the indeterminate value with the checkbox DOM node.\n         *\n         * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n         * property is supported on an element boils down to `if (propName in element)`. Domino's\n         * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n         * server-side rendering.\n         */\n        _syncIndeterminate(value) {\n            const nativeCheckbox = this._inputElement;\n            if (nativeCheckbox) {\n                nativeCheckbox.nativeElement.indeterminate = value;\n            }\n        }\n    }\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatCheckbox.ctorParameters = () => [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FocusMonitor },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n    ];\n    MatCheckbox.propDecorators = {\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n        id: [{ type: Input }],\n        required: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        name: [{ type: Input }],\n        change: [{ type: Output }],\n        indeterminateChange: [{ type: Output }],\n        value: [{ type: Input }],\n        _inputElement: [{ type: ViewChild, args: ['input',] }],\n        ripple: [{ type: ViewChild, args: [MatRipple,] }],\n        checked: [{ type: Input }],\n        disabled: [{ type: Input }],\n        indeterminate: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n    return MatCheckbox;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nlet MatCheckboxRequiredValidator = /** @class */ (() => {\n    class MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    }\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n    return MatCheckboxRequiredValidator;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nlet _MatCheckboxRequiredValidatorModule = /** @class */ (() => {\n    class _MatCheckboxRequiredValidatorModule {\n    }\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\n    return _MatCheckboxRequiredValidatorModule;\n})();\nlet MatCheckboxModule = /** @class */ (() => {\n    class MatCheckboxModule {\n    }\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n    return MatCheckboxModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, PortalInjector, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Injector, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nlet SimpleSnackBar = /** @class */ (() => {\n    class SimpleSnackBar {\n        constructor(snackBarRef, data) {\n            this.snackBarRef = snackBarRef;\n            this.data = data;\n        }\n        /** Performs the action on the snack bar. */\n        action() {\n            this.snackBarRef.dismissWithAction();\n        }\n        /** If the action button should be shown. */\n        get hasAction() {\n            return !!this.data.action;\n        }\n    }\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n    SimpleSnackBar.ctorParameters = () => [\n        { type: MatSnackBarRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n    return SimpleSnackBar;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nlet MatSnackBarContainer = /** @class */ (() => {\n    class MatSnackBarContainer extends BasePortalOutlet {\n        constructor(_ngZone, _elementRef, _changeDetectorRef, \n        /** The snack bar configuration. */\n        snackBarConfig) {\n            super();\n            this._ngZone = _ngZone;\n            this._elementRef = _elementRef;\n            this._changeDetectorRef = _changeDetectorRef;\n            this.snackBarConfig = snackBarConfig;\n            /** Whether the component has been destroyed. */\n            this._destroyed = false;\n            /** Subject for notifying that the snack bar has exited from view. */\n            this._onExit = new Subject();\n            /** Subject for notifying that the snack bar has finished entering the view. */\n            this._onEnter = new Subject();\n            /** The state of the snack bar animations. */\n            this._animationState = 'void';\n            /**\n             * Attaches a DOM portal to the snack bar container.\n             * @deprecated To be turned into a method.\n             * @breaking-change 10.0.0\n             */\n            this.attachDomPortal = (portal) => {\n                this._assertNotAttached();\n                this._applySnackBarClasses();\n                return this._portalOutlet.attachDomPortal(portal);\n            };\n            // Based on the ARIA spec, `alert` and `status` roles have an\n            // implicit `assertive` and `polite` politeness respectively.\n            if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n                this._role = 'alert';\n            }\n            else if (snackBarConfig.politeness === 'off') {\n                this._role = null;\n            }\n            else {\n                this._role = 'status';\n            }\n        }\n        /** Attach a component portal as content to this snack bar container. */\n        attachComponentPortal(portal) {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachComponentPortal(portal);\n        }\n        /** Attach a template portal as content to this snack bar container. */\n        attachTemplatePortal(portal) {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachTemplatePortal(portal);\n        }\n        /** Handle end of animations, updating the state of the snackbar. */\n        onAnimationEnd(event) {\n            const { fromState, toState } = event;\n            if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n                this._completeExit();\n            }\n            if (toState === 'visible') {\n                // Note: we shouldn't use `this` inside the zone callback,\n                // because it can cause a memory leak.\n                const onEnter = this._onEnter;\n                this._ngZone.run(() => {\n                    onEnter.next();\n                    onEnter.complete();\n                });\n            }\n        }\n        /** Begin animation of snack bar entrance into view. */\n        enter() {\n            if (!this._destroyed) {\n                this._animationState = 'visible';\n                this._changeDetectorRef.detectChanges();\n            }\n        }\n        /** Begin animation of the snack bar exiting from view. */\n        exit() {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            return this._onExit;\n        }\n        /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n        ngOnDestroy() {\n            this._destroyed = true;\n            this._completeExit();\n        }\n        /**\n         * Waits for the zone to settle before removing the element. Helps prevent\n         * errors where we end up removing an element which is in the middle of an animation.\n         */\n        _completeExit() {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        }\n        /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n        _applySnackBarClasses() {\n            const element = this._elementRef.nativeElement;\n            const panelClasses = this.snackBarConfig.panelClass;\n            if (panelClasses) {\n                if (Array.isArray(panelClasses)) {\n                    // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                    panelClasses.forEach(cssClass => element.classList.add(cssClass));\n                }\n                else {\n                    element.classList.add(panelClasses);\n                }\n            }\n            if (this.snackBarConfig.horizontalPosition === 'center') {\n                element.classList.add('mat-snack-bar-center');\n            }\n            if (this.snackBarConfig.verticalPosition === 'top') {\n                element.classList.add('mat-snack-bar-top');\n            }\n        }\n        /** Asserts that no content is already attached to the container. */\n        _assertNotAttached() {\n            if (this._portalOutlet.hasAttached()) {\n                throw Error('Attempting to attach snack bar content after content is already attached');\n            }\n        }\n    }\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\n    MatSnackBarContainer.ctorParameters = () => [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: MatSnackBarConfig }\n    ];\n    MatSnackBarContainer.propDecorators = {\n        _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n    return MatSnackBarContainer;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatSnackBarModule = /** @class */ (() => {\n    class MatSnackBarModule {\n    }\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n    return MatSnackBarModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nlet MatSnackBar = /** @class */ (() => {\n    class MatSnackBar {\n        constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n            this._overlay = _overlay;\n            this._live = _live;\n            this._injector = _injector;\n            this._breakpointObserver = _breakpointObserver;\n            this._parentSnackBar = _parentSnackBar;\n            this._defaultConfig = _defaultConfig;\n            /**\n             * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n             * If there is a parent snack-bar service, all operations should delegate to that parent\n             * via `_openedSnackBarRef`.\n             */\n            this._snackBarRefAtThisLevel = null;\n        }\n        /** Reference to the currently opened snackbar at *any* level. */\n        get _openedSnackBarRef() {\n            const parent = this._parentSnackBar;\n            return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n        }\n        set _openedSnackBarRef(value) {\n            if (this._parentSnackBar) {\n                this._parentSnackBar._openedSnackBarRef = value;\n            }\n            else {\n                this._snackBarRefAtThisLevel = value;\n            }\n        }\n        /**\n         * Creates and dispatches a snack bar with a custom component for the content, removing any\n         * currently opened snack bars.\n         *\n         * @param component Component to be instantiated.\n         * @param config Extra configuration for the snack bar.\n         */\n        openFromComponent(component, config) {\n            return this._attach(component, config);\n        }\n        /**\n         * Creates and dispatches a snack bar with a custom template for the content, removing any\n         * currently opened snack bars.\n         *\n         * @param template Template to be instantiated.\n         * @param config Extra configuration for the snack bar.\n         */\n        openFromTemplate(template, config) {\n            return this._attach(template, config);\n        }\n        /**\n         * Opens a snackbar with a message and an optional action.\n         * @param message The message to show in the snackbar.\n         * @param action The label for the snackbar action.\n         * @param config Additional configuration options for the snackbar.\n         */\n        open(message, action = '', config) {\n            const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n            // Since the user doesn't have access to the component, we can\n            // override the data to pass in our own message and action.\n            _config.data = { message, action };\n            if (!_config.announcementMessage) {\n                _config.announcementMessage = message;\n            }\n            return this.openFromComponent(SimpleSnackBar, _config);\n        }\n        /**\n         * Dismisses the currently-visible snack bar.\n         */\n        dismiss() {\n            if (this._openedSnackBarRef) {\n                this._openedSnackBarRef.dismiss();\n            }\n        }\n        ngOnDestroy() {\n            // Only dismiss the snack bar at the current level on destroy.\n            if (this._snackBarRefAtThisLevel) {\n                this._snackBarRefAtThisLevel.dismiss();\n            }\n        }\n        /**\n         * Attaches the snack bar container component to the overlay.\n         */\n        _attachSnackBarContainer(overlayRef, config) {\n            const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n            const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n                [MatSnackBarConfig, config]\n            ]));\n            const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n            const containerRef = overlayRef.attach(containerPortal);\n            containerRef.instance.snackBarConfig = config;\n            return containerRef.instance;\n        }\n        /**\n         * Places a new component or a template as the content of the snack bar container.\n         */\n        _attach(content, userConfig) {\n            const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n            const overlayRef = this._createOverlay(config);\n            const container = this._attachSnackBarContainer(overlayRef, config);\n            const snackBarRef = new MatSnackBarRef(container, overlayRef);\n            if (content instanceof TemplateRef) {\n                const portal = new TemplatePortal(content, null, {\n                    $implicit: config.data,\n                    snackBarRef\n                });\n                snackBarRef.instance = container.attachTemplatePortal(portal);\n            }\n            else {\n                const injector = this._createInjector(config, snackBarRef);\n                const portal = new ComponentPortal(content, undefined, injector);\n                const contentRef = container.attachComponentPortal(portal);\n                // We can't pass this via the injector, because the injector is created earlier.\n                snackBarRef.instance = contentRef.instance;\n            }\n            // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n            // appropriate. This class is applied to the overlay element because the overlay must expand to\n            // fill the width of the screen for full width snackbars.\n            this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n                const classList = overlayRef.overlayElement.classList;\n                const className = 'mat-snack-bar-handset';\n                state.matches ? classList.add(className) : classList.remove(className);\n            });\n            this._animateSnackBar(snackBarRef, config);\n            this._openedSnackBarRef = snackBarRef;\n            return this._openedSnackBarRef;\n        }\n        /** Animates the old snack bar out and the new one in. */\n        _animateSnackBar(snackBarRef, config) {\n            // When the snackbar is dismissed, clear the reference to it.\n            snackBarRef.afterDismissed().subscribe(() => {\n                // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n                if (this._openedSnackBarRef == snackBarRef) {\n                    this._openedSnackBarRef = null;\n                }\n                if (config.announcementMessage) {\n                    this._live.clear();\n                }\n            });\n            if (this._openedSnackBarRef) {\n                // If a snack bar is already in view, dismiss it and enter the\n                // new snack bar after exit animation is complete.\n                this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                    snackBarRef.containerInstance.enter();\n                });\n                this._openedSnackBarRef.dismiss();\n            }\n            else {\n                // If no snack bar is in view, enter the new snack bar.\n                snackBarRef.containerInstance.enter();\n            }\n            // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n            if (config.duration && config.duration > 0) {\n                snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n            }\n            if (config.announcementMessage) {\n                this._live.announce(config.announcementMessage, config.politeness);\n            }\n        }\n        /**\n         * Creates a new overlay and places it in the correct location.\n         * @param config The user-specified snack bar config.\n         */\n        _createOverlay(config) {\n            const overlayConfig = new OverlayConfig();\n            overlayConfig.direction = config.direction;\n            let positionStrategy = this._overlay.position().global();\n            // Set horizontal position.\n            const isRtl = config.direction === 'rtl';\n            const isLeft = (config.horizontalPosition === 'left' ||\n                (config.horizontalPosition === 'start' && !isRtl) ||\n                (config.horizontalPosition === 'end' && isRtl));\n            const isRight = !isLeft && config.horizontalPosition !== 'center';\n            if (isLeft) {\n                positionStrategy.left('0');\n            }\n            else if (isRight) {\n                positionStrategy.right('0');\n            }\n            else {\n                positionStrategy.centerHorizontally();\n            }\n            // Set horizontal position.\n            if (config.verticalPosition === 'top') {\n                positionStrategy.top('0');\n            }\n            else {\n                positionStrategy.bottom('0');\n            }\n            overlayConfig.positionStrategy = positionStrategy;\n            return this._overlay.create(overlayConfig);\n        }\n        /**\n         * Creates an injector to be used inside of a snack bar component.\n         * @param config Config that was used to create the snack bar.\n         * @param snackBarRef Reference to the snack bar.\n         */\n        _createInjector(config, snackBarRef) {\n            const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n            return new PortalInjector(userInjector || this._injector, new WeakMap([\n                [MatSnackBarRef, snackBarRef],\n                [MAT_SNACK_BAR_DATA, config.data]\n            ]));\n        }\n    }\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\n    MatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\n    MatSnackBar.ctorParameters = () => [\n        { type: Overlay },\n        { type: LiveAnnouncer },\n        { type: Injector },\n        { type: BreakpointObserver },\n        { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n        { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n    return MatSnackBar;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n"]}