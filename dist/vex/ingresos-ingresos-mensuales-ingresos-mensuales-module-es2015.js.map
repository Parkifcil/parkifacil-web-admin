{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","./src/app/ingresos/detalle-concesion/detalle-concesion.component.ts","./src/app/ingresos/detalle-concesion/detalle-concesion.component.html","./src/app/ingresos/detalle-concesion/detalle-concesion.module.ts","./src/app/ingresos/ingresos-mensuales/ingresos-mensuales-routing.module.ts","./src/app/ingresos/ingresos-mensuales/ingresos-mensuales.component.ts","./src/app/ingresos/ingresos-mensuales/ingresos-mensuales.component.html","./src/app/ingresos/ingresos-mensuales/ingresos-mensuales.module.ts"],"names":[],"mappings":"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AoB,IAAI;AACnF;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,6DAAe;AACjC,mBAAmB,8DAAO,GAAG,oBAAoB;AACjD,SAAS,GAAG,EAAE,EAAE;AAChB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,+CAA+C;AAC/H,iCAAiC,+DAAwB,EAAE,0IAA0I;AACrM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,mDAAmD;AAC3I,qCAAqC,+DAAwB,EAAE,qHAAqH;AACpL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,mDAAmD;AAC3I,qCAAqC,+DAAwB,EAAE,qHAAqH;AACpL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA,gDAAgD,kFAAoB;AACpE;AACA;AACA,0BAA0B,qBAAqB;AAC/C,+BAA+B,mBAAmB,2BAA2B,EAAE;AAC/E;AACA,yBAAyB,wBAAwB;AACjD;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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A,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,8EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAGf,+EACI;QAAA,uHAAsC;QACtC,uHAAwC;QAC5C,qEAAe;QAEf,yHAAuD;QACvD,yHAA6D;QACjE,4DAAQ;QACZ,4DAAM;QACN,kFAAyF;QAC7F,4DAAqB;;QA9nBsB,0DAAsC;QAAtC,oGAAsC;QAKnE,0DAAkB;QAAlB,+EAAkB;QAKP,0DAAyB;QAAzB,sFAAyB;QA+mBnB,4DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAGrD,0DAAmC;QAAnC,gGAAmC;o3DD5mBxC;YACV,6EAAW;SACZ;6FAEU,yBAAyB;cARrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;gBACjD,UAAU,EAAE;oBACV,6EAAW;iBACZ;aACF;;sBAGc,oDAAM;uBAAC,wEAAe;;kBAUlC,uDAAS;mBAAC,gEAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;kBAClC,uDAAS;mBAAC,wEAAY;;kBACtB,uDAAS;mBAAC,8DAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;AAqGtC,MAAM,KAAK,GAAU,EAAE,CAAC;;;;;;;;;;;;;AEzIxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAES;AACH;AACM;AACA;AACJ;AACE;AACA;AACE;AACJ;AACD;AACO;AACN;AACE;AACQ;AAEF;AAEW;;AA0BnE,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBApBxB;YACP,4DAAY;YACZ,qEAAgB;YAChB,kEAAmB;YACnB,wEAAe;YACf,wEAAe;YACf,oEAAa;YACb,sEAAc;YACd,sEAAc;YACd,wEAAe;YACf,qEAAa;YACb,oEAAU;YACV,2EAAgB;YAChB,qEAAa;YACb,uEAAc;YACd,+EAAkB;YAClB,6EAAiB;SAClB;mIAGU,sBAAsB,mBArBlB,uFAAyB,aAEtC,4DAAY;QACZ,qEAAgB;QAChB,kEAAmB;QACnB,wEAAe;QACf,wEAAe;QACf,oEAAa;QACb,sEAAc;QACd,sEAAc;QACd,wEAAe;QACf,qEAAa;QACb,oEAAU;QACV,2EAAgB;QAChB,qEAAa;QACb,uEAAc;QACd,+EAAkB;QAClB,6EAAiB;6FAIR,sBAAsB;cAtBlC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,uFAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,4DAAY;oBACZ,qEAAgB;oBAChB,kEAAmB;oBACnB,wEAAe;oBACf,wEAAe;oBACf,oEAAa;oBACb,sEAAc;oBACd,sEAAc;oBACd,wEAAe;oBACf,qEAAa;oBACb,oEAAU;oBACV,2EAAgB;oBAChB,qEAAa;oBACb,uEAAc;oBACd,+EAAkB;oBAClB,6EAAiB;iBAClB;gBACD,eAAe,EAAE,CAAC,uFAAyB,CAAC;aAC7C;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAGqB;AACd;;;AAE9D,6BAA6B;AAE7B,MAAM,MAAM,GAAc;IACxB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAA0B;QACrC,WAAW,EAAE,CAAC,sEAAS,CAAC;QACxB,IAAI,EAAE;YACJ,oBAAoB,EAAE,IAAI;YAC1B,yBAAyB;YACzB,cAAc,EAAE,KAAK;SACtB;KACF;CACF,CAAC;AAMK,MAAM,8BAA8B;;6GAA9B,8BAA8B;sLAA9B,8BAA8B,kBAHhC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,8BAA8B,uFAF/B,4DAAY;6FAEX,8BAA8B;cAJ1C,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBkI;AAC9D;AAEe;AACX;AACK;AACM;AACT;AAEd;AACZ;AACU;AACD;AAGE;AACJ;AACY;AAEC;AAElB;AAE0C;;;;;;;;;;;;;;;;;;;;;ICGjF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF4B,gFAAmB;IAC1D,0DACF;IADE,0FACF;;;IAMA,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFmC,gFAAmB;IACjE,0DACF;IADE,yFACF;;;IAiGF,oFAOE;IAAA,0EAA8B;IAAA,uDAAe;IAAA,4DAAM;IACrD,4DAAgB;;;IAHd,wEAAoB;IADpB,uFAA+B;IAF/B,kFAAqB;IAKS,0DAAe;IAAf,8EAAe;;;IAkBjD,uEAAkC;IAAA,kEAAO;IAAA,4DAAO;;;IAyC9C,yEAAsD;IAAA,yEAAS;IAAA,4DAAK;;;;IACpE,yEAKE;IAFA,uYAAwD;IAExD,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uGACF;;;IAIA,yEACE;IAAA,2EACF;IAAA,4DAAK;;;;IACL,yEAKE;IAFA,uYAAwD;IAExD,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,qGACF;;;IAIA,yEACE;IAAA,0EACF;IAAA,4DAAK;;;;IACL,yEAKE;IAFA,uYAAwD;IAExD,uDACF;;IAAA,4DAAK;;;IADH,0DACF;IADE,6LACF;;;IAIA,yEACE;IAAA,mFACF;IAAA,4DAAK;;;;IACL,yEAKE;IAFA,uYAAwD;IAExD,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,wGACF;;;IAIA,yEACE;IAAA,kFACF;IAAA,4DAAK;;;;IACL,yEAKE;IAFA,uYAAwD;IAExD,uDACF;;IAAA,4DAAK;;;IADH,0DACF;IADE,gMACF;;;IAIA,yEAAsD;IAAA,gEAAK;IAAA,4DAAK;;;;IAChE,yEAKE;IAFA,uYAAwD;IAExD,uDACF;;IAAA,4DAAK;;;IADH,0DACF;IADE,sLACF;;;IAiBF,oEAA4D;;;IAC5D,oEAAiE;;ADjQzE,2BAA2B;IAed,0BAA0B,SAA1B,0BAA0B;IAErC,YAAmB,EAAe,EACd,EAAqB,EACrB,MAAiB,EACjB,YAA0B,EAC1B,yBAAkD;QAJnD,OAAE,GAAF,EAAE,CAAa;QACd,OAAE,GAAF,EAAE,CAAmB;QACrB,WAAM,GAAN,MAAM,CAAW;QACjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,8BAAyB,GAAzB,yBAAyB,CAAyB;QAItE,qEAAqE;QACrE,kBAAkB;QAClB,UAAK,GAAW,EAAE,CAAC;QAEnB,mBAAmB;QACnB,aAAQ,GAAW;YACjB,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC;YAC3B,EAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAC;YAC7B,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC;YAC3B,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC;YAC3B,EAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAC;YAC1B,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC;YAC3B,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAC;YAC3B,EAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAC;YAC5B,EAAC,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,EAAC;YAChC,EAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAC;YAC9B,EAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAC;YAChC,EAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAC;SACjC,CAAC;QAEF,+CAA+C;QAC/C,+CAA+C;QAC/C,yBAAoB,GAAU,EAAE,CAAC;QACjC,mBAAc,GAAU,EAAE,CAAC;QAO3B,aAAQ,GAAG,EAAE,CAAC;QACd,oBAAe,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7C,qBAAgB,GAAa,CAAE,iBAAiB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACnI,cAAS,GAAG,IAAI,wEAAc,CAAM,IAAI,EAAE,EAAE,CAAC,CAAC;QAC9C,eAAU,GAAG,IAAI,0EAAkB,CAAM,KAAK,CAAC,CAAC;QAEhD,SAAS;QACT,eAAU,GAAG,0EAAU,CAAC;QACxB,aAAQ,GAAG,wEAAQ,CAAC;QACpB,eAAU,GAAG,kFAAU,CAAC;QAOxB,eAAU,GAAG,IAAI,0DAAW,EAAE,CAAC;IAhDnB,CAAC;IAoDb,QAAQ;QACN,IAAI,CAAC,qCAAqC,EAAE,CAAC;QAC7C,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,qBAAqB;QACrB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAC/B,6EAAc,CAAC,IAAI,CAAC,CACrB,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAEnD,CAAC;IAED,8BAA8B;IAC9B,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QACD,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACrB,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,2DAA2D;IAC3D,0BAA0B;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACjD,gDAAgD;QAChD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QACvF,6CAA6C;QAC7C,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACzC,CAAC;IAED,8DAA8D;IAC9D,mBAAmB;IACnB,qCAAqC,CAAE,GAAQ,EAAE,IAAS;QACxD,IAAK,GAAG,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE;YAC9B,OAAO;SACR;QACD,IAAK,GAAG,KAAK,EAAE,IAAI,IAAI,KAAK,EAAE,EAAE;YAC9B,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,wCAAwC,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC;QAC3D,IAAI,CAAC,0CAA0C,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC;QAC7D,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,CAAE,GAAG,CAAE,CAAC;QACzD,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAE,IAAI,CAAE,CAAC;QAE3D,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;QAC1E,6CAA6C;QAC7C,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IAED,sBAAsB,CAAC,cAAmB;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAyB,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,sDAAsD;IACtD,mDAAmD;IACnD,+BAA+B;IAC/B,wCAAwC,CAAE,GAAQ,EAAE,IAAS;QAC3D,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,yBAAyB,CAAC,kCAAkC,CAAC,GAAG,EAAE,IAAI,CAAC;aACvE,IAAI,CAAC,CAAE,QAAa,EAAG,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrF,EAAC,IAAI,EAAE,+BAA+B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACxG,EAAC,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACnG,EAAC,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAChG,EAAC,IAAI,EAAE,4BAA4B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrG,EAAC,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC/F,EAAC,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACjG,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC1F,EAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC3F,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACxF,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC1F,EAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACnF,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAExF,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAC3K,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAClK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EACnK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,qBAAqB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EACnK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAClK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAC5J,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACpK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,iCAAiC,EAAC,EAChL,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,iCAAiC,EAAC,CAClL,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,0CAA0C,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,sDAAsD;IACtD,wDAAwD;IACxD,2BAA2B;IAC3B,0CAA0C,CAAC,GAAQ,EAAE,IAAS;QAC5D,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,yBAAyB,CAAC,qCAAqC,CAAC,GAAG,EAAE,IAAI,CAAC;aAC1E,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3B,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACjD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,sDAAsD;IACtD,qCAAqC;IACrC,qCAAqC;QAEnC,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,yBAAyB,CAAC,iCAAiC,CAAC,KAAK,EAAE,IAAI,CAAC;aACxE,IAAI,CAAC,CAAC,QAAY,EAAE,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1C,6EAA6E;YAC7E,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAEvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAsD;IACtD,oCAAoC;IACpC,mCAAmC;QAEjC,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,yBAAyB,CAAC,8BAA8B,CAAC,KAAK,EAAE,IAAI,CAAC;aACrE,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrF,EAAC,IAAI,EAAE,+BAA+B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACxG,EAAC,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACnG,EAAC,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAChG,EAAC,IAAI,EAAE,4BAA4B,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrG,EAAC,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC/F,EAAC,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACjG,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC1F,EAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC3F,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACxF,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EAC1F,EAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACnF,EAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACxF,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,yBAAyB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAC3K,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAClK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EACnK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,qBAAqB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACrK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EACnK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAClK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,sBAAsB,EAAC,EAC5J,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,oBAAoB,EAAC,EACpK,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,iCAAiC,EAAC,EAChL,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,iCAAiC,EAAC,CAClL,CAAC;YACF,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,2DAA2D;IAC3D,eAAe;QAEb,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAElC,KAAK,IAAI,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE;YAChD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;SAC3C;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC;IAED,6DAA6D;IAC7D,YAAY;IACZ,qBAAqB,CAAC,GAAQ;QAC5B,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAC9B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC3B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC5B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;SAC7B;QACD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;SACjC;QACD,IAAI,GAAG,KAAK,EAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAC9B;QACD,IAAI,GAAG,KAAK,EAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAChC;QACD,IAAI,GAAG,KAAK,EAAE,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAChC;IACH,CAAC;IAED,WAAW,KAAW,CAAC;CAExB;oGApSY,0BAA0B;0GAA1B,0BAA0B;wEAoC1B,gEAAQ;wEACR,yEAAY;wEACZ,8DAAO;;;;;;;;QCnFpB,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAKE;QAAA,0EAIE;QAAA,wEAAmD;QACrD,4DAAO;QACP,0EAAiC;QAAA,6EAAkB;QAAA,4DAAO;QAC5D,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,yEACE;QACA,yEACE;QAAA,sEAAI;QAAA,gFAAoB;QAAA,4DAAK;QAC7B,wEACE;QAAA,qFACE;QAAA,iFAAsB;QAAA,0EAAc;QAAA,4DAAY;QAChD,sFACE;QAAA,uIACE;QAEJ,4DAAa;QACf,4DAAiB;QACjB,qFACE;QAAA,iFAAsB;QAAA,+EAAc;QAAA,4DAAY;QAChD,sFACE;QAAA,uIACE;QAEJ,4DAAa;QACf,4DAAiB;QAEjB,8EAME;QAFA,4WAAS,+DAA4D,IAAC;QAEtE,qEACF;QAAA,4DAAS;QAmDX,4DAAO;QACT,4DAAM;QA4BN,2EACE;QAAA,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,2EACE;QAAA,qFACE;QAAA,6IAOE;QAEJ,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EAKE;QAAA,0EAKE;QAAA,2HAAkC;QACpC,4DAAK;QACL,2EAOE;QAAA,0EAAmD;QACnD,wEAMF;QAAA,4DAAM;QACN,uEAAoB;QACpB,8EAOE;QAAA,2EAAyC;QAC3C,4DAAS;QACX,4DAAM;QACR,4DAAM;QAEN,2FACE;QAAA,2EACE;QAAA,0EAA2B;QAAA,kFAAsB;QAAA,4DAAK;QACtD,iFAOE;QAAA,6EACE;QAAA,uHAAsD;QACtD,uHAKE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHACE;QAEF,uHAKE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHACE;QAEF,uHAKE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHACE;QAEF,uHAKE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHACE;QAEF,uHAKE;QAEJ,qEAAe;QAEf,6EACE;QAAA,uHAAsD;QACtD,uHAKE;QAEJ,qEAAe;QAgBf,uHAAuD;QACvD,uHAA4D;QAC9D,4DAAQ;QACR,gFAIiB;QACnB,4DAAM;QACR,4DAA0B;QAC5B,4DAAM;;QA/RI,0DAAQ;QAAR,+EAAQ;QAGC,0DAAmB;QAAnB,gFAAmB;QAExB,0DAAY;QAAZ,mFAAY;QAYF,2DAA4B;QAA5B,iFAA4B;QAQ5B,0DAAmC;QAAnC,uFAAmC;QA+FnD,0DACF;QADE,sJACF;QAIM,0DAA0B;QAA1B,8EAA0B;QAwBxB,0DAA2B;QAA3B,yFAA2B;QASxB,0DAAmB;QAAnB,gFAAmB;QAE1B,0DAA0B;QAA1B,uFAA0B;QAclB,0DAAmB;QAAnB,gFAAmB;QAW7B,0DAAyB;QAAzB,sFAAyB;QA4FN,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAA+C;QAA/C,kGAA+C;QAG3D,0DAAmC;QAAnC,gGAAmC;gxHD9P7B;YACV,+EAAY;YACZ,wFAAgB;YAChB,6EAAW;YACX,kFAAa;YACb,wFAAgB;SACjB;AAGU,0BAA0B;IAdtC,2EAAY,EAAG;GAcH,0BAA0B,CAoStC;AApSsC;6FAA1B,0BAA0B;cAbtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;gBAClD,UAAU,EAAE;oBACV,+EAAY;oBACZ,wFAAgB;oBAChB,6EAAW;oBACX,kFAAa;oBACb,wFAAgB;iBACjB;gBACD,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;kBAqCE,uDAAS;mBAAC,gEAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;kBAClC,uDAAS;mBAAC,yEAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;kBACxC,uDAAS;mBAAC,8DAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;AAgQtC,MAAM,KAAK,GAAU,EAAE,CAAC;;;;;;;;;;;;;AEnVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEsC;AACT;AACW;AAEI;AACnC;AACoC;AAC3B;AACR;AACM;AACR;AACI;AACJ;AACD;AACY;AACL;AACyB;AAC3B;AACoB;AACP;AACqC;AAC1C;AACV;AACc;AACP;AACH;AACN;AAEA;AACI;AACK;AACP;AACI;;AAuCtD,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAnCzB;YACP,4DAAY;YACZ,iGAA8B;YAC9B,kGAAsB;YACtB,qEAAa;YACb,+FAAgB;YAChB,qEAAgB;YAChB,gGAAiB;YACjB,8EAAkB;YAClB,sEAAc;YACd,6EAAiB;YACjB,qEAAa;YACb,yEAAe;YACf,qEAAa;YACb,oEAAU;YACV,2DAAW;YACX,2EAAgB;YAChB,mEAAmB;YACnB,2FAAe;YACf,yEAAe;YACf,mFAAe;YACf,sFAAqB;YACrB,kHAAsB;YACtB,iFAAmB;YACnB,uEAAc;YACd,qFAAqB;YACrB,8EAAiB;YACjB,2EAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,8EAAiB;YACjB,uEAAc;YACd,2EAAgB;SACjB;mIAEU,uBAAuB,mBApCnB,wFAA0B,aAEvC,4DAAY;QACZ,iGAA8B;QAC9B,kGAAsB;QACtB,qEAAa;QACb,+FAAgB;QAChB,qEAAgB;QAChB,gGAAiB;QACjB,8EAAkB;QAClB,sEAAc;QACd,6EAAiB;QACjB,qEAAa;QACb,yEAAe;QACf,qEAAa;QACb,oEAAU;QACV,2DAAW;QACX,2EAAgB;QAChB,mEAAmB;QACnB,2FAAe;QACf,yEAAe;QACf,mFAAe;QACf,sFAAqB;QACrB,kHAAsB;QACtB,iFAAmB;QACnB,uEAAc;QACd,qFAAqB;QACrB,8EAAiB;QACjB,2EAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,8EAAiB;QACjB,uEAAc;QACd,2EAAgB;6FAGP,uBAAuB;cArCnC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,wFAA0B,CAAC;gBAC1C,OAAO,EAAE;oBACP,4DAAY;oBACZ,iGAA8B;oBAC9B,kGAAsB;oBACtB,qEAAa;oBACb,+FAAgB;oBAChB,qEAAgB;oBAChB,gGAAiB;oBACjB,8EAAkB;oBAClB,sEAAc;oBACd,6EAAiB;oBACjB,qEAAa;oBACb,yEAAe;oBACf,qEAAa;oBACb,oEAAU;oBACV,2DAAW;oBACX,2EAAgB;oBAChB,mEAAmB;oBACnB,2FAAe;oBACf,yEAAe;oBACf,mFAAe;oBACf,sFAAqB;oBACrB,kHAAsB;oBACtB,iFAAmB;oBACnB,uEAAc;oBACd,qFAAqB;oBACrB,8EAAiB;oBACjB,2EAAgB;oBAChB,qEAAa;oBACb,yEAAe;oBACf,8EAAiB;oBACjB,uEAAc;oBACd,2EAAgB;iBACjB;aACF","file":"ingresos-ingresos-mensuales-ingresos-mensuales-module-es2015.js","sourcesContent":["import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatGridTile = /** @class */ (() => {\n    class MatGridTile {\n        constructor(_element, _gridList) {\n            this._element = _element;\n            this._gridList = _gridList;\n            this._rowspan = 1;\n            this._colspan = 1;\n        }\n        /** Amount of rows that the grid tile takes up. */\n        get rowspan() { return this._rowspan; }\n        set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n        /** Amount of columns that the grid tile takes up. */\n        get colspan() { return this._colspan; }\n        set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n        /**\n         * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n         * \"Changed after checked\" errors that would occur with HostBinding.\n         */\n        _setStyle(property, value) {\n            this._element.nativeElement.style[property] = value;\n        }\n    }\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatGridTile.ctorParameters = () => [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n    ];\n    MatGridTile.propDecorators = {\n        rowspan: [{ type: Input }],\n        colspan: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\n    return MatGridTile;\n})();\nlet MatGridTileText = /** @class */ (() => {\n    class MatGridTileText {\n        constructor(_element) {\n            this._element = _element;\n        }\n        ngAfterContentInit() {\n            setLines(this._lines, this._element);\n        }\n    }\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n    MatGridTileText.ctorParameters = () => [\n        { type: ElementRef }\n    ];\n    MatGridTileText.propDecorators = {\n        _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\n    return MatGridTileText;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridAvatarCssMatStyler = /** @class */ (() => {\n    class MatGridAvatarCssMatStyler {\n    }\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n    return MatGridAvatarCssMatStyler;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileHeaderCssMatStyler = /** @class */ (() => {\n    class MatGridTileHeaderCssMatStyler {\n    }\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n    return MatGridTileHeaderCssMatStyler;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileFooterCssMatStyler = /** @class */ (() => {\n    class MatGridTileFooterCssMatStyler {\n    }\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n    return MatGridTileFooterCssMatStyler;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nlet MatGridList = /** @class */ (() => {\n    class MatGridList {\n        constructor(_element, _dir) {\n            this._element = _element;\n            this._dir = _dir;\n            /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n            this._gutter = '1px';\n        }\n        /** Amount of columns in the grid list. */\n        get cols() { return this._cols; }\n        set cols(value) {\n            this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n        }\n        /** Size of the grid list's gutter in pixels. */\n        get gutterSize() { return this._gutter; }\n        set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n        /** Set internal representation of row height from the user-provided value. */\n        get rowHeight() { return this._rowHeight; }\n        set rowHeight(value) {\n            const newValue = `${value == null ? '' : value}`;\n            if (newValue !== this._rowHeight) {\n                this._rowHeight = newValue;\n                this._setTileStyler(this._rowHeight);\n            }\n        }\n        ngOnInit() {\n            this._checkCols();\n            this._checkRowHeight();\n        }\n        /**\n         * The layout calculation is fairly cheap if nothing changes, so there's little cost\n         * to run it frequently.\n         */\n        ngAfterContentChecked() {\n            this._layoutTiles();\n        }\n        /** Throw a friendly error if cols property is missing */\n        _checkCols() {\n            if (!this.cols) {\n                throw Error(`mat-grid-list: must pass in number of columns. ` +\n                    `Example: <mat-grid-list cols=\"3\">`);\n            }\n        }\n        /** Default to equal width:height if rowHeight property is missing */\n        _checkRowHeight() {\n            if (!this._rowHeight) {\n                this._setTileStyler('1:1');\n            }\n        }\n        /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n        _setTileStyler(rowHeight) {\n            if (this._tileStyler) {\n                this._tileStyler.reset(this);\n            }\n            if (rowHeight === MAT_FIT_MODE) {\n                this._tileStyler = new FitTileStyler();\n            }\n            else if (rowHeight && rowHeight.indexOf(':') > -1) {\n                this._tileStyler = new RatioTileStyler(rowHeight);\n            }\n            else {\n                this._tileStyler = new FixedTileStyler(rowHeight);\n            }\n        }\n        /** Computes and applies the size and position for all children grid tiles. */\n        _layoutTiles() {\n            if (!this._tileCoordinator) {\n                this._tileCoordinator = new TileCoordinator();\n            }\n            const tracker = this._tileCoordinator;\n            const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n            const direction = this._dir ? this._dir.value : 'ltr';\n            this._tileCoordinator.update(this.cols, tiles);\n            this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n            tiles.forEach((tile, index) => {\n                const pos = tracker.positions[index];\n                this._tileStyler.setStyle(tile, pos.row, pos.col);\n            });\n            this._setListStyle(this._tileStyler.getComputedHeight());\n        }\n        /** Sets style on the main grid-list element, given the style name and value. */\n        _setListStyle(style) {\n            if (style) {\n                this._element.nativeElement.style[style[0]] = style[1];\n            }\n        }\n    }\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatGridList.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ];\n    MatGridList.propDecorators = {\n        _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n        cols: [{ type: Input }],\n        gutterSize: [{ type: Input }],\n        rowHeight: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\n    return MatGridList;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatGridListModule = /** @class */ (() => {\n    class MatGridListModule {\n    }\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList, MatGridTile, MatGridTileText, MatLineModule,\n        MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n    return MatGridListModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import { Component, Inject, OnInit, ChangeDetectorRef, AfterViewInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\n\nimport { DetalleConcesionModel } from '../../models/detalleconcesion.model';\nimport { IngresoMensualesService } from '../../services/ingreso-mensuales.service';\n\n@Component({\n  selector: 'vex-detalle-concesion',\n  templateUrl: './detalle-concesion.component.html',\n  styleUrls: ['./detalle-concesion.component.scss'],\n  animations: [\n    stagger40ms\n  ],\n})\nexport class DetalleConcesionComponent implements OnInit, AfterViewInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public intIdConcesion: any,\n              private dialogRef: MatDialogRef<DetalleConcesionComponent>,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private ingresosmesualesservices: IngresoMensualesService) { \n\n                this.mtdobtenerfechaseleccionada();\n              }\n\n  // propiedades del mat-tabla\n  @ViewChild(MatTable, {static: true}) table: MatTable<Element>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [10, 20, 30, 50];\n  \n  // pageEvent: PageEvent;\n  displayedColumns: string[] = [\n    'id', 'createdBy', 'createdDate', 'lastModifiedBy',\n    'lastModifiedDate', 'bitStatus', 'strPlaca', 'strLatitud', 'strLongitud',\n    'booleanAutoRecarga', 'booleanMulta', 'dtHoraInicio', 'dtmFechaInsercionDescuento', 'dtmFechaDescuento',\n    'dtmHoraFin', 'intTiempoComprado', 'int_tiempo', 'fltMonedaSaldoPrevioDescuento', 'fltMonto',\n    'fltMontoInicial', 'fltPorcentajeComision', 'fltMontoPorcentaje', 'fltTotalConComision',\n    'strNombreConcesion', 'fltSaldoAnterior', 'intTiempoDevuelto', 'fltMontoDevolucion', 'fltMontoPorcDevolucion',\n    'fltTotalDevConComision', 'fltMontoReal', 'fltSaldoPrevioDescuento', 'fltValorDescuento',\n    'fltValorDevuelto', 'fltValorFinalDescuento', 'strCambioDescuento', 'strCodigoAutorizacion', 'strCodigoTransaccion',\n    'strComentarios', 'strHashTarjeta', 'strInstalacion', 'strInstalacionAbrv', 'strMonedaValorDescuento',\n    'strReferenciaOperacion', 'strSo', 'strTipo', 'strVersionapp', 'intIdEspacio', 'intIdSaldoId', 'intIdUsuarioId',\n    'intIdVehiculoId', 'tbespacios', 'tbsaldo', 'tbvehiculos', 'intidconcesionId', 'tbconcesiones', 'intIdMulta',\n    'insDescription', 'insShortdesc', 'balanceBefore', 'ticketNumber', 'sector',\n    'tariff', 'discountAmountCurrencyId', 'discountBalanceCurrencyId', 'discountBalanceBefore',\n    'serviceChargeTypeId', 'cardReference', 'cardScheme', 'maskedCardNumber',\n    'cardExpirationDate', 'externalId1', 'externalId2', 'externalId3', 'percVat1', 'percVat2',\n    'partialVat1', 'percFee', 'percFeeTopped', 'partialPercFee', 'fixedFee',\n    'partialFixedFee', 'totalAmount', 'cuspmrPagateliaNewBalance', 'cuspmrType', 'shopkeeperOp',\n    'shopkeeperAmount', 'shopkeeperProfit', 'plate2', 'plate3', 'plate4', 'plate5', 'plate6', 'plate7',\n    'plate8', 'plate9', 'plate10', 'permitAutoRenew', 'permitExpiration', 'transStatus',\n    'refundAmount', 'valorSinBonificar', 'bonificacion', 'tipoVehiculo'];\n\n  dataSource = new MatTableDataSource<any>(DATOS);\n\n  // propidades para recuperar la fecha seleccionada por el usuario\n  datemes: any;\n  dateanio: any;\n\n  // arreglos utilizados para guardar los datos\n  arrdetalleconsecion: any[] = [];\n\n  // iconos\n  icClose = icClose;\n\n  ngOnInit(): void {\n    console.log('Soy el id de la concesion: ' + this.intIdConcesion);\n    this.mtdobtenerdetalleingresos();\n  }\n\n  // paginador\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  // metodo que permite recuperar el detalle de los ingresos por concesion\n  // en base al mes, añi y idconcesion\n  mtdobtenerdetalleingresos() {\n\n    if (this.intIdConcesion) {\n\n      if (!this.datemes && !this.dateanio) {\n\n        this.arrdetalleconsecion = [];\n        const myDate = new Date();\n        const month = myDate.getMonth() + 1;\n        const year = myDate.getFullYear();\n\n        console.log('Fecha no seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosmesualesservices.mtdgetdetalleingresoXConsecion(this.intIdConcesion, month, year)\n            .then((response: any) => {\n              console.log(response);\n              this.arrdetalleconsecion = response.data;\n              this.dataSource.data = this.arrdetalleconsecion;\n              this.cd.markForCheck();\n        });\n      }\n      else {\n        this.arrdetalleconsecion = [];\n        console.log('Fecha seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosmesualesservices.mtdgetdetalleingresoXConsecion(this.intIdConcesion, this.datemes, this.dateanio)\n                .then((response: any) => {\n                  console.log(response);\n                  this.arrdetalleconsecion = response.data;\n                  this.dataSource.data = this.arrdetalleconsecion;\n                  this.cd.markForCheck();\n            });\n      }\n\n    }\n\n    else {\n      console.log('No existe id conseción');\n    }\n\n  }\n\n  // metodo que recupera el mes y año seleccionado por el usuario\n  mtdobtenerfechaseleccionada() {\n   this.datemes = this.ingresosmesualesservices.getMesSeleccionado();\n   this.dateanio = this.ingresosmesualesservices.getAnioSeleccionado();\n  }\n\n}\n\nconst DATOS: any[] = [];\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\n    <h2 class=\"headline m-0\" fxFlex=\"auto\" *ngIf=\"arrdetalleconsecion.length > 0\">\n        {{ arrdetalleconsecion[0].str_nombre_concesion }}\n    </h2>\n    <!-- Este es el boton de cerrar del popup -->\n    <button type=\"button\" class=\"text-secondary\" mat-icon-button mat-dialog-close>\n    <mat-icon [icIcon]=\"icClose\"></mat-icon>\n    </button>\n</div>\n<mat-dialog-content fxLayout=\"column\" style=\"min-height: fit-content;\" class=\"card overflow-auto\">\n    <div class=\"flex flex-col sm:flex-row\" style=\"margin-top: 5px;\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> ID </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"createdBy\">\n                <th mat-header-cell *matHeaderCellDef> Creado por </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdBy}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"createdDate\">\n                <th mat-header-cell *matHeaderCellDef> Fecha de creación </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdDate | date: 'dd/MM/yyyy' }}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"lastModifiedBy\">\n                <th mat-header-cell *matHeaderCellDef> Última modificacion por </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastModifiedBy}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"lastModifiedDate\">\n                <th mat-header-cell *matHeaderCellDef> Última fechade modificación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastModifiedDate | date: 'dd/MM/yyyy'}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"bitStatus\">\n                <th mat-header-cell *matHeaderCellDef> Status </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.bitStatus}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strPlaca\">\n                <th mat-header-cell *matHeaderCellDef> Placa </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strPlaca}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"strLatitud\">\n                <th mat-header-cell *matHeaderCellDef> Latitud </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strLatitud}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strLongitud\">\n                <th mat-header-cell *matHeaderCellDef> Longitud </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strLongitud}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"booleanAutoRecarga\">\n                <th mat-header-cell *matHeaderCellDef> Auto recarga </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.booleanAutoRecarga}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"booleanMulta\">\n                <th mat-header-cell *matHeaderCellDef> Multa </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.booleanMulta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtHoraInicio\">\n                <th mat-header-cell *matHeaderCellDef> Hora inicio </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtHoraInicio | date: 'h:mm:ss a'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtmFechaInsercionDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Fecha insercion descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmFechaInsercionDescuento}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"dtmFechaDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Fecha descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmFechaDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtmHoraFin\">\n                <th mat-header-cell *matHeaderCellDef> Hora fin </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmHoraFin | date: 'h:mm:ss a'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intTiempoComprado\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo comprado </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intTiempoComprado}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"int_tiempo\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.int_tiempo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMonedaSaldoPrevioDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Moneda saldo previo descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMonedaSaldoPrevioDescuento | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"fltMonto\">\n                <th mat-header-cell *matHeaderCellDef> Monto </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMonto | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoInicial\">\n                <th mat-header-cell *matHeaderCellDef>Monto inicial </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoInicial | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltPorcentajeComision\">\n                <th mat-header-cell *matHeaderCellDef>Porcentaje comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltPorcentajeComision}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoPorcentaje\">\n                <th mat-header-cell *matHeaderCellDef>Monto porcentaje</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoPorcentaje | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltTotalConComision\">\n                <th mat-header-cell *matHeaderCellDef>Total con comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltTotalConComision | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strNombreConcesion\">\n                <th mat-header-cell *matHeaderCellDef>concesión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strNombreConcesion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltSaldoAnterior\">\n                <th mat-header-cell *matHeaderCellDef>Saldo anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltSaldoAnterior | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intTiempoDevuelto\">\n                <th mat-header-cell *matHeaderCellDef>Tiempo devuelto</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intTiempoDevuelto}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoDevolucion\">\n                <th mat-header-cell *matHeaderCellDef>Monto devolución</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoDevolucion | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoPorcDevolucion\">\n                <th mat-header-cell *matHeaderCellDef>Monto porcentaje devolución</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoPorcDevolucion | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltTotalDevConComision\">\n                <th mat-header-cell *matHeaderCellDef>Total devolución con comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltTotalDevConComision | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoReal\">\n                <th mat-header-cell *matHeaderCellDef>Monto real</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoReal | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltSaldoPrevioDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Saldo previo a descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltSaldoPrevioDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Valor descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorDescuento}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorDevuelto\">\n                <th mat-header-cell *matHeaderCellDef>Valor devuelto</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorDevuelto}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorFinalDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Valor final descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorFinalDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCambioDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Cambio de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCambioDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCodigoAutorizacion\">\n                <th mat-header-cell *matHeaderCellDef>Código autorización</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCodigoAutorizacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCodigoTransaccion\">\n                <th mat-header-cell *matHeaderCellDef>Código transacción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCodigoTransaccion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strComentarios\">\n                <th mat-header-cell *matHeaderCellDef>Comentarios</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strComentarios}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strHashTarjeta\">\n                <th mat-header-cell *matHeaderCellDef>hash tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strHashTarjeta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strInstalacion\">\n                <th mat-header-cell *matHeaderCellDef>Instalación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strInstalacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strInstalacionAbrv\">\n                <th mat-header-cell *matHeaderCellDef>Instalación abrv</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strInstalacionAbrv}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strMonedaValorDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Moneda valor descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strMonedaValorDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strReferenciaOperacion\">\n                <th mat-header-cell *matHeaderCellDef>Referencia de operación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strReferenciaOperacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strSo\">\n                <th mat-header-cell *matHeaderCellDef>SO</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strSo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strTipo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strTipo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strVersionapp\">\n                <th mat-header-cell *matHeaderCellDef>App versión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strVersionapp}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdEspacio\">\n                <th mat-header-cell *matHeaderCellDef>ID espacio</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdEspacio}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdSaldoId\">\n                <th mat-header-cell *matHeaderCellDef>ID saldo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdSaldoId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdUsuarioId\">\n                <th mat-header-cell *matHeaderCellDef>ID usuario</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdUsuarioId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdVehiculoId\">\n                <th mat-header-cell *matHeaderCellDef>ID vehiculo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdVehiculoId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbespacios\">\n                <th mat-header-cell *matHeaderCellDef>Espacios</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbespacios}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbsaldo\">\n                <th mat-header-cell *matHeaderCellDef>Saldo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbsaldo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbvehiculos\">\n                <th mat-header-cell *matHeaderCellDef>Vehiculos</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbvehiculos}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intidconcesionId\">\n                <th mat-header-cell *matHeaderCellDef>ID concesión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intidconcesionId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbconcesiones\">\n                <th mat-header-cell *matHeaderCellDef>Concesiones</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbconcesiones}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdMulta\">\n                <th mat-header-cell *matHeaderCellDef>ID multa</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdMulta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"insDescription\">\n                <th mat-header-cell *matHeaderCellDef>Ins descripción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.insDescription}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"insShortdesc\">\n                <th mat-header-cell *matHeaderCellDef>Ins descripción corta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.insShortdesc}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"balanceBefore\">\n                <th mat-header-cell *matHeaderCellDef>Balance anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.balanceBefore}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"ticketNumber\">\n                <th mat-header-cell *matHeaderCellDef>Número de ticket</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.ticketNumber}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"sector\">\n                <th mat-header-cell *matHeaderCellDef>Sector</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.sector}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tariff\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tariff}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountAmountCurrencyId\">\n                <th mat-header-cell *matHeaderCellDef>ID de moneda de monto de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountAmountCurrencyId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountBalanceCurrencyId\">\n                <th mat-header-cell *matHeaderCellDef>ID de moneda del saldo de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountBalanceCurrencyId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountBalanceBefore\">\n                <th mat-header-cell *matHeaderCellDef>Descuento de saldo anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountBalanceBefore}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"serviceChargeTypeId\">\n                <th mat-header-cell *matHeaderCellDef>ID de tipo de cargo de servicio</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.serviceChargeTypeId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardReference\">\n                <th mat-header-cell *matHeaderCellDef>Tarjeta de referencia</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardReference}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardScheme\">\n                <th mat-header-cell *matHeaderCellDef>Esquema de tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardScheme}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"maskedCardNumber\">\n                <th mat-header-cell *matHeaderCellDef>Mascara de número de tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.maskedCardNumber}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardExpirationDate\">\n                <th mat-header-cell *matHeaderCellDef>Fecha de vencimiento de la tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardExpirationDate}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId1\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 1</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId2\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId3\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 3</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId3}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percVat1\">\n                <th mat-header-cell *matHeaderCellDef>percVat1</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percVat1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percVat2\">\n                <th mat-header-cell *matHeaderCellDef>percVat2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percVat2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialVat1\">\n                <th mat-header-cell *matHeaderCellDef>Vat1 parcial</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialVat1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa perc</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percFeeTopped\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa perc superada</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percFeeTopped}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialPercFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa parcial perc</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialPercFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fixedFee\">\n                <th mat-header-cell *matHeaderCellDef>Cuota fija</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fixedFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialFixedFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa fija parcial</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialFixedFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"totalAmount\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad total</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.totalAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cuspmrPagateliaNewBalance\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad total</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cuspmrPagateliaNewBalance}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cuspmrType\">\n                <th mat-header-cell *matHeaderCellDef>cuspmrTipo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cuspmrType}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperOp\">\n                <th mat-header-cell *matHeaderCellDef>Operación de comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperOp}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperAmount\">\n                <th mat-header-cell *matHeaderCellDef>Monto de comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperProfit\">\n                <th mat-header-cell *matHeaderCellDef>Beneficio del comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperProfit}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate2\">\n                <th mat-header-cell *matHeaderCellDef>Placa 2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate3\">\n                <th mat-header-cell *matHeaderCellDef>Placa 3</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate3}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate4\">\n                <th mat-header-cell *matHeaderCellDef>Placa 4</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate4}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate5\">\n                <th mat-header-cell *matHeaderCellDef>Placa 5</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate5}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate6\">\n                <th mat-header-cell *matHeaderCellDef>Placa 6</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate6}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate7\">\n                <th mat-header-cell *matHeaderCellDef>Placa 7</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate7}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate8\">\n                <th mat-header-cell *matHeaderCellDef>Placa 8</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate8}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate9\">\n                <th mat-header-cell *matHeaderCellDef>Placa 9</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate9}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate10\">\n                <th mat-header-cell *matHeaderCellDef>Placa 10</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate10}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"permitAutoRenew\">\n                <th mat-header-cell *matHeaderCellDef>Permitir renovación automática</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.permitAutoRenew}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"permitExpiration\">\n                <th mat-header-cell *matHeaderCellDef>Caducidad del permiso</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.permitExpiration}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"transStatus\">\n                <th mat-header-cell *matHeaderCellDef>Status de la trasacción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.transStatus}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"refundAmount\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad devuelta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.refundAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"valorSinBonificar\">\n                <th mat-header-cell *matHeaderCellDef>Valor sin bonificar</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.valorSinBonificar}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"bonificacion\">\n                <th mat-header-cell *matHeaderCellDef>Bonificación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.bonificacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tipoVehiculo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo vehiculo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tipoVehiculo}}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\"></mat-paginator>\n</mat-dialog-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { DetalleConcesionComponent } from './detalle-concesion.component';\n\n\n\n@NgModule({\n  declarations: [DetalleConcesionComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatMenuModule,\n    IconModule,\n    MatDividerModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule\n  ],\n  entryComponents: [DetalleConcesionComponent]\n})\nexport class DetalleConcesionModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\nimport { IngresosMensualesComponent } from './ingresos-mensuales.component';\nimport { AuthGuard } from '../../pages/auth/login/auth.guard';\n\n// const routes: Routes = [];\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: IngresosMensualesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      toolbarShadowEnabled: true,\n      //containerEnabled: true,\n      scrollDisableb: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IngresosMensualesRoutingModule { }\n","import { Component, OnInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { CurrencyPipe } from '@angular/common';\nimport { fadeInRight400ms } from '../../../@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '../../../@vex/animations/scale-fade-in.animation';\nimport { scaleIn400ms } from '../../../@vex/animations/scale-in.animation';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icDownload from '@iconify/icons-fa-solid/cloud-download-alt';\n\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\n\nimport { DetalleConcesionComponent } from '../detalle-concesion/detalle-concesion.component';\nimport { IngresoMensualesService } from '../../services/ingreso-mensuales.service';\nimport { IngresosMensualesModel } from '../../models/ingresosmensuales.model';\nimport { Tile } from '../../models/tile.interface';\n\nimport Swal from 'sweetalert2';\n\n// doracion de UntilDestroy\n@UntilDestroy( )\n@Component({\n  selector: 'vex-ingresos-mensuales',\n  templateUrl: './ingresos-mensuales.component.html',\n  styleUrls: ['./ingresos-mensuales.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IngresosMensualesComponent implements OnInit, AfterViewInit {\n\n  constructor(public fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private currencyPipe: CurrencyPipe,\n              private ingresosmensualesservices: IngresoMensualesService) {\n\n              }\n\n  // arrglo para generar la primera parte del grid view con ayuda de la\n  // interfaces Tile\n  tiles: Tile[] = [];\n\n  // arreglo de meses\n  arrmeses: any [] = [\n    {nombre: 'Enero', value: 1},\n    {nombre: 'Febrero', value: 2},\n    {nombre: 'Marzo', value: 3},\n    {nombre: 'Abril', value: 4},\n    {nombre: 'Mayo', value: 5},\n    {nombre: 'Junio', value: 6},\n    {nombre: 'Julio', value: 7},\n    {nombre: 'Agosto', value: 8},\n    {nombre: 'Septiembre', value: 9},\n    {nombre: 'Octubre', value: 10},\n    {nombre: 'Noviembre', value: 11},\n    {nombre: 'Diciembre', value: 12}\n  ];\n\n  // arreglo del tipo IngresosMensualesModel para\n  // guardar la data del ingresosmensualesservice\n  arringresosmensuales: any[] = [];\n  arrfechasanios: any[] = [];\n\n  // propiedades del mat-tabla\n  @ViewChild(MatTable, {static: true}) table: MatTable<Element>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [10, 20, 30, 50];\n  displayedColumns: string[] = [ 'nombreConcesion', 'tiempoVendido', 'montoVendido', 'tiempoDevolucion', 'montoDevolucion', 'total'];\n  selection = new SelectionModel<any>(true, []);\n  dataSource = new MatTableDataSource<any>(DATOS);\n\n  // iconos\n  icContacts = icContacts;\n  icSearch = icSearch;\n  icDownload = icDownload;\n\n  // propiedades para mostrar la fecha seleccionada por el usuario\n  datefecha: any;\n  mesSelected: any;\n  anioSelected: any;\n\n  searchCtrl = new FormControl();\n  form: FormGroup;\n\n\n  ngOnInit(): void { \n    this.mtdobtenerIngresosMensualesxConcesion();\n    this.mtdobternerIngresosMensualesResumen();\n    this.mtdgenerarAnios();\n  }\n\n  ngAfterViewInit(): void {\n    this.mtdpintarfechaSeleccionada();\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    \n    // Filtro de la tabla\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n\n  }\n\n  // mtd de filtrado de la tabla\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  // metodo que permite pintar la fecha en el titulo del grib\n  mtdpintarfechaSeleccionada() {\n    this.datefecha = new Date();\n    this.mesSelected = this.datefecha.getMonth() + 1;\n    this.anioSelected = this.datefecha.getFullYear();\n    // this.mtdobtenerNombreMeses(this.mesSelected);\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == this.mesSelected);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n  }\n\n  // Metodo que utiliza el evento click para recuperar los datos\n  // del grib y table\n  mtdclickobtenerIngresosMensualesFecha( mes: any, anio: any ) {\n    if ( mes === '' && anio === '') {\n      return;\n    }\n    if ( mes === '' || anio === '') {\n      return;\n    }\n    console.log('Mes2: ' + mes, 'Año2: ' + anio);\n    this.mtdobternerIngresosMensualesResumenParam( mes, anio );\n    this.mtdobtenerIngresosMensualesxConcesionParam( mes, anio );\n    this.ingresosmensualesservices.setMesSeleccionado( mes );\n    this.ingresosmensualesservices.setAnioSeleccionado( anio );\n\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == mes);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n    this.anioSelected = anio;\n    this.cd.markForCheck();\n  }\n\n  mtdclickDetalleIngreso(intIdConcesion: any) {\n    this.dialog.open(DetalleConcesionComponent, {height: 'auto', data: intIdConcesion});\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // y llena la segunda parte del grid a partir de la\n  // fecha ingresa por el usuario\n  mtdobternerIngresosMensualesResumenParam( mes: any, anio: any ) {\n    this.tiles = [];\n    this.ingresosmensualesservices.mtdgetingresosMensualesResumenPara(mes, anio)\n        .then(( response: any ) => {\n          console.log('Data filtrada', response);\n          this.tiles.push(\n            {text: 'ParkiFácil', cols: 1, rows: 3, color: '#FFFFFF', style: 'font-weight: bold;'},\n            {text: 'Saldo de usuario mes anterior', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga de saldo del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo usuario del mes', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Compra de recargas del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo final usuarios', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Ingreso por comisiones', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga usuario', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión recarga', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Venta concesión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMesAnterior'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['recargaUsuario'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comisionRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMes'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['ventaConcesion'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#F8CBAD', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comision'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoCompra'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoFinalUsuaios'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#2F75B5', style: 'font-weight: bold; color:white;'},\n            {text: this.currencyPipe.transform(response['data']['ingresoXComisiones'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#548235', style: 'font-weight: bold; color:white;'}\n          );\n          this.cd.markForCheck();\n      });\n    this.mtdobtenerIngresosMensualesxConcesionParam(mes, anio);\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // por concesión y llena el mat-table en base a la fecha\n  // ingresada por el usuario\n  mtdobtenerIngresosMensualesxConcesionParam(mes: any, anio: any) {\n    this.arringresosmensuales = [];\n    this.ingresosmensualesservices.mtdgetingresosMensualesxConsecionPara(mes, anio)\n        .subscribe((response: any) => {\n          this.arringresosmensuales = response.data;\n          this.dataSource.data = this.arringresosmensuales;\n          this.cd.markForCheck();\n        });\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // por concesión y llena el mat-table\n  mtdobtenerIngresosMensualesxConcesion() {\n\n    const myDate = new Date();\n    const month = myDate.getMonth() + 1;\n    const year = myDate.getFullYear();\n\n    console.log('Mes: ' + month, 'Año: ' + year);\n    this.ingresosmensualesservices.mtdgetingresosMensualesxConsecion(month, year)\n        .then((response:any) => {\n          console.log('ingresos ',response);\n          this.arringresosmensuales = response.data;\n          // this.arringresosmensuales.sort((a, b) => b.montoVendido - a.montoVendido);\n          this.dataSource.data = this.arringresosmensuales;\n\n    });\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // y llena la segunda parte del grid\n  mtdobternerIngresosMensualesResumen() {\n\n    const myDate = new Date();\n    const month = myDate.getMonth() + 1;\n    const year = myDate.getFullYear();\n\n    console.log('Mes: ' + month, 'Año: ' + year);\n    this.ingresosmensualesservices.mtdgetingresosMensualesResumen(month, year)\n        .then((response: any) => {\n          console.log(response);\n          this.tiles.push(\n            {text: 'ParkiFácil', cols: 1, rows: 3, color: '#FFFFFF', style: 'font-weight: bold;'},\n            {text: 'Saldo de usuario mes anterior', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga de saldo del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo usuario del mes', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Compra de recargas del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo final usuarios', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Ingreso por comisiones', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga usuario', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión recarga', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Venta concesión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMesAnterior'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['recargaUsuario'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comisionRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMes'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['ventaConcesion'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#F8CBAD', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comision'], 'MXN', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoCompra'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoFinalUsuaios'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#2F75B5', style: 'font-weight: bold; color:white;'},\n            {text: this.currencyPipe.transform(response['data']['ingresoXComisiones'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#548235', style: 'font-weight: bold; color:white;'}\n          );\n          this.cd.markForCheck();\n        });\n  }\n\n  // metodo que genera los años para llenar el select de años\n  mtdgenerarAnios() {\n\n    const myDate = new Date();\n    const year = myDate.getFullYear();\n\n    for (let index = 2020; index < year + 1; index++) {\n      this.arrfechasanios.push({ anio: index });\n    }\n    console.log(this.arrfechasanios);\n  }\n\n  // metodo que permite encontrar el nombre del mes apartir de \n  // su numero\n  mtdobtenerNombreMeses(mes: any) {\n    if (mes === 1) {\n      this.mesSelected = 'Enero';\n    }\n    if (mes === 2) {\n      this.mesSelected = 'Febrero';\n    }\n    if (mes === 3) {\n      this.mesSelected = 'Marzo';\n    }\n    if (mes === 4) {\n      this.mesSelected = 'Abril';\n    }\n    if (mes === 5) {\n      this.mesSelected = 'Mayo';\n    }\n    if (mes === 6) {\n      this.mesSelected = 'Junio';\n    }\n    if (mes === 7) {\n      this.mesSelected = 'Julio';\n    }\n    if (mes === 8) {\n      this.mesSelected = 'Agosto';\n    }\n    if (mes === 9) {\n      this.mesSelected = 'Septiembre';\n    }\n    if (mes === 10) {\n      this.mesSelected = 'Octubre';\n    }\n    if (mes === 11) {\n      this.mesSelected = 'Noviembre';\n    }\n    if (mes === 12) {\n      this.mesSelected = 'Diciembre';\n    }\n  }\n\n  ngOnDestroy(): void { }\n\n}\n\nconst DATOS: any[] = [];\n\n","<div class=\"h-full\" fxLayout=\"column\">\n  <div class=\"p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n    <div vexContainer>\n      <h1\n        class=\"display-1 mt-0 mb-4\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n      >\n        <span\n          @scaleIn\n          class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-light\"\n        >\n          <ic-icon [icon]=\"icContacts\" size=\"24px\"></ic-icon>\n        </span>\n        <span @fadeInRight class=\"block\">Ingresos Mensuales</span>\n      </h1>\n    </div>\n  </div>\n  <div class=\"mt-4 p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n    <!--  MES - AÑO -->\n    <div class=\"flex flex-col \">\n      <h3>Selecciona una fecha</h3>\n      <form>\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto\">\n          <mat-label for=\"anio\">Selecciona mes</mat-label>\n          <mat-select #mes name=\"mes\" matSelect required>\n            <mat-option *ngFor=\"let mes of arrmeses\" [value]=\"mes.value\">\n              {{ mes.nombre }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto\">\n          <mat-label for=\"anio\">Selecciona año</mat-label>\n          <mat-select #anio name=\"anio\" matSelect required>\n            <mat-option *ngFor=\"let anio of arrfechasanios\" [value]=\"anio.anio\">\n              {{ anio.anio }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <button\n          color=\"primary\"\n          mat-button\n          type=\"button\"\n          (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\"\n        >\n          ACEPTAR\n        </button>\n<!--         \n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto w-1/3 md:w-1/6\">\n          <mat-label>Inicio</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"datepickerRefi\"\n            #fechaInicio\n            (dateChange)=\"\n              mtdchangeobtenerMovimientosxPeriodos(\n                fechaInicio.value,\n                fechaFin.value\n              )\n            \"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"datepickerRefi\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #datepickerRefi></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto w-1/3 md:w-1/6\">\n          <mat-label>Fin</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"datepickerRefe\"\n            #fechaFin\n            (dateChange)=\"\n              mtdchangeobtenerMovimientosxPeriodos(\n                fechaInicio.value,\n                fechaFin.value\n              )\n            \"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"datepickerRefe\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #datepickerRefe></mat-datepicker>\n        </mat-form-field>\n        \n        <button\n          color=\"primary\"\n          mat-button\n          type=\"button\"\n          (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\"\n        >\n          ACEPTAR\n        </button> -->\n\n      </form>\n    </div>\n    <!--div vexContainer>\n            <h3 fxLayout=\"row\" fxLayoutAlign=\"start center\">Selecciona una fecha</h3>\n            <form>\n                <mat-form-field class=\"flex-auto\">\n                    <mat-label for=\"mes\">Seleciona mes</mat-label>\n                    <select #mes matNativeControl name=\"mes\">\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let mes of arrmeses\" [value]=\"mes.value\">\n                          {{ mes.nombre }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <mat-form-field class=\"flex-auto ml-4\">\n                    <mat-label for=\"anio\">Seleciona año</mat-label>\n                    <select #anio matNativeControl name=\"anio\">\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let anio of arrfechasanios\" [value]=\"anio.anio\">\n                          {{ anio.anio }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <button class=\"ml-3\" color=\"primary\" mat-button type=\"button\" \n                        (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\">\n                        ACEPTAR\n                </button>\n            </form>\n        </div-->\n    <div vexContainer class=\"mt-10\">\n      <h2 style=\"text-align: center\">\n        Ingresos mensuales - Mes: {{ mesSelected }} Año: {{ anioSelected }}\n      </h2>\n      <div class=\"mb-2\">\n        <mat-grid-list cols=\"11\" rowHeight=\"50px\">\n          <mat-grid-tile\n            *ngFor=\"let tile of tiles\"\n            [colspan]=\"tile.cols\"\n            [rowspan]=\"tile.rows\"\n            [style.background]=\"tile.color\"\n            [style]=\"tile.style\"\n          >\n            <div class=\"text-inside-grid\">{{ tile.text }}</div>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n    </div>\n  </div>\n  <!-- Buscador -->\n  <div vexContainer class=\"mt-10\">\n    <div\n      class=\"bg-app-bar px-6 h-16 border-b sticky left-0\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n    >\n      <h2\n        class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\"\n        fxFlex=\"auto\"\n        fxHide.xs\n      >\n        <span *ngIf=\"selection.isEmpty()\">Buscar:</span>\n      </h2>\n      <div\n        class=\"bg-card rounded-full border px-4\"\n        fxFlex=\"800px\"\n        fxFlex.lt-md=\"auto\"\n        fxHide.xs\n        fxLayout=\"row\"\n      >\n        <ic-icon [icIcon]=\"icSearch\" size=\"40px\"></ic-icon>\n        <input\n          [formControl]=\"searchCtrl\"\n          class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\n          placeholder=\"Buscar...\"\n          type=\"search\"\n        />\n      </div>\n      <span fxFlex></span>\n      <button\n        class=\"ml-4\"\n        fxFlex=\"none\"\n        fxHide.gt-xs\n        mat-icon-button\n        type=\"button\"\n      >\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n      </button>\n    </div>\n  </div>\n  <!-- Tabla -->\n  <vex-page-layout-content>\n    <div class=\"card overflow-auto\">\n      <h2 class=\"mt-3 mb-3 ml-2\">Resumen de concesiones</h2>\n      <table\n        #table\n        mat-table\n        [dataSource]=\"dataSource\"\n        matSort\n        class=\"mat-elevation-z8 tbResumen\"\n      >\n        <ng-container matColumnDef=\"nombreConcesion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Conseción</th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.nombreConcesion }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tiempoVendido\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Tiempo vendido\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.tiempoVendido }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"montoVendido\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Monto vendido\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.montoVendido | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tiempoDevolucion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Tiempo devolución\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.tiempoDevolucion }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"montoDevolucion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Monto devolución\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.montoDevolucion | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"total\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Total</th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.total | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <!-- <ng-container matColumnDef=\"descargar\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Descargar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-raised-button\n              color=\"primary\"\n              (click)=\"mtdDescargarInformeConcesion(element)\"\n            >\n              <mat-icon [icIcon]=\"icDownload\" class=\"mr-1\"></mat-icon>\n              Descargar\n            </button>\n          </td>\n        </ng-container> -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <mat-paginator\n        [pageSizeOptions]=\"pageSizeOptions\"\n        [pageSize]=\"pageSize\"\n        class=\"sticky left-0\"\n      ></mat-paginator>\n    </div>\n  </vex-page-layout-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IngresosMensualesRoutingModule } from './ingresos-mensuales-routing.module';\nimport { IngresosMensualesComponent } from './ingresos-mensuales.component';\nimport { DetalleConcesionModule } from '../detalle-concesion/detalle-concesion.module';\n\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ColorFadeModule  } from '../../../@vex/pipes/color/color-fade.module';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { SecondaryToolbarModule } from '../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSortModule } from '@angular/material/sort';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  declarations: [IngresosMensualesComponent],\n  imports: [\n    CommonModule,\n    IngresosMensualesRoutingModule,\n    DetalleConcesionModule,\n    MatSortModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    ColorFadeModule,\n    MatButtonToggleModule,\n    SecondaryToolbarModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatDividerModule,\n  ]\n})\nexport class IngresosMensualesModule { }\n"],"sourceRoot":"webpack:///"}