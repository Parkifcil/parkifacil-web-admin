{"version":3,"sources":["webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/auth/login/login-routing.module.ts","webpack:///src/app/pages/auth/login/login.component.ts","webpack:///src/app/pages/auth/login/login.component.html","webpack:///src/app/pages/auth/login/login.module.ts"],"names":["UserModel","routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginComponent","router","fb","cd","snackbar","authService","user","inputType","visible","icVisibility","icVisibilityOff","form","group","UserName","required","Password","markForCheck","console","log","signIn","value","toggleVisibility","loginUser","selector","templateUrl","styleUrls","changeDetection","OnPush","animations","LoginModule","declarations","providers"],"mappings":"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","file":"pages-auth-login-login-module-es5.js","sourcesContent":["export class  UserModel{\n  \n    UserName: string;\n    Password: string;\n  \n  }","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\nimport { AuthGuard } from './auth.guard';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent,\n    // canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\nimport user from '@iconify/icons-fa-solid/user';\nimport { UserModel } from '../../../models/user.model';\nimport { AuthService } from '../../../services/login.service';\n\n\n\n\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  user: UserModel = new UserModel(); \n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n\n  constructor(public router: Router,\n              public fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar,\n              public authService: AuthService\n  ) {\n\n   \n  }\n\n  ngOnInit() {\n\n    this.form = this.fb.group({\n      UserName: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n    \n  }\n\n  // send() {\n  //   this.router.navigate(['/']);\n  //   console.log(this.user);\n  //   console.log('hola');\n\n   // this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\n     // duration: 10000\n    // });\n  // }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n\n  loginUser(){\n    console.log('hola');\n    this.authService.signIn(this.form.value);\n\n  }\n}\n","<div class=\"w-full h-full bg-pattern\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div @fadeInUp class=\"card overflow-hidden w-full max-w-xs\">\n        <div class=\"p-6 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"fill-current text-center\">\n                <img class=\"w-24\" src=\"assets/img/parkifacil/logo_parkifacil_sinfondo.png\">\n            </div>\n        </div>\n\n        <div class=\"text-center mt-4\">\n            <!-- <h2 class=\"title m-0\">Welcome back</h2> -->\n            <h2 class=\"title m-0\">¡Bienvenido!</h2>\n            <!-- <h3 class=\"body-2 text-secondary m-0\">Centro de control.</h3> -->\n        </div>\n        <!-- <form class=\"form-signin\" [formGroup]=\"form\" (ngSubmit)=\" loginUser()\"> -->\n        <div ngNativealidate [formGroup]=\"form\" class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n            <div class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n                <div fxFlex=\"auto\" fxLayout=\"column\">\n                    <mat-form-field fxFlex=\"grow\">\n                        <mat-label>Usuario</mat-label>\n                        <input formControlName=\"UserName\" name=\"UserName\" [(ngModel)]=\"user.UserName\" matInput required>\n                        <!-- <input formControlName=\"email\" name=\"userName\" matInput required> -->\n\n                        <!-- <mat-error *ngIf=\"form.get('userName').hasError('required')\">We need an email address to log you in</mat-error> -->\n                        <mat-error *ngIf=\"form.get('UserName').hasError('required')\">Ingresa un usuario por favor </mat-error>\n                    </mat-form-field>\n                    <mat-form-field fxFlex=\"grow\">\n                        <mat-label>Contraseña</mat-label>\n                        <input [type]=\"inputType\" name=\"Password\" [(ngModel)]=\"user.Password\" formControlName=\"Password\" matInput required>\n                        <!-- <input [type]=\"inputType\" name=\"password\" formControlName=\"password\" matInput required> -->\n                        <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"\n                        Alternar visibilidad\" type=\"button\">\n            <mat-icon *ngIf=\"visible\" [icIcon]=\"icVisibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" [icIcon]=\"icVisibilityOff\"></mat-icon>\n          </button>\n                        <mat-hint>Haga clic en el ojo para alternar la visibilidad.</mat-hint>\n                        <mat-error *ngIf=\"form.get('Password').hasError('required')\">Necesitamos una contraseña para iniciar la sesión</mat-error>\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"text-center mt-4\">\n                    <!-- <mat-checkbox class=\"caption\" color=\"primary\">Remember Me</mat-checkbox> -->\n                    <!-- <a [routerLink]=\"['/forgot-password']\" class=\"text-center\">Forgot Password?</a> -->\n                </div>\n\n                <button (click)=\"loginUser()\" color=\"primary\" mat-raised-button type=\"button\">\n                <!-- <button type=\"submit\" color=\"primary\" mat-raised-button type=\"button\"> -->\n                    INGRESAR\n                <!-- SIGN IN -->\n      </button>\n\n                <!-- <p class=\"text-secondary text-center\">\n                    Nuevo usuario<br/>\n                    <a [routerLink]=\"['/register']\">Haga clic aquí para crear uno</a>\n                </p> -->\n\n\n            </div>\n\n\n        </div>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ],\n  providers:[],\n})\nexport class LoginModule {\n\n}\n"]}