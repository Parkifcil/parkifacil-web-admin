{"version":3,"sources":["webpack:///node_modules/@iconify/icons-ic/twotone-apps.js","webpack:///node_modules/@iconify/icons-ic/twotone-collections-bookmark.js","webpack:///node_modules/@iconify/icons-ic/twotone-edit-location.js","webpack:///node_modules/@iconify/icons-ic/twotone-edit.js","webpack:///node_modules/@iconify/icons-ic/twotone-explore.js","webpack:///node_modules/@iconify/icons-ic/twotone-location-city.js","webpack:///node_modules/@iconify/icons-ic/twotone-my-location.js","webpack:///node_modules/@iconify/icons-ic/twotone-navigation.js","webpack:///src/app/services/ciudades.service.ts","webpack:///src/app/services/graficas.service.ts","webpack:///src/app/services/ingresos.service.ts","webpack:///src/app/services/roles.service.ts","webpack:///src/app/services/service.index.ts","webpack:///src/app/services/tipos-usuarios.service.ts","webpack:///src/app/usuarios/usuario-actualizar-contrasenia/usuario-actualizar-contrasenia.component.ts","webpack:///src/app/usuarios/usuario-actualizar-contrasenia/usuario-actualizar-contrasenia.component.html","webpack:///src/app/usuarios/usuario-actualizar-contrasenia/usuario-actualizar-contrasenia.module.ts","webpack:///src/app/usuarios/usuario-crear-actualizar/usuario-crear-actualizar.component.ts","webpack:///src/app/usuarios/usuario-crear-actualizar/usuario-crear-actualizar.component.html","webpack:///src/app/usuarios/usuario-crear-actualizar/usuario-crear-actualizar.module.ts","webpack:///src/app/usuarios/usuarios-routing.module.ts","webpack:///src/app/usuarios/usuarios.component.ts","webpack:///src/app/usuarios/usuarios.component.html","webpack:///src/app/usuarios/usuarios.module.ts"],"names":["data","exports","__esModule","CiudadesService","http","get","API_URL","GET_CIUDADES","providedIn","GraficasService","urlApi","IngresosService","router","headers","set","fecha","console","log","dtmFeha","RolesService","GET_TIPOS_ROLES","TiposUsuariosService","GET_TIPOS_USUARIOS","UsuarioActualizarContraseniaComponent","defaults","dialogRef","fb","cd","validador","userservice","visible","inputType","icClose","icLock","icVisibility","icVisibilityOff","form","group","Password","required","passwordValid","nuevaContrasenia","value","close","markForCheck","valid","invalid","update","toggleVisibility","selector","templateUrl","styles","UsuarioActualizarContraseniaModule","declarations","imports","entryComponents","UsuarioCrearActualizarComponent","rolService","concesionService","tipoUsuariosService","ciudadesService","arruser","arruseremail","arrTodos","arrAgente","arrTodas","arrConce","mode","icMoreVert","icPrint","icDownload","icDelete","icEmail","icPerson","icPeople","icMyLocation","icLocationCity","icEditLocation","icCollections_bookmark","icPhone","icExplore","icBusiness","icApps","icNavigation","icAccount_circle","StrNombre","minLength","soloLetras","StrApellidos","Email","emailValid","PhoneNumber","phoneValid","Rol","min","IntIdCiudad","IntIdconcesionId","UserName","maxLength","userValid","StrRfc","rfcValid","StrDireccion","StrCP","cpValid","StrRazonSocial","razonValida","disable","patchValue","strNombre","strApellidos","email","phoneNumber","intIdCiudad","intIdConcesion","userName","strRfc","strDireccion","strCp","strRazonSocial","strTipoUsuario","enable","getTodosConcesiones","subscribe","datos","filter","bitStatus","getTodosTiposUsuarios","id","getCuidades","ciudades","crearUsuario","actualizarUsuario","usuario","getTodosUsuarios","responseuser","length","mtduniqueemail","mtduniqueUser","matched","controls","setErrors","notMatched","save","onBlurEmail","onBlurUser","UsuarioCrearActualizarModule","routes","path","component","canActivate","toolbarShadowEnabled","scrollDisableb","UsuariosRoutingModule","forChild","$event","stopPropagation","UsuariosComponent","registrarUsuarioService","dialog","icAdd","icSearch","icMoreHoriz","icEdit","icPersonAdd","icContacts","icPlay_arrow","searchCtrl","layoutCtrl","pageSize","pageSizeOptions","displayedColumns","selection","dataSource","DATOS","arrdatausuarios","arrUserloginNoList","boton","boton2","sessionStorage","getItem","currentUsuer","currentUsuerJ","JSON","parse","arrcurrentUser","intidUsuario","mtdrefreshdata$","valueChanges","pipe","onFilterChange","paginator","sort","todos","getTodosUsuariosFalse","trim","toLowerCase","open","afterClosed","password","mtdputPasswordUsuario","res","fire","icon","title","showConfirmButton","timer","err","actializarUsuario","registrarUserPost","response","deleteUsuario","customer","activarUsuario","styleUrls","animations","changeDetection","OnPush","UsuariosModule"],"mappings":"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","file":"usuarios-usuarios-module-es5.js","sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M20 4h-1v9l-3-2.25L13 13V4H8v12h12z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M4 22h14v-2H4V6H2v14c0 1.1.9 2 2 2zm18-6V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zM15 4h2v5l-1-.75L15 9V4zM8 4h5v9l3-2.25L19 13V4h1v12H8V4z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M14.11 14H8V7.91l.59-.59L11.91 4C8.61 4.05 6 6.6 6 10.2c0 2.34 1.95 5.44 6 9.14c4.05-3.7 6-6.79 6-9.14v-.08l-3.3 3.3l-.59.58z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M18.17 4.91L17.1 3.84l-5.55 5.55v1.08h1.08l5.54-5.56zM16 2.74l1.29-1.29c.58-.59 1.52-.59 2.11-.01l.01.01l1.15 1.15c.59.59.59 1.54 0 2.12l-.68.68l-.02.02l-.58.58l-6 6H10V8.74l6-6zm-2.28-.55l-.55.55l-1.27 1.27c-3.3.05-5.9 2.6-5.9 6.2c0 2.34 1.95 5.44 6 9.14c4.05-3.7 6-6.79 6-9.14v-.1l1.8-1.8c.13.6.2 1.24.2 1.9c0 3.32-2.67 7.25-8 11.8c-5.33-4.55-8-8.48-8-11.8c0-4.98 3.8-8.2 8-8.2c.58 0 1.16.06 1.72.18z\\\" fill=\\\"currentColor\\\"/><path opacity=\\\".3\\\" d=\\\"M18.17 4.91L17.1 3.84l-5.55 5.55v1.08h1.08z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M5 18.08V19h.92l9.06-9.06l-.92-.92z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M20.71 7.04a.996.996 0 0 0 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83l3.75 3.75l1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06l.92.92L5.92 19z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8s8-3.59 8-8s-3.59-8-8-8zm2.01 10.01L6.5 17.5l3.49-7.51L17.5 6.5l-3.49 7.51z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8s8 3.59 8 8s-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5L9.99 9.99L6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1s-1.1-.49-1.1-1.1s.49-1.1 1.1-1.1z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M15 11V5l-3-3l-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path d=\\\"M13 3.06V1h-2v2.06A8.994 8.994 0 0 0 3.06 11H1v2h2.06A8.994 8.994 0 0 0 11 20.94V23h2v-2.06A8.994 8.994 0 0 0 20.94 13H23v-2h-2.06A8.994 8.994 0 0 0 13 3.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7s7 3.13 7 7s-3.13 7-7 7z\\\" fill=\\\"currentColor\\\"/><circle cx=\\\"12\\\" cy=\\\"12\\\" opacity=\\\".3\\\" r=\\\"2\\\" fill=\\\"currentColor\\\"/><path d=\\\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4s4-1.79 4-4s-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M7.72 17.7l3.47-1.53l.81-.36l.81.36l3.47 1.53L12 7.27z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M4.5 20.29l.71.71L12 18l6.79 3l.71-.71L12 2L4.5 20.29zm8.31-4.12l-.81-.36l-.81.36l-3.47 1.53L12 7.27l4.28 10.43l-3.47-1.53z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CiudadReador, CiudadResponseReador } from '../models/ciudades.model';\nimport { AbstractmanagerService } from '../shared/services/abstractmanager.service';\nimport { API_URLS } from '../shared/models/apiUrls.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CiudadesService extends AbstractmanagerService {\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getCuidades(){\n    return this.http.get<CiudadResponseReador>((this.API_URL + API_URLS.GET_CIUDADES));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraficasService {\n\n  private urlApi: string = 'http://74.208.52.12/api/';\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router, RouterModule } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport { IngresosModel } from '../models/ingresos.model';\nimport { MovimientosopModel } from '../models/movimientosop.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n\n  /* private urlApi: string = 'https://localhost:5001/api/'; */\n  // private urlApi: string = 'https://proyeasyp.rj.r.appspot.com/api/';\n   //private urlApi: string = 'https://easy-zeus.nn.r.appspot.com/api/';\n   //private urlApi: string = 'http://parq-ver.rj.r.appspot.com/api/';\n   //private urlApi: string = 'http://74.208.16.165/api/';\n   private urlApi: string = 'http://74.208.52.12/api/';\n   headers = new HttpHeaders().set('Content-Type', 'application/json');\n  // currentUser = {};\n\n  constructor( private http: HttpClient,\n               public router: Router\n              ) { }\n\n  // Registrar Usuario\n  // registrarUserPost(user: RegisterUserModel){\n  //   console.log(user);\n  //   return this.http.post<any>(`${this.urlApi}Cuentas/Crear`, user)\n  //   .subscribe((res: any) => {\n  //       console.log(res);\n  //       Swal.fire({\n  //         icon: 'success',\n  //         title: 'Gurdado correctamente',\n  //         showConfirmButton: false,\n  //         timer: 1500\n  //       });\n  //   },\n  //   // err => console.log(err),\n  //   catchError(this.handleError)\n\n  //   )\n  // }\n\n // Obtener todos los ingresos\n  getTodosIngresos(){\n    return this.http.get<IngresosModel[]>(`${this.urlApi}Movimientos/mtdConsultarMovimientos`);\n  }\n  getIngresosXDia(fecha: string) {\n    console.log(fecha);\n    // tslint:disable-next-line: max-line-length\n    return this.http.get<MovimientosopModel[]>(`${this.urlApi}Movimientos/mtdConsultarMovMonitoreoXDia?dtmFecha=${fecha}`);\n  }\n\n  getMultasXFecha(fecha: string) {\n    console.log(fecha);\n    // tslint:disable-next-line: max-line-length\n    return this.http.get<MovimientosopModel[]>(`${this.urlApi}Multas/mtdConsultarMultasXFechas?dtmFechaInicio=${fecha}`);\n  }\n\n  getDetMovimientosXDia(fecha: string) {\n    // tslint:disable-next-line: max-line-length\n    return this.http.get<MovimientosopModel[]>(`${this.urlApi}DetalleMovimientos/mtdConsultaDetalleMovimientos?dtmFechaInicio=${fecha}`);\n  }\n\n  getPotDia(dtmFeha: Date) {\n    console.log(dtmFeha);\n  }\n\n  // getObtenerPorId(id: RegisterModule){\n  //   return this.http.get<RegisterModule[]>(`${this.urlApi}`);\n  // }\n\n  // actualizarUsuario(customer: RegisterModule){\n  //   console.log(customer);\n  //   return this.http.put(`${this.urlApi}`, customer);\n  // }\n\n  // Eliminar usuario\n  // deleteUsuario( id: RegisterModule): Observable<void>{\n  //   console.log('entro al delete service')\n  //   return this.http.delete<void>(`${this.urlApi}Cuentas/mtdBajaUsuario?id=${id}`);\n  // }\n\n    // Error \n    // handleError(error: HttpErrorResponse) {\n    //   let msg = '';\n    //   if (error.error instanceof ErrorEvent) {\n    //     // client-side error\n    //     msg = error.error.message;\n    //   } else {\n    //     // server-side error\n    //     msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    //   }\n    //   return throwError(msg);\n    // }\n \n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { RolModel } from '../models/rol.model';\nimport { AbstractmanagerService } from '../shared/services/abstractmanager.service';\nimport { API_URLS } from '../shared/models/apiUrls.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesService  extends AbstractmanagerService  {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor( private http: HttpClient,\n               public router: Router\n              ) { super(); }\n\n    getTodosRoles(){\n      return this.http.get<RolModel[]>((this.API_URL + API_URLS.GET_TIPOS_ROLES));\n    }\n}\n","export { RegistroUsuarioService } from './registro-usuario.service';\nexport { ConcesionesService } from './concesiones.service';\nexport { TiposUsuariosService } from './tipos-usuarios.service';\nexport { GraficasService } from './graficas.service';\nexport { AuthService } from './login.service';\nexport { IngresosService } from './ingresos.service';\nexport { RolesService } from './roles.service';\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TiposUsuariosModel } from '../models/tipos-usuarios-model';\nimport { AbstractmanagerService } from '../shared/services/abstractmanager.service';\nimport { API_URLS } from '../shared/models/apiUrls.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TiposUsuariosService  extends AbstractmanagerService {\n\n  \n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor( private http: HttpClient,\n               private router: Router) \n  { \n    super();\n  }\n\n\n  getTodosTiposUsuarios(){\n   return this.http.get<TiposUsuariosModel[]>((this.API_URL + API_URLS.GET_TIPOS_USUARIOS));\n  }\n}\n\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {RolesService} from \"../../services/roles.service\";\nimport {ConcesionesService} from \"../../services/concesiones.service\";\nimport {TiposUsuariosService} from \"../../services/tipos-usuarios.service\";\nimport {CiudadesService} from \"../../services/ciudades.service\";\nimport {ValidadoresService} from \"../../services/validadores.service\";\nimport {RegistroUsuarioService} from \"../../services/registro-usuario.service\";\n\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icLock from '@iconify/icons-ic/twotone-lock';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\n\n@Component({\n  selector: 'vex-usuario-actualizar-contrasenia',\n  templateUrl: './usuario-actualizar-contrasenia.component.html',\n  styles: [\n  ]\n})\nexport class UsuarioActualizarContraseniaComponent implements OnInit {\n\n  form: FormGroup;\n\n  visible = false;\n  inputType = 'password';\n\n  icClose = icClose;\n  icLock = icLock;\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<UsuarioActualizarContraseniaComponent>,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private validador: ValidadoresService,\n              private userservice: RegistroUsuarioService) { }\n\n  ngOnInit(): void {\n    console.log('Password Update ',this.defaults);\n    this.form = this.fb.group({\n      Password: ['',[Validators.required, this.validador.passwordValid]]\n    })\n  }\n\n  update(){\n    const nuevaContrasenia = this.form.get('Password').value;\n    this.dialogRef.close(nuevaContrasenia);\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n\n  get formularioValido() {\n    return this.form.valid\n  }\n  get passwordInvalido(){\n    return this.form.get('Password').invalid\n  }\n  get pwdInvalida(){\n    return this.form.get('Password').invalid\n  }\n}\n","<form (ngSubmit)=\"update()\" [formGroup]=\"form\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\n        <h2 class=\"headline m-0\" fxFlex=\"auto\">{{this.defaults.strNombre + ' ' + this.defaults.strApellidos}}</h2>\n        <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\n            <mat-icon [icIcon]=\"icClose\"></mat-icon>\n        </button>\n    </div>\n    <mat-divider class=\"-mx-6 text-border\"></mat-divider>\n    <mat-dialog-content fxLayout=\"column\">\n        <mat-form-field class=\"flex-auto\">\n            <mat-label>Nueva contraseña</mat-label>\n\n            <input cdkFocusInitial [type]=\"inputType\" formControlName=\"Password\" name=\"Password\" matInput minlength=\"8\" required>\n            <mat-icon [icIcon]=\"icLock\" class=\"mr-3\" matPrefix></mat-icon>\n            <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\" >\n                <mat-icon *ngIf=\"visible\"  class=\"mr-3\"  matPrefix [icIcon]=\"icVisibility\"></mat-icon>\n                <mat-icon *ngIf=\"!visible\" class=\"mr-3\"  matPrefix [icIcon]=\"icVisibilityOff\"></mat-icon>\n            </button>\n            <mat-error *ngIf=\"passwordInvalido\">Ingresa tu contraseña por favor</mat-error>\n            <mat-error *ngIf=\"pwdInvalida\">La contraseña debe de tener mínimo 8 caracteres en esos debe contener letras mayúsculas, minúsculas, números y caracteres *,!,$,%,?,+,etc..</mat-error>\n            <mat-hint>\n                <hr> Haga clic en el ojo para alternar la visibilidad.\n            </mat-hint>\n            <hr>\n\n        </mat-form-field>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close type=\"button\">CANCELAR</button>\n        <button [disabled]=\"!formularioValido\" color=\"primary\" mat-button type=\"submit\">ACTUALIZAR CONTRASEÑA</button>\n    </mat-dialog-actions>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsuarioActualizarContraseniaComponent } from './usuario-actualizar-contrasenia.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {IconModule} from \"@visurel/iconify-angular\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatMenuModule} from \"@angular/material/menu\";\n\n\n\n@NgModule({\n  declarations: [UsuarioActualizarContraseniaComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    IconModule,\n    MatDividerModule,\n    MatMenuModule,\n  ],\n  entryComponents: [UsuarioActualizarContraseniaComponent],\n  exports: [UsuarioActualizarContraseniaComponent]\n})\nexport class UsuarioActualizarContraseniaModule { }\n","import { Component, Inject, OnInit, ChangeDetectorRef} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport icPrint from '@iconify/icons-ic/twotone-print';\nimport icDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icPerson from '@iconify/icons-ic/twotone-person';\nimport  icPeople  from '@iconify/icons-ic/twotone-people';\nimport icMyLocation from '@iconify/icons-ic/twotone-my-location';\nimport icLocationCity from '@iconify/icons-ic/twotone-location-city';\nimport icEditLocation from '@iconify/icons-ic/twotone-edit-location';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport icEmail from '@iconify/icons-ic/twotone-mail';\nimport icCollections_bookmark from '@iconify/icons-ic/twotone-collections-bookmark';\nimport icExplore from '@iconify/icons-ic/twotone-explore';\nimport icBusiness from '@iconify/icons-ic/twotone-business';\nimport icApps from '@iconify/icons-ic/twotone-apps';\nimport icNavigation from '@iconify/icons-ic/twotone-navigation';\nimport icAccount_circle from '@iconify/icons-ic/twotone-account-circle';\nimport { UserModelCreator } from '../../models/register.model';\nimport icLock from '@iconify/icons-ic/twotone-lock';\nimport { RolesService } from '../../services/roles.service';\nimport { RolModel } from '../../models/rol.model';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConcesionesService } from '../../../app/services/concesiones.service';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\nimport { ConcesionModel } from '../../models/concesion.model';\nimport { TiposUsuariosService } from '../../services/tipos-usuarios.service';\nimport { TiposUsuariosModel } from '../../models/tipos-usuarios-model';\nimport { CiudadesService } from '../../services/ciudades.service';\nimport { CiudadesModel, CiudadReador, CiudadResponseReador } from '../../models/ciudades.model';\nimport { ValidadoresService } from 'src/app/services/validadores.service';\nimport { RegistroUsuarioService } from 'src/app/services/service.index';\n\n\n@Component({\n  selector: 'vex-usuario-crear-actualizar',\n  templateUrl: './usuario-crear-actualizar.component.html',\n  styles: []\n})\n\nexport class UsuarioCrearActualizarComponent implements OnInit {\n\n  roles: RolModel[];\n  concesiones: ConcesionModel[];\n  usuarios: TiposUsuariosModel[];\n  ciudades: CiudadReador[];\n \n  arruser: any[] = [];\n  arruseremail: any[] = [];\n\n  arrTodos: any[] = [];\n  arrAgente: any[] = [];\n\n  arrTodas: any[] = [];\n  arrConce: any[] = [];\n \n  form: FormGroup;\n  mode: 'create' | 'actualizar' = 'create';\n\n  visible = false;\n  inputType = 'password';\n  icMoreVert = icMoreVert;\n  icClose = icClose;\n  icPrint = icPrint;\n  icDownload = icDownload;\n  icDelete = icDelete;\n  icEmail = icEmail;\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n  icPerson = icPerson;\n  icPeople = icPeople;\n  icMyLocation = icMyLocation;\n  icLocationCity = icLocationCity;\n  icEditLocation = icEditLocation;\n  icCollections_bookmark = icCollections_bookmark;\n  icPhone = icPhone;\n  icLock = icLock;\n  icExplore = icExplore;\n  icBusiness = icBusiness;\n  icApps = icApps;\n  icNavigation = icNavigation;\n  icAccount_circle = icAccount_circle;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\n              private dialogRef: MatDialogRef<UsuarioCrearActualizarComponent>,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private rolService: RolesService,\n              private concesionService: ConcesionesService,\n              private tipoUsuariosService: TiposUsuariosService,\n              private ciudadesService: CiudadesService,\n              private validador: ValidadoresService,\n              private userservice: RegistroUsuarioService) {\n  }\n\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      /*id: '',*/\n      // imageSrc: this.defaults.imageSrc,\n      StrNombre: ['', [Validators.required, Validators.minLength(3),this.validador.soloLetras]],\n      StrApellidos: ['',[Validators.required, Validators.minLength(3),this.validador.soloLetras]],\n      Email: ['', [Validators.required, this.validador.emailValid]],\n      PhoneNumber: ['',[Validators.required, this.validador.phoneValid]],\n      Rol:['',[Validators.required, Validators.min(1)]],\n      //intIdTipoUsuario: this.defaults.intIdTipoUsuario || '',\n      IntIdCiudad: ['', [Validators.required]],\n      IntIdconcesionId: ['', [Validators.required]],\n      UserName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10) ,this.validador.userValid]],\n      Password: ['',[Validators.required, this.validador.passwordValid]],\n      StrRfc: ['', this.validador.rfcValid],\n      StrDireccion: ['',[Validators.required, Validators.maxLength(100), Validators.minLength(5)]],\n      StrCP: ['',[Validators.required, this.validador.cpValid]],\n      StrRazonSocial: ['', this.validador.razonValida]\n    });\n\n    if (this.defaults) {\n      this.mode = 'actualizar';\n      console.log('User Update ',this.defaults);\n      this.form.get('Password').disable();\n      this.form.patchValue({\n        StrNombre: this.defaults.strNombre,\n        StrApellidos: this.defaults.strApellidos,\n        Email: this.defaults.email,\n        PhoneNumber: this.defaults.phoneNumber,\n        IntIdCiudad: this.defaults.intIdCiudad,\n        IntIdconcesionId: this.defaults.intIdConcesion,\n        UserName: this.defaults.userName,\n        StrRfc: this.defaults.strRfc,\n        StrDireccion: this.defaults.strDireccion,\n        StrCP: this.defaults.strCp,\n        StrRazonSocial: this.defaults.strRazonSocial,\n        Password: 'D3sarrollo2020$',\n        Rol: this.defaults.strTipoUsuario\n      });\n    } else {\n      this.form.get('Password').enable();\n      this.defaults = {} as UserModelCreator;\n    }\n   /*this.rolService.getTodosRoles().subscribe(datos => {\n      this.roles = datos;\n    });*/\n\n    this.concesionService.getTodosConcesiones().subscribe((datos:any) => {\n      this.arrTodas = datos.data;\n      console.log('CONCESIONES ',this.arrTodas);\n      this.arrConce = this.arrTodas.filter(arrTodas => arrTodas.bitStatus !== false );\n    });\n\n    this.tipoUsuariosService.getTodosTiposUsuarios().subscribe((datos:any) => {\n      this.arrTodos = datos.data;\n      console.log('ROLES ', this.arrTodos);\n\n      this.arrTodos = this.arrTodos.filter(arrTodos => arrTodos.id !== 3 && arrTodos.id !== 6);\n    });\n\n    this.ciudadesService.getCuidades().subscribe((datos: CiudadResponseReador) => {\n      this.ciudades = datos.data;\n      console.log('CIUDADES ',this.ciudades);\n    });\n    \n  }\n  \n\n\n  save() {\n    if (this.mode === 'create') {\n      this.crearUsuario();\n    } else if (this.mode === 'actualizar') {\n      this.actualizarUsuario();\n    }\n  }\n\n  crearUsuario() {\n    const usuario = this.form.value;\n\n    console.log(usuario);\n    if ( usuario !== '') {\n      this.dialogRef.close(usuario);\n    }\n  }\n\n  actualizarUsuario() {\n    const usuario = this.form.value;\n    usuario.id = this.defaults.id;\n\n    this.dialogRef.close(usuario);\n  }\n\n  modoCrear() {\n    return this.mode === 'create';\n  }\n    modoActualizar() {\n    return this.mode === 'actualizar';\n  }\n// Visualizar el password\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n\n  //Validaciones\n get NombreInvalido(){\n    return this.form.get('StrNombre').invalid\n  }\n\n get apellidoInvalido(){\n    return this.form.get('StrApellidos').invalid\n  }\n\n get emailInvalido(){\n    return this.form.get('Email').invalid \n  }\n\n  get UserNameInvalido(){\n    return this.form.get('UserName').invalid\n  }\n  \n  get telfonoInvalido(){\n    return this.form.get('PhoneNumber').invalid \n  }\n\n  get rolInvalido(){\n    return this.form.get('Rol').invalid \n  }\n\n  get ciudadInvalida(){\n    return this.form.get('IntIdCiudad').invalid \n  }\n\n  get concesionInvalida(){\n    return this.form.get('IntIdconcesionId').invalid \n  }\n\n  get passwordInvalido(){\n    return this.form.get('Password').invalid \n  }\n\n  get rfcInvalido(){\n    return this.form.get('StrRfc').invalid \n  }\n\n  get direccInvalida(){\n    return this.form.get('StrDireccion').invalid \n  }\n\n  get cpInvalido(){\n    return this.form.get('StrCP').invalid \n  }\n\n  get razonInvalida(){\n    return this.form.get('StrRazonSocial').invalid \n  }\n\n  get pwdInvalida(){\n    return this.form.get('Password').invalid\n  }\n\n onBlurEmail( email?: string) {\n   this.arruseremail = [];\n    this.userservice.getTodosUsuarios().subscribe((responseuser: any) => {\n      this.arruser = responseuser.data;\n      this.arruseremail = this.arruser.filter(arruser => arruser.email === email);\n      if(this.arruseremail.length !== 0) {\n        this.mtduniqueemail(this.arruseremail);\n      }\n    });\n  }\n\n  onBlurUser(UserName?: string){\n   this.arruseremail = [];\n    this.userservice.getTodosUsuarios().subscribe((responseuser: any) => {\n      this.arruser = responseuser.data;\n      this.arruseremail = this.arruser.filter(arruser => arruser.UserName === UserName);\n      if(this.arruseremail.length !== 0) {\n        this.mtduniqueUser(this.arruseremail);\n      }\n    });\n  }  \n\n  mtduniqueemail(email: any): boolean {\n    const matched = email;\n    if (!matched) {\n        this.form.controls['email'].setErrors(null)\n    } else {\n        this.form.controls['email'].setErrors({\n           notMatched: true\n        });\n    }\n\n    return matched;\n}\n\nmtduniqueUser(UserName: any): boolean {\n  const matched = UserName;\n  if (!matched) {\n      this.form.controls['UserName'].setErrors(null)\n  } else {\n      this.form.controls['UserName'].setErrors({\n         notMatched: true\n      });\n  }\n\n  return matched;\n}\n\n  get formularioValido() {\n    if(\n      this.form.get('StrNombre').value === '' ||\n      this.form.get('StrApellidos').value === '' ||\n      this.form.get('StrCP').value === '' ||\n      this.form.get('StrDireccion').value === '' ||\n      this.form.get('Email').value === '' ||\n      this.form.get('Email').value === '' ||\n      this.form.get('UserName').value === '' ||\n      this.form.get('PhoneNumber').value === '' ||\n      this.form.get('IntIdconcesionId').value === '' ||\n      this.form.get('IntIdCiudad').value === '' ||\n      this.form.get('Rol').value === '' ||\n      this.form.get('Password').value === ''\n\n      ) return false;\n    \n    return true;\n    // return this.form.valid\n  }\n\n\n}\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\n        <h2 *ngIf=\"form.get('UserName').value || form.get('UserName').value\" class=\"headline m-0\" fxFlex=\"auto\">{{form.get('StrNombre').value + ' ' + form.get('StrApellidos').value }}</h2>\n        <h2 *ngIf=\"!form.get('UserName').value && !form.get('UserName').value\" class=\"headline m-0\" fxFlex=\"auto\">Nuevo Usuario</h2>\n\n\n\n        <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\n      <mat-icon [icIcon]=\"icClose\"></mat-icon>\n    </button>\n    </div>\n\n    <mat-divider class=\"-mx-6 text-border\"></mat-divider>\n\n\n    <mat-dialog-content fxLayout=\"column\">\n        <div class=\"flex flex-col sm:flex-row\">\n\n            <mat-form-field class=\"mt-6 flex-auto\">\n                <mat-label>Nombre</mat-label>\n                <input cdkFocusInitial formControlName=\"StrNombre\" matInput oninput=\"this.value = this.value.toUpperCase()\" required>\n                <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"form.get('StrNombre').hasError('espacios')\">No ingrese solo espacios </mat-error>\n                <mat-error *ngIf=\"NombreInvalido\">Ingrese un nombre valido por favor</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\n                <mat-label>Apellidos</mat-label>\n                <input cdkFocusInitial formControlName=\"StrApellidos\" matInput oninput=\"this.value = this.value.toUpperCase()\" required>\n                <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"form.get('StrApellidos').hasError('sololetras')\">Ingresa un apellido valido por favor </mat-error>\n                <mat-error *ngIf=\"form.get('StrApellidos').hasError('espacios')\">No ingrese solo espacios </mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <div class=\"flex flex-col sm:flex-row\">\n\n            <mat-form-field class=\"mt-6 flex-auto\">\n                <mat-label>RFC</mat-label>\n                <input cdkFocusInitial formControlName=\"StrRfc\" oninput=\"this.value = this.value.toUpperCase()\" matInput>\n                <mat-icon [icIcon]=\"icCollections_bookmark\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"rfcInvalido\">Ingresar tu RFC es opcional </mat-error>\n                <mat-error *ngIf=\"form.get('StrRfc').hasError('rfcIn')\">El RFC consta de 10 Caracteres</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\n                <mat-label>Dirección</mat-label>\n                <input cdkFocusInitial formControlName=\"StrDireccion\" matInput oninput=\"this.value = this.value.toUpperCase()\" required>\n                <mat-icon [icIcon]=\"icExplore\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"direccInvalida\">Ingresa tu dirección por favor </mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <div class=\"flex flex-col sm:flex-row\">\n            <mat-form-field class=\"mt-6 flex-auto\">\n                <mat-label>Codigo Postal</mat-label>\n                <input cdkFocusInitial formControlName=\"StrCP\" matInput oninput=\"this.value = this.value.toUpperCase()\" required>\n                <mat-icon [icIcon]=\"icPerson\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"cpInvalido\">Ingresa tu codigo postal valido por favor </mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\n                <mat-label>Razon Social</mat-label>\n                <input cdkFocusInitial formControlName=\"StrRazonSocial\" oninput=\"this.value = this.value.toUpperCase()\" matInput>\n                <mat-icon [icIcon]=\"icBusiness\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"razonInvalida\">Ingresar tu razon social es opcional </mat-error>\n                <mat-error *ngIf=\"this.form.get('StrRazonSocial').hasError('espaciosRazon')\">No ingrese solo espacios por favor</mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <div class=\"flex flex-col sm:flex-row\">\n\n            <mat-form-field class=\"mt-6 flex-auto\">\n                <mat-label>Correo</mat-label>\n                <input #Email cdkFocusInitial formControlName=\"Email\" matInput required (blur)=\"onBlurEmail(Email.value);\">\n                <mat-icon [icIcon]=\"icEmail\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"this.form.get('Email').hasError('notMatched')\">Este correo no se encuentra disponible </mat-error>\n                <mat-error *ngIf=\"this.form.get('Email').hasError('emailInValid')\">Ingrese un email valido</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\" sm:mt-6 sm:ml-6  flex-auto\">\n                <mat-label>Usuario</mat-label>\n                <input #UserName cdkFocusInitial formControlName=\"UserName\" matInput oninput=\"this.value = this.value.toUpperCase()\" required (blur)=\"onBlurUser(UserName.value);\">\n                <mat-icon [icIcon]=\"icPeople\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"this.form.get('UserName').hasError('notMatched')\">Este nombre de usuario no se encuentra disponible </mat-error>\n                <mat-error *ngIf=\"this.form.get('UserName').hasError('userNameInvalido')\">Ingresa el nombre de usuario por favor </mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <div class=\"flex flex-col sm:flex-row\">\n\n            <mat-form-field class=\" mt-6 flex-auto\">\n                <mat-label>Número Telefonico</mat-label>\n                <input cdkFocusInitial formControlName=\"PhoneNumber\" matInput oninput=\"this.value = this.value.toUpperCase()\" required>\n                <mat-icon [icIcon]=\"icPhone\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"telfonoInvalido\">Ingresa un numero telefónico valido por favor </mat-error>\n            </mat-form-field>\n\n            <!-- // Modificar -->\n            <!-- <mat-form-field *ngIf=\"form.get('userName').value || form.get('userName').value\" class=\"mt-6 flex-auto\">\n                <mat-label for=\"usuarios\">Seleciona Rol</mat-label>\n                <mat-select cdkFocusInitial id=\"usuarios\" formControlName=\"rl\" matSelect required>\n                    <mat-option *ngFor=\"let usuario of usuarios\" [value]=\"usuario.id || usurio.strTipoUsuario\">\n                        {{usuario.strTipoUsuario}}\n                    </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"form.get('rol').hasError('required')\">Selecciona el tipo de usuario por favor </mat-error>\n            </mat-form-field> -->\n\n\n\n            <mat-form-field class=\"sm:mt-6 sm:ml-6 flex-auto\">\n                <mat-label for=\"consesiones\">Seleciona Concesión</mat-label>\n                <mat-select cdkFocusInitial id=\"consesiones\" formControlName=\"IntIdconcesionId\" matSelect required>\n                    <mat-option *ngFor=\"let concesion of arrConce\" [value]=concesion.id>\n                        {{ concesion.strNombreCliente}}\n                    </mat-option>\n                </mat-select>\n                <mat-icon [icIcon]=\"icApps\" class=\"mr-3\" matPrefix></mat-icon>\n                <mat-error *ngIf=\"concesionInvalida\">Selecciona una concesión por favor </mat-error>\n            </mat-form-field>\n\n        </div>\n\n        <mat-form-field class=\"flex-auto\">\n            <mat-label for=\"ciudades\">Seleciona una ciudad</mat-label>\n            <mat-select cdkFocusInitial id=\"ciudades\" formControlName=\"IntIdCiudad\" matSelect required>\n                <!-- <mat-select [(value)]=\"selected\"></mat-select> -->\n                <mat-option *ngFor=\"let ciudad of ciudades\" [value]=ciudad.id>\n                    {{ciudad.strCiudad}}\n                </mat-option>\n            </mat-select>\n            <mat-icon [icIcon]=\"icNavigation\" class=\"mr-3\" matPrefix></mat-icon>\n            <mat-error *ngIf=\"ciudadInvalida\">Selecciona una ciudad por favor </mat-error>\n        </mat-form-field>\n\n\n        <!-- // Crear -->\n        <mat-form-field class=\"flex-auto\">\n            <mat-label for=\"usuarios\">Seleciona Rol</mat-label>\n            <mat-select cdkFocusInitial id=\"usuarios\" formControlName=\"Rol\" matSelect required>\n                <mat-option *ngFor=\"let usuario of arrTodos\" [value]=usuario.strTipoUsuario>\n                    {{usuario.strTipoUsuario}}\n                </mat-option>\n            </mat-select>\n            <mat-icon [icIcon]=\"icAccount_circle\" class=\"mr-3\" matPrefix></mat-icon>\n            <mat-error *ngIf=\"rolInvalido\">Selecciona el tipo de usuario por favor </mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field class=\"flex-auto\">\n            <mat-label>Contraseña</mat-label>\n\n            <input cdkFocusInitial [type]=\"inputType\" formControlName=\"Password\" name=\"Password\" matInput minlength=\"8\" required>\n            <mat-icon [icIcon]=\"icLock\" class=\"mr-3\" matPrefix></mat-icon>\n            <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\" [disabled]=\"mode === 'actualizar'\">\n        <mat-icon *ngIf=\"visible\"  class=\"mr-3\"  matPrefix [icIcon]=\"icVisibility\"></mat-icon>\n        <mat-icon *ngIf=\"!visible\" class=\"mr-3\"  matPrefix [icIcon]=\"icVisibilityOff\"></mat-icon>\n      </button>\n            <mat-error *ngIf=\"passwordInvalido\">Ingresa tu contraseña por favor</mat-error>\n            <mat-error *ngIf=\"pwdInvalida\">La contraseña debe de tener mínimo 8 caracteres en esos debe contener letras mayúsculas, minúsculas, números y caracteres *,!,$,%,?,+,etc..</mat-error>\n            <mat-hint>\n                <hr> Haga clic en el ojo para alternar la visibilidad.\n            </mat-hint>\n            <hr>\n            <!-- <mat-hint>Haga clic en el ojo para alternar la visibilidad.</mat-hint> -->\n            <!-- <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error> -->\n        </mat-form-field>\n\n        <!-- <mat-form-field class=\"flex-auto\">\n            <mat-label>Notes</mat-label>\n            <textarea formControlName=\"notes\" matInput></textarea>\n        </mat-form-field> -->\n        <hr>\n        <!--pre>\n            Estado del Formulario: {{form.valid}}\n            <br>\n            Status: {{form.status}}\n        </pre>\n\n        <pre>\n            {{form.value | json}}\n        </pre-->\n    </mat-dialog-content>\n\n\n    <mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close type=\"button\">CANCELAR</button>\n        <button *ngIf=\"modoCrear();\" [disabled]=\"!formularioValido\"  color=\"primary\" mat-button type=\"submit\">GUARDAR USUARIO</button>\n        <button *ngIf=\"modoActualizar();\" [disabled]=\"!formularioValido\"  color=\"primary\" mat-button type=\"submit\">ACTUALIZAR USUARIO</button>\n    </mat-dialog-actions>\n    \n</form>\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <button mat-menu-item>\n    <mat-icon [icIcon]=\"icPrint\"></mat-icon>\n    <span>Print</span>\n  </button>\n\n    <button mat-menu-item>\n    <mat-icon [icIcon]=\"icDownload\"></mat-icon>\n    <span>Export</span>\n  </button>\n\n    <button mat-menu-item>\n    <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n    <span>Eliminar</span>\n  </button>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsuarioCrearActualizarComponent } from './usuario-crear-actualizar.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatDividerModule } from '@angular/material/divider';\n\n\n\n\n@NgModule({\n  declarations: [UsuarioCrearActualizarComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatMenuModule,\n    IconModule,\n    MatDividerModule\n  ],\n  entryComponents: [UsuarioCrearActualizarComponent],\n  exports: [UsuarioCrearActualizarComponent]\n})\nexport class UsuarioCrearActualizarModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n\nimport { VexRoutes } from '../../@vex/interfaces/vex-route.interface';\nimport { UsuariosComponent } from './usuarios.component';\nimport { AuthGuard } from '../pages/auth/login/auth.guard';\n\n\n\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: UsuariosComponent,\n    canActivate: [AuthGuard],\n    data: {\n      toolbarShadowEnabled: true,\n      //containerEnabled: true,\n      scrollDisableb: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuariosRoutingModule { }\n","import { Component, OnInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewInit } from '@angular/core';\nimport icAdd from '@iconify/icons-ic/twotone-add';\nimport icDelete from '@iconify/icons-ic/twotone-delete';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icPersonAdd from '@iconify/icons-ic/twotone-person-add';\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icPeople from '@iconify/icons-ic/twotone-people';\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\nimport icEdit from '@iconify/icons-ic/twotone-edit';\nimport icPlay_arrow from '@iconify/icons-ic/twotone-play-arrow';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { UserModelCreator, UserModelReador, UsersResponse } from '../models/register.model';\nimport { RegistroUsuarioService } from '../services/registro-usuario.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {  UntilDestroy ,untilDestroyed } from '@ngneat/until-destroy';\nimport { UsuarioCrearActualizarComponent } from './usuario-crear-actualizar/usuario-crear-actualizar.component';\nimport { RolesService } from '../services/roles.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport Swal from 'sweetalert2';\n\n//animaciones\nimport { fadeInRight400ms } from '../../@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '../../@vex/animations/scale-fade-in.animation';\nimport { scaleIn400ms } from '../../@vex/animations/scale-in.animation';\nimport { UsuarioActualizarContraseniaComponent } from './usuario-actualizar-contrasenia/usuario-actualizar-contrasenia.component';\n\n\n\n\n//doracion de UntilDestroy\n@UntilDestroy( )\n@Component({\n  selector: 'vex-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UsuariosComponent implements OnInit, AfterViewInit {\n\n  // con esto se accede al elemento MatTable para usar .renderRows y actualizar la tabla\n  @ViewChild(MatTable, {static: true}) table: MatTable<Element>;\n\n\n\n  icAdd = icAdd;\n  icDelete = icDelete;\n  icSearch = icSearch;\n  icMoreHoriz = icMoreHoriz;\n  icEdit = icEdit;\n  icPersonAdd = icPersonAdd;\n  icContacts = icContacts;\n  icPeople = icPeople;\n  icPlay_arrow = icPlay_arrow;\n\n  searchCtrl = new FormControl();\n  layoutCtrl = new FormControl('boxed');\n\n  arruser: any[] = [];\n  arruseremail: any[] = [];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [10, 20, 30, 50];\n  displayedColumns: string[] = ['strNombreCliente','strNombre', 'userName', 'email', 'strTipoUsuario', 'bitStatus', 'actions'];\n  selection = new SelectionModel<UserModelReador>(true, []);\n  dataSource = new MatTableDataSource<UserModelReador>(DATOS);\n\n \n  arrdatausuarios: UserModelReador[] = [];\n  arrUserloginNoList: any [] = [];\n\n  //propiedad para ocultar un boton\n  boton = false;\n  boton2 = false; \n\n  //varible para almecenar el id del usuario\n  intidUsuario: any;\n  // arreglo para almacenar los datos del usuario que inicio sesión\n  arrcurrentUser: any;\n\n\n\n  constructor(private registrarUsuarioService: RegistroUsuarioService,\n              public rolService: RolesService,\n              public fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private dialog: MatDialog ) { }\n\n  ngOnInit() {\n    \n    if (sessionStorage.getItem('usuario')) {\n\n      let currentUsuer = sessionStorage.getItem('usuario');\n      let currentUsuerJ = JSON.parse(currentUsuer);\n      console.log('USER AUTH', currentUsuerJ);\n                        \n      this.arrcurrentUser = {\n        strNombre: currentUsuerJ.data.strNombre,\n        strApellidos: currentUsuerJ.data.strApellidos\n      }\n\n      // se obtienen id de la conseción a la que pertenece el usuario\n      this.intidUsuario = currentUsuerJ.data.id;\n      console.log(this.intidUsuario + ' id de usuario en login');\n    }\n\n    this.registrarUsuarioService.mtdrefreshdata$.subscribe(() => {\n      this.getTodosUsuarios();\n    });\n\n    this.boton = true;\n    this.boton2 = true;\n\n\n    this.getTodosUsuarios();\n    // Filtro de la tabla\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n\n  }\n    // paginador\n    ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n\n    // mtd Obtener todos los usuarios\n    // se modifico el mtd para que solo se puedan obtener todos los usuarios con bit_status en true\n  getTodosUsuarios() {\n    this.registrarUsuarioService.getTodosUsuarios().subscribe( (todos: UsersResponse) => {\n      this.arrdatausuarios = todos.data;\n\n      console.log('Hola usuarios',this.arrdatausuarios);\n\n     // this.arrUserloginNoList = this.arrdatausuarios.filter(arrdatausuarios => arrdatausuarios.id !== this.intidUsuario);\n\n      this.dataSource.data = this.arrdatausuarios;\n      console.log('USuarios :D ',this.dataSource);\n      this.boton = true;\n      this.boton2 = false;\n      console.log(this.arrdatausuarios);\n    });\n  }\n\n   // mtd Obtener todos los usuarios en bit_status en false\n   getTodosUsuariosFalse(){\n    this.registrarUsuarioService.getTodosUsuariosFalse().subscribe( (todos: UsersResponse) => {\n      this.arrdatausuarios = todos.data;\n      this.dataSource.data = this.arrdatausuarios;\n      this.boton = false;\n      this.boton2 = true;\n      console.log('Hola inactivos',this.arrdatausuarios);\n    });\n   }\n\n\n  // mtd de filtrado de la tabla \n  // mtd de filtrado de la tabla \n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n          return;\n        }\n        value = value.trim();\n        value = value.toLowerCase();\n        this.dataSource.filter = value;\n      }\n\n  actualizarContrasenia(usuario: UserModelReador){\n    console.log(usuario);\n    this.dialog.open(UsuarioActualizarContraseniaComponent,{\n      data: usuario\n    }).afterClosed().subscribe( nuevaContrasenia => {\n      if(nuevaContrasenia){\n        usuario.password = nuevaContrasenia;\n        this.registrarUsuarioService.mtdputPasswordUsuario(usuario.id, usuario)\n          .subscribe((res: any) => {\n            Swal.fire({\n              icon: \"success\",\n              title: \"La contraseña se ha cambiado correctamente\",\n              showConfirmButton: false,\n              timer: 1500\n            })\n          },\n            (err:any) => {\n              Swal.fire({\n                icon: 'error',\n                title: 'Ha ocurrido un error al cambiar la contraseña',\n                showConfirmButton: false,\n                timer: 1500\n              });\n            }\n          )\n      }\n    })\n  }\n      \n\n  actualizarUsuario(usuario: UserModelReador) {\n        console.log(usuario);\n        this.dialog.open(UsuarioCrearActualizarComponent, {\n          data: usuario\n        }).afterClosed().subscribe(actializarUsuario => {\n          /**\n           * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n           */\n          if (actializarUsuario) {\n            /**\n             * Here we are updating our local array.\n             * You would probably make an HTTP request here.\n             */console.log('Update ', actializarUsuario);\n             this.registrarUsuarioService.actualizarUsuario(actializarUsuario).subscribe((res:any)=>{\n              Swal.fire({\n                icon: 'success',\n                title: 'El usuario ha sido actualizado',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              console.log(res);\n             },\n             err=>{\n              console.log(err)\n              if(err){\n                Swal.fire({\n                  icon: 'error',\n                  title: 'Por favor verifique sus datos',\n                  showConfirmButton: false,\n                  timer: 1500 \n                });\n              }\n            }\n             );\n           \n          }\n        });\n  }\n\n      crearUsuario() {\n        this.dialog.open(UsuarioCrearActualizarComponent).afterClosed().subscribe((usuario: UserModelCreator) => {\n          /**\n           * Customer is the updated customer (if the user pressed Save - otherwise it's null)\n           */\n          if (usuario) {\n            /**\n             * Here we are updating our local array.\n             * You would probably make an HTTP request here.\n             */\n            console.log('Datos usuario',usuario);\n            this.registrarUsuarioService.registrarUserPost(usuario).subscribe(( response: any )=> {\n              Swal.fire({\n                icon: 'success',\n                title: 'El usuario ha sido guardado',\n                showConfirmButton: false,\n                timer: 1500\n              });\n              console.log(response);\n            },\n            err=>{\n              console.log(err)\n              if(err){\n                Swal.fire({\n                  icon: 'error',\n                  title: 'Por favor verifique sus datos',\n                  showConfirmButton: false,\n                  timer: 1500 \n                });\n              }\n            });\n          }\n        });\n      }\n\n    deleteUsuario(usuario: UserModelReador ) {\n      console.log('Usuario Baja', usuario);\n      this.registrarUsuarioService.deleteUsuario(usuario).subscribe((res: any)=>{\n      Swal.fire({\n            icon: 'success',\n            title: 'El usuario esta inactivo',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          console.log(res);\n        });\n    }\n\n    activarUsuario(customer: UserModelReador){\n      console.log(customer);\n        this.registrarUsuarioService.activarUsuario(customer).subscribe((res:any)=>{\n          Swal.fire({\n            icon: 'success',\n            title: 'El usuario esta inactivo',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        console.log(res);\n       });\n     }\n\n    ngOnDestroy() {}\n}\n const DATOS: UserModelReador[] = [];\n\n //AURG 17/12/2020\n\n\n","<div class=\"h-full\" fxLayout=\"column\">\n\n    <div class=\"p-6 pb-5 bg-card shadow-b\" fxFlex=\"none\">\n        <div vexContainer>\n            <h1 class=\"display-1 mt-0 mb-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <span @scaleIn class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-light\">\n                <ic-icon [icon]=\"icContacts\" size=\"24px\"></ic-icon>\n                </span>\n                <span @fadeInRight class=\"block\">Catálogo de Usuarios</span>\n            </h1>\n            <div vexContainer style=\"float: right;\">\n                <button *ngIf=\"boton\" (click)=\"crearUsuario()\" class=\"ltr:ml-4 rtl:mr-4\" color=\"primary\" fxFlex=\"none\" fxHide.xs mat-raised-button type=\"button\" style=\"float: right;\">\n                    <ic-icon [icon]=\"icPersonAdd\" class=\"ltr:mr-2 rtl:ml-2 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"20px\"></ic-icon>\n                    <span>AGREGAR USUARIO</span>\n                </button>\n\n                <button *ngIf=\"boton\" (click)=\"getTodosUsuariosFalse()\" class=\"ltr:ml-4 rtl:mr-4\" color=\"primary\" fxFlex=\"none\" fxHide.xs mat-raised-button type=\"button\" style=\"float: right;\">\n                    <ic-icon [icon]=\"icPeople\" class=\"ltr:mr-2 rtl:ml-2 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"20px\"></ic-icon>\n                    <span>USUARIOS INACTIVOS</span>\n                </button>\n\n                <button *ngIf=\"boton2\" (click)=\"getTodosUsuarios()\" class=\"ltr:ml-4 rtl:mr-4\" color=\"primary\" fxFlex=\"none\" fxHide.xs mat-raised-button type=\"button\" style=\"float: right;\">\n                    <ic-icon [icon]=\"icPeople\" class=\"ltr:mr-2 rtl:ml-2 ltr:-ml-1 rtl:-mr-1\" inline=\"true\" size=\"20px\"></ic-icon>\n                    <span>USUARIOS ACTIVOS</span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <vex-page-layout-content class=\"mt-10\">\n\n        <div class=\"card overflow-auto\">\n\n            <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"auto\" fxHide.xs>\n                    <span *ngIf=\"selection.isEmpty()\">Buscar:</span>\n                </h2>\n\n                <div class=\"bg-card rounded-full border px-4\" fxFlex=\"800px\" fxFlex.lt-md=\"auto\" fxHide.xs fxLayout=\"row\">\n                    <ic-icon [icIcon]=\"icSearch\" size=\"40px\"></ic-icon>\n                    <input [formControl]=\"searchCtrl\" class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\" placeholder=\"Buscar...\" type=\"search\">\n                </div>\n\n                <span fxFlex></span>\n\n                <!--  \n                    <button (click)=\"crearUsuario()\" class=\"ml-4\" color=\"primary\" fxFlex=\"none\" mat-mini-fab matTooltip=\"Add Customer\" type=\"button\">\n                        <mat-icon [icIcon]=\"icAdd\"></mat-icon>\n                    </button>\n                -->\n\n                <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\n                    <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n                </button>\n            </div>\n\n            <h2 *ngIf='boton' class=\"mt-3 mb-6 ml-2\">Usuarios Activos</h2>\n            <h2 *ngIf='boton2' class=\"mt-3 mb-6 ml-2\">Usuarios Inactivos</h2>\n\n            <table #table mat-table [dataSource]=\"dataSource\" matSort class=\"w-full\">\n\n                <ng-container matColumnDef=\"strNombreCliente\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Concesión</th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.strNombreCliente}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"strNombre\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Nombre</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.strNombre}} {{element.strApellidos}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Usuario </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.userName}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"email\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Correo </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"strTipoUsuario\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Tipo De Usuario </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.strTipoUsuario}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"bitStatus\">\n                    <th mat-header-cell *matHeaderCellDef> Estado</th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.bitStatus === true ? 'Activo' : 'Inactivo'}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th *matHeaderCellDef mat-header-cell> Acciones </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"w-10 text-secondary\" mat-cell>\n                        <button (click)=\"$event.stopPropagation()\" [matMenuTriggerData]=\"{ customer: element }\" [matMenuTriggerFor]=\"actionsMenu \" mat-icon-button type=\"button \">\n                        <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\n                    </button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\n        </div>\n\n    </vex-page-layout-content>\n</div>\n\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\n    <ng-template let-customer=\"customer\" matMenuContent>\n\n        <button *ngIf=\"customer.bitStatus !== false\" (click)=\"actualizarUsuario(customer)\" mat-menu-item>\n            <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n            <span>Modificar</span>\n        </button>\n\n        <button *ngIf=\"customer.bitStatus !== false\" (click)=\"actualizarContrasenia(customer)\" mat-menu-item>\n            <mat-icon [icIcon]=\"icEdit\"></mat-icon>\n            <span>Cambiar contraseña</span>\n        </button>\n\n        <button *ngIf=\"customer.strTipoUsuario !== 'AGENTE VIAL'&& boton \" (click)=\"deleteUsuario(customer);\" mat-menu-item>\n            <mat-icon [icIcon]=\"icDelete\"></mat-icon>\n            <span>Eliminar</span>\n        </button>\n\n        <button *ngIf=\"customer.bitStatus === false\" (click)=\"activarUsuario(customer);\" mat-menu-item>\n            <mat-icon [icIcon]=\"icPlay_arrow\"></mat-icon>\n            <span>Activar</span>\n        </button>\n\n    </ng-template>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsuariosComponent } from './usuarios.component';\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\n\nimport { PageLayoutModule } from '../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ColorFadeModule  } from '../../@vex/pipes/color/color-fade.module';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { SecondaryToolbarModule } from '../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSortModule } from '@angular/material/sort';\nimport { UsuarioCrearActualizarModule } from './usuario-crear-actualizar/usuario-crear-actualizar.module';\nimport {UsuarioActualizarContraseniaModule} from './usuario-actualizar-contrasenia/usuario-actualizar-contrasenia.module';\n\n\n\n@NgModule({\n  declarations: [UsuariosComponent],\n  imports: [\n    CommonModule,\n    UsuariosRoutingModule,\n    UsuarioCrearActualizarModule,\n    UsuarioActualizarContraseniaModule,\n    MatSortModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    ColorFadeModule,\n    MatButtonToggleModule,\n    SecondaryToolbarModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatStepperModule,\n\n  ]\n})\nexport class UsuariosModule { }\n"]}