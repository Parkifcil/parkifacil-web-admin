{"version":3,"sources":["webpack:///src/@vex/animations/fade-in-right.animation.ts","webpack:///src/@vex/animations/fade-in-up.animation.ts","webpack:///src/@vex/animations/scale-fade-in.animation.ts","webpack:///src/@vex/animations/scale-in.animation.ts","webpack:///src/app/ingresos/detalleIngreso/detalle-usuario/detalle-usuario.component.ts","webpack:///src/app/ingresos/detalleIngreso/detalle-usuario/detalle-usuario.component.html","webpack:///src/app/ingresos/ingresos-usuarios/ingresos-usuarios-routing.module.ts","webpack:///src/app/ingresos/ingresos-usuarios/ingresos-usuarios.component.html","webpack:///src/app/ingresos/ingresos-usuarios/ingresos-usuarios.component.ts","webpack:///src/app/services/ingreso-usuarios.service.ts"],"names":["fadeInRightAnimation","duration","transform","opacity","fadeInRight400ms","fadeInUpAnimation","fadeInUp400ms","scaleFadeInAnimation","scaleFadeIn400ms","scaleInAnimation","scaleIn400ms","DetalleUsuarioComponent","usuario","dialogRef","fb","cd","ingresosusuariosservices","displayedColumns","dataSource","DATOS","colorVERDE","colorVERDEOscuro","colorROSA","arrmovimientosusuarios","icClose","mtdobtenerfechaseleccionada","console","log","mtddetallemovimientos","datemes","dateanio","myDate","Date","month","getMonth","year","getFullYear","mtdgetobtenermovimientosUsuarios","subscribe","response","data","markForCheck","getMesSeleccionado","getAnioSeleccionado","selector","templateUrl","styleUrls","routes","path","component","canActivate","toolbarShadowEnabled","scrollDisableb","IngresosUsuariosRoutingModule","forChild","imports","exports","IngresosUsuariosComponent","dialog","arrResumenXusuarios","arrIngresosXusuario","arrUsuario","searchCtrl","selection","selectedOptions","checkedValues","arrCtasLicencia","arrPassLicencia","arrfechasanios","arringresosresumen","arrmeses","nombre","value","icContacts","icSearch","mtdgenerarAnios","mtdrefreshdata$","mtdobtenerResumendeIngresosUsuarios","mtdpintarfechaSeleccionada","valueChanges","pipe","onFilterChange","trim","toLowerCase","filter","open","height","mes","anio","mtdobtenerResumendeIngresosUsuariosParam","setMesSeleccionado","setAnioSeleccionado","nombreMes","mesSelected","anioSelected","mtdgetobtenerResumenIngresosUsuarios","datefecha","index","push","mtdclickobtenerIngresosMensualesFecha","animations","changeDetection","OnPush","IngresoUsuariosService","http","_refreshdata$","headers","set","currentUser","get","API_URL","error","msg","ErrorEvent","message","status","providedIn"],"mappings":"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","file":"ingresos-ingresos-usuarios-ingresos-usuarios-routing-module-es5.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInRightAnimation(duration: number) {\n  return trigger('fadeInRight', [\n    transition(':enter', [\n      style({\n        transform: 'translateX(-20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInRight400ms = fadeInRightAnimation(400);\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function fadeInUpAnimation(duration: number) {\n  return trigger('fadeInUp', [\n    transition(':enter', [\n      style({\n        transform: 'translateY(20px)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const fadeInUp400ms = fadeInUpAnimation(400);\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function scaleFadeInAnimation(duration: number) {\n  return trigger('scaleFadeIn', [\n    transition(':enter', [\n      style({\n        transform: 'scale(0.8)',\n        opacity: 0\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'scale(1)',\n        opacity: 1\n      }))\n    ])\n  ]);\n}\n\nexport const scaleFadeIn400ms = scaleFadeInAnimation(400);\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport function scaleInAnimation(duration: number) {\n  return trigger('scaleIn', [\n    transition(':enter', [\n      style({\n        transform: 'scale(0)'\n      }),\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\n        transform: 'scale(1)'\n      }))\n    ])\n  ]);\n}\n\nexport const scaleIn400ms = scaleInAnimation(400);\n","import { Component, Inject, OnInit, ChangeDetectorRef, AfterViewInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport {  UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {PageEvent} from '@angular/material/paginator';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\nimport { IngresoUsuariosService } from '../../../services/ingreso-usuarios.service';\nimport { IngresosMensualesUsuariosModel, IngresosMensualesUsuariosResponse } from '../../../models/ingresosmensualesusuarios.model';\n\n@Component({\n  selector: 'vex-detalle-usuario',\n  templateUrl: './detalle-usuario.component.html',\n  styleUrls: ['./detalle-usuario.component.scss']\n})\nexport class DetalleUsuarioComponent implements OnInit, AfterViewInit {\n\n  // propiedades de la tabla\n  // @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  // pageSize = 10;\n  // pageSizeOptions: number[] = [10, 20, 30, 50];\n  displayedColumns: string[] = ['ID', 'fecha', 'horaInicio', 'horaFin', 'concesion', 'saldoant', 'tiempo', 'monto', 'comision', 'cargo', 'devtiempo', 'devolucion', 'comisiondev', 'devtotal', 'tiempototal', 'montototal'];\n  // pageEvent: PageEvent;\n  // dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  dataSource = new MatTableDataSource<IngresosMensualesUsuariosModel>(DATOS);\n\n  // propiedades de los colores de la tabla\n  colorVERDE = '#E2EFDA';\n  colorVERDEOscuro = '#c6e0b4';\n  colorROSA = '#ff9999';\n\n  // propidades para recuperar la fecha seleccionada por el usuario\n  datemes: any;\n  dateanio: any;\n\n  // arreglos utilizados\n  arrmovimientosusuarios: IngresosMensualesUsuariosModel[] = [];\n\n  // iconos\n  icClose = icClose;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public usuario: any,\n              private dialogRef: MatDialogRef<DetalleUsuarioComponent>,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private ingresosusuariosservices: IngresoUsuariosService) {\n                this.mtdobtenerfechaseleccionada();\n              }\n\n  // propiedades del mat-tabla\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  ngOnInit(): void {\n    console.log('soy el usuario que viene de aya', this.usuario);\n    this.mtddetallemovimientos();\n  }\n\n  // paginador\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  mtddetallemovimientos() {\n    if (this.usuario) {\n\n      if (!this.datemes && !this.dateanio) {\n\n        this.arrmovimientosusuarios = [];\n        const myDate = new Date();\n        const month = myDate.getMonth() + 1;\n        const year = myDate.getFullYear();\n\n        console.log('Fecha no seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosusuariosservices.mtdgetobtenermovimientosUsuarios(month, year, this.usuario)\n            .subscribe(({data: response}: IngresosMensualesUsuariosResponse) => {\n              console.log(response);\n              this.arrmovimientosusuarios = response;\n              this.dataSource.data = this.arrmovimientosusuarios;\n              this.cd.markForCheck();\n        });\n      }\n      else {\n        this.arrmovimientosusuarios = [];\n        console.log('Fecha seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosusuariosservices.mtdgetobtenermovimientosUsuarios(this.datemes, this.dateanio, this.usuario)\n                .subscribe(({data: response}: IngresosMensualesUsuariosResponse) => {\n                  console.log(response);\n                  this.arrmovimientosusuarios = response;\n                  this.dataSource.data = this.arrmovimientosusuarios;\n                  this.cd.markForCheck();\n            });\n      }\n\n    }\n\n    else {\n      console.log('No existe el usuario');\n    }\n  }\n\n  // metodo que recupera el mes y año seleccionado por el usuario\n  mtdobtenerfechaseleccionada() {\n    this.datemes = this.ingresosusuariosservices.getMesSeleccionado();\n    this.dateanio = this.ingresosusuariosservices.getAnioSeleccionado();\n  }\n\n}\n\nconst DATOS: IngresosMensualesUsuariosModel[] = [];\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\n    <!-- Este es el boton de cerrar del popup -->\n    <button type=\"button\" class=\"text-secondary\" mat-icon-button mat-dialog-close>\n        <mat-icon [icIcon]=\"icClose\"></mat-icon>\n    </button>\n    <h2 class=\"headline m-0\" fxFlex=\"auto\">\n        Movimientos del usuario {{ usuario }}\n    </h2>\n</div>\n<mat-dialog-content fxLayout=\"column\" style=\"min-height: fit-content;\" class=\"card overflow-auto\">\n    <div class=\"flex flex-col sm:flex-row\" style=\"margin-top: 5px;\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"ID\">\n                <th mat-header-cell *matHeaderCellDef> No. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.no}} </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"fecha\">\n                <th mat-header-cell *matHeaderCellDef> Fecha </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fechaInicio | date: 'dd/MM/yyyy'}} </td>\n            </ng-container>\n\n             <!-- Name Column -->\n             <ng-container matColumnDef=\"horaInicio\">\n                <th mat-header-cell *matHeaderCellDef> Hora inicio </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fechaInicio | date: 'h:mm:ss a'}} </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"horaFin\">\n                <th mat-header-cell *matHeaderCellDef> Hora fin </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fechaFin | date: 'h:mm:ss a'}} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"concesion\">\n                <th mat-header-cell *matHeaderCellDef> Concesión </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDE\"> {{element.concesion}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"saldoant\">\n                <th mat-header-cell *matHeaderCellDef> Saldo anterior </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.saldoAnterior | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tiempo\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDE\"> {{element.tiempo}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"monto\">\n                <th mat-header-cell *matHeaderCellDef> Monto </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDE\"> {{element.monto | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"comision\">\n                <th mat-header-cell *matHeaderCellDef> Comisión </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDE\"> {{element.comision | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cargo\">\n                <th mat-header-cell *matHeaderCellDef> Cargo </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDE\"> {{element.cargo | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"devtiempo\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo devuelto</th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorROSA\"> {{ element.tiempoDevuelto }} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"devolucion\">\n                <th mat-header-cell *matHeaderCellDef> Monto devuelto</th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorROSA\"> {{element.montoDevuelto | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"comisiondev\">\n                <th mat-header-cell *matHeaderCellDef> Comisión devuelta</th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorROSA\"> {{element.comisionDevuelta | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"devtotal\">\n                <th mat-header-cell *matHeaderCellDef>Monto total de devolución</th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorROSA\"> {{element.montoTotalDevolucion | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tiempototal\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo total </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDEOscuro\"> {{element.tiempoTotal}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"montototal\">\n                <th mat-header-cell *matHeaderCellDef> Monto total </th>\n                <td mat-cell *matCellDef=\"let element\" [style.background]=\"colorVERDEOscuro\"> {{element.montoTotal | currency:'CAD':'symbol-narrow'}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n        </table>\n\n    </div>\n</mat-dialog-content>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\nimport { IngresosUsuariosComponent } from './ingresos-usuarios.component';\nimport { AuthGuard } from '../../pages/auth/login/auth.guard';\n\n//const routes: Routes = [];\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: IngresosUsuariosComponent,\n    canActivate: [AuthGuard],\n    data: {\n      toolbarShadowEnabled: true,\n      //containerEnabled: true,\n      scrollDisableb: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IngresosUsuariosRoutingModule { }\n","<div class=\"h-full\" fxLayout=\"column\">\n    <div class=\"p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n        <div vexContainer>\n            <h1 class=\"display-1 mt-0 mb-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <span @scaleIn class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-light\">\n                <ic-icon [icon]=\"icContacts\" size=\"24px\"></ic-icon>\n                </span>\n                <span @fadeInRight class=\"block\">Ingresos Mensuales de Usuarios</span>\n            </h1>\n        </div>\n    </div>\n\n    <div class=\"mt-4 p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n        <h3>Selecciona una fecha</h3>\n        <div vexContainer>\n            <form>\n                <mat-form-field class=\"mt-5 sm:ml-3\" fxFlex=\"30\">\n                    <mat-label for=\"mes\">Selecciona mes</mat-label>\n                    <select #mes matNativeControl name=\"mes\" required>\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let mes of arrmeses\" [value]=\"mes.value\">\n                          {{ mes.nombre }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <mat-form-field class=\"mt-5 sm:ml-3\" fxFlex=\"30\">\n                    <mat-label for=\"anio\">Selecciona año</mat-label>\n                    <select #anio matNativeControl name=\"anio\" required>\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let anio of arrfechasanios\" [value]=\"anio.anio\">\n                          {{ anio.anio }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <button class=\"ml-3 mb-2\" color=\"primary\" mat-button type=\"button\" \n                (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\">\n                    ACEPTAR\n                </button>\n            </form>\n        </div>\n    </div>\n\n    <vex-page-layout-content class=\"mt-10\">\n        <div class=\"card overflow-auto\">\n            <!--Buscador-->\n            <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\" fxFlex=\"auto\" fxHide.xs>\n                    <span *ngIf=\"selection.isEmpty()\">Buscar:</span>\n                </h2>\n                <div class=\"bg-card rounded-full border px-4\" fxFlex=\"850px\" fxFlex.lt-md=\"auto\" fxHide.xs fxLayout=\"row\">\n                    <ic-icon [icIcon]=\"icSearch\" size=\"40px\"></ic-icon>\n                    <input [formControl]=\"searchCtrl\" class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\" placeholder=\"Buscar...\" type=\"search\">\n                </div>\n                <span fxFlex></span>\n                <button class=\"ml-4\" fxFlex=\"none\" fxHide.gt-xs mat-icon-button type=\"button\">\n                    <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n                </button>\n            </div>\n            <!--tabla-->\n            <h2 class=\"mt-3 mb-6 ml-2\">Resumen de usuarios - Mes: {{ mesSelected}} Año: {{ anioSelected }}</h2>\n            <table #table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" >\n\n                <!-- Position Column display none-->\n                <ng-container matColumnDef=\"usuario\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'display': 'none'}\"> concesion </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{ element.usuario}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"usuarioSaldo\">\n                    <th mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\">Usuario</th>\n                </ng-container>\n\n                <!-- <ng-container matColumnDef=\"concesion\">\n                                <th mat-header-cell *matHeaderCellDef rowspan=\"2\"> Conseción </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.concesion}} </td>\n                            </ng-container> -->\n\n                <!-- Name Saldo Anterior Mensual -->\n                <ng-container matColumnDef=\"saldoant\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'display': 'none'}\"> concesion </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.saldoMesAnterior | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"saldoanterior\">\n                    <th mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\">Saldo del mes anterior</th>\n                </ng-container>\n\n                <!-- Encabezado recarga de saldo del mes -->\n                <ng-container matColumnDef=\"recarga\">\n                    <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"3\"> Recarga de saldo en el mes </th>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"recargaU\">\n                    <th mat-header-cell *matHeaderCellDef> Saldo </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.saldo | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"comision\">\n                    <th mat-header-cell *matHeaderCellDef> Comisión </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.comision | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"totalC\">\n                    <th mat-header-cell *matHeaderCellDef> Total cobrado </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.totalCobrado | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"saldomes\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'display': 'none'}\"></th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.saldoDelMes | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"saldomesActual\">\n                    <th mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\">Saldo del mes</th>\n                </ng-container>\n\n                <!-- Encabezado recarga de saldo del mes -->\n                <ng-container matColumnDef=\"compraParquimetros\">\n                    <th mat-header-cell *matHeaderCellDef [attr.colspan]=\"3\"> Compra parquimetros en el mes </th>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"cargos\">\n                    <th mat-header-cell *matHeaderCellDef> Cargos </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.cargos | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"comisionVenta\">\n                    <th mat-header-cell *matHeaderCellDef> Comisión </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.comisionMov | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"totalCVenta\">\n                    <th mat-header-cell *matHeaderCellDef> Comisión </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.comisionTotal | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <!-- Symbol Column -->\n\n                <ng-container matColumnDef=\"saldoFinal\">\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\"{'display': 'none'}\"> Saldo </th>\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"mtdclickDetalleIngresoUsuario( element.usuario );\"> {{element.saldoFinal | currency:'CAD':'symbol-narrow'}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"saldoFinalMes\">\n                    <th mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\">Saldo Final</th>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"['usuarioSaldo', 'saldoanterior', 'recarga', 'saldomesActual', 'compraParquimetros', 'saldoFinalMes']\"></tr>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n    </vex-page-layout-content>\n</div>","import { Component, OnInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\n\nimport { fadeInRight400ms } from '../../../@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '../../../@vex/animations/scale-fade-in.animation';\nimport { scaleIn400ms } from '../../../@vex/animations/scale-in.animation';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icSearch from '@iconify/icons-ic/twotone-search';\n\nimport { style } from '@angular/animations';\nimport { DetalleUsuarioComponent } from '../detalleIngreso/detalle-usuario/detalle-usuario.component';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport { IngresoUsuariosService } from '../../services/ingreso-usuarios.service';\n//import { Tile } from '../../models/tile.interface';\nimport { IngresosResumenUsuariosModel, IngresosResumenUsuariosResponse } from '../../models/ingresosresumenusuarios.model';\n\n// doracion de UntilDestroy\n@UntilDestroy( )\n@Component({\n  selector: 'vex-ingresos-usuarios',\n  templateUrl: './ingresos-usuarios.component.html',\n  styleUrls: ['./ingresos-usuarios.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class IngresosUsuariosComponent implements OnInit, AfterViewInit {\n\n  arrResumenXusuarios: any[] = [];\n  arrIngresosXusuario: any[] = [];\n  arrUsuario: any = [];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n\n  searchCtrl = new FormControl();\n\n  // propiedades de la tabla\n\n  // pageSize = 10;\n  // pageSizeOptions: number[] = [10, 20, 30, 50];\n  displayedColumns: string[] = ['usuario', 'saldoant', 'recargaU', 'comision', 'totalC', 'saldomes', 'cargos', 'comisionVenta', 'totalCVenta', 'saldoFinal'] ;\n  selection = new SelectionModel<any>(true, []);\n  dataSource = new MatTableDataSource<IngresosResumenUsuariosModel>(DATOS);\n\n\n\n  constructor( private fb: FormBuilder,\n               private dialog: MatDialog,\n               private cd: ChangeDetectorRef,\n               private ingresosusuariosservices: IngresoUsuariosService) {\n\n                this.mtdgenerarAnios();\n                this.ingresosusuariosservices.mtdrefreshdata$\n                    .subscribe(() => {\n                      this.mtdobtenerResumendeIngresosUsuarios();\n                    });\n                this.mtdobtenerResumendeIngresosUsuarios();\n               }\n\n  form: FormGroup;\n\n  selectedOptions = [];\n  checkedValues = [];\n  arrCtasLicencia = [];\n  arrPassLicencia = [];\n\n  // arreglo para guardar los meses\n  arrfechasanios: any[] = [];\n\n  // arreglos para guardar el resumen de los usuarios\n  arringresosresumen: IngresosResumenUsuariosModel[] = [];\n\n\n  // arreglo de meses\n  arrmeses: any [] = [\n    {nombre: 'Enero', value: 1},\n    {nombre: 'Febrero', value: 2},\n    {nombre: 'Marzo', value: 3},\n    {nombre: 'Abril', value: 4},\n    {nombre: 'Mayo', value: 5},\n    {nombre: 'Junio', value: 6},\n    {nombre: 'Julio', value: 7},\n    {nombre: 'Agosto', value: 8},\n    {nombre: 'Septiembre', value: 9},\n    {nombre: 'Octubre', value: 10},\n    {nombre: 'Noviembre', value: 11},\n    {nombre: 'Diciembre', value: 12}\n  ];\n\n  // propiedades para mostrar la fecha seleccionada por el usuario\n  datefecha: any;\n  mesSelected: any;\n  anioSelected: any;\n\n  // iconos\n  icContacts = icContacts;\n  icSearch = icSearch;\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    // this.dataSource.paginator = this.paginator;\n    this.mtdpintarfechaSeleccionada();\n    // this.dataSource.sort = this.sort;\n\n    // Filtro de la tabla\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n\n  }\n\n  // mtd de filtrado de la tabla\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  mtdclickDetalleIngresoUsuario(usuario: any) {\n    this.dialog.open(DetalleUsuarioComponent, {height: 'auto', data: usuario});\n  }\n\n  // metodo que permite obtener los ingresos de usuarios acorde a la fecha\n  mtdclickobtenerIngresosMensualesFecha( mes: any, anio: any ) {\n    if ( mes === '' && anio === '') {\n      return;\n    }\n    if ( mes === '' || anio === '') {\n      return;\n    }\n    console.log('Mes2: ' + mes, 'Año2: ' + anio);\n    this.mtdobtenerResumendeIngresosUsuariosParam( mes, anio );\n    this.ingresosusuariosservices.setMesSeleccionado( mes );\n    this.ingresosusuariosservices.setAnioSeleccionado( anio );\n\n    // this.mesSelected = mes;\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == mes);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n    this.anioSelected = anio;\n    this.cd.markForCheck();\n  }\n\n  mtdobtenerResumendeIngresosUsuarios() {\n    const myDate = new Date();\n    const month = myDate.getMonth() + 1;\n    const year = myDate.getFullYear();\n\n    console.log('Mes: ' + month, 'Año: ' + year);\n    this.ingresosusuariosservices.mtdgetobtenerResumenIngresosUsuarios(month, year)\n    .subscribe((response: IngresosResumenUsuariosResponse) => {\n      this.arringresosresumen = response.data;\n      this.dataSource.data = this.arringresosresumen;\n      //console.log(this.arringresosresumen);\n    });\n  }\n\n  mtdobtenerResumendeIngresosUsuariosParam( mes: any, anio: any ) {\n    this.arringresosresumen = [];\n    this.ingresosusuariosservices.mtdgetobtenerResumenIngresosUsuarios(mes, anio)\n    .subscribe((response: IngresosResumenUsuariosResponse) => {\n      this.arringresosresumen = response.data;\n      this.dataSource.data = this.arringresosresumen;\n      this.cd.markForCheck();\n      console.log(this.arringresosresumen);\n    });\n  }\n\n  // metodo que permite pintar la fecha\n  mtdpintarfechaSeleccionada() {\n    this.datefecha = new Date();\n    this.mesSelected = this.datefecha.getMonth() + 1;\n\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == this.mesSelected);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n    this.anioSelected = this.datefecha.getFullYear();\n  }\n\n  mtdgenerarAnios() {\n\n    const myDate = new Date();\n    const year = myDate.getFullYear();\n\n    for (let index = 2020; index < year + 1; index++) {\n      this.arrfechasanios.push({ anio: index });\n    }\n    console.log(this.arrfechasanios);\n  }\n\n}\n\nconst DATOS: IngresosResumenUsuariosModel[] = [];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { map, filter, tap } from 'rxjs/operators';\nimport { throwError, Subject, Observable } from 'rxjs';\nimport { IngresosMensualesUsuariosResponse, IngresosMensualesUsuariosModel } from '../models/ingresosmensualesusuarios.model';\nimport { AbstractmanagerService } from '../shared/services/abstractmanager.service';\nimport { IngresosResumenUsuariosResponse } from '../models/ingresosresumenusuarios.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresoUsuariosService extends AbstractmanagerService {\n\n  // API anterior\n  //private urlApi: string = 'http://74.208.52.12/api/';\n  private _refreshdata$ = new Subject<void>();\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = {};\n\n  datemes: any;\n  dateanio: any;\n\n  constructor(private http: HttpClient) {\n    super();\n   }\n\n  get mtdrefreshdata$() {\n    return this._refreshdata$;\n  }\n\n  setMesSeleccionado( datemes: any ) {\n    this.datemes = datemes;\n  }\n\n  setAnioSeleccionado( dateanio: any ) {\n    this.dateanio = dateanio;\n  }\n\n  getMesSeleccionado() {\n    return this.datemes;\n  }\n\n  getAnioSeleccionado() {\n    return this.dateanio;\n  }\n\n  mtdgetobtenerResumenIngresosUsuarios(mes?: any, anio?: any): Observable<IngresosResumenUsuariosResponse> {\n    return this.http.get<IngresosResumenUsuariosResponse>(`${ this.API_URL }api/Movimientos/mtdObtenerResumenMensualUsuarios?mes=${ mes }&anio=${ anio }`);\n  }\n\n  mtdgetobtenermovimientosUsuarios(mes?: any, anio?: any, usuario?: any): Observable<IngresosMensualesUsuariosResponse> {\n    console.log(`${ this.API_URL }api/Movimientos/mtdObtenerResumenMensualXUsuario?strCorreo=${ usuario }&mes=${ mes }&anio=${ anio }`)\n    return this.http.get<IngresosMensualesUsuariosResponse>(`${ this.API_URL }api/Movimientos/mtdObtenerResumenMensualXUsuario?strCorreo=${ usuario }&mes=${ mes }&anio=${ anio }`);\n  }\n\n  // Error\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n"]}