{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","webpack:///src/app/ingresos/detalle-concesion/detalle-concesion.component.ts","webpack:///src/app/ingresos/detalle-concesion/detalle-concesion.component.html","webpack:///src/app/ingresos/detalle-concesion/detalle-concesion.module.ts","webpack:///src/app/ingresos/ingresos-mensuales/ingresos-mensuales-routing.module.ts","webpack:///src/app/ingresos/ingresos-mensuales/ingresos-mensuales.component.html","webpack:///src/app/ingresos/ingresos-mensuales/ingresos-mensuales.component.ts","webpack:///src/app/ingresos/ingresos-mensuales/ingresos-mensuales.module.ts"],"names":["_c0","_c1","_c2","MAT_GRID_LIST","MatGridTile","_element","_gridList","_rowspan","_colspan","property","value","nativeElement","style","Math","round","ɵfac","MatGridTile_Factory","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatGridTile_HostBindings","rf","ctx","rowspan","colspan","inputs","exportAs","ngContentSelectors","decls","vars","consts","template","MatGridTile_Template","styles","encapsulation","changeDetection","ctorParameters","undefined","decorators","args","propDecorators","selector","host","None","OnPush","MatGridTileText","_lines","MatGridTileText_Factory","contentQueries","MatGridTileText_ContentQueries","dirIndex","_t","MatGridTileText_Template","descendants","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","ɵdir","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","TileCoordinator","columnIndex","rowIndex","numColumns","tiles","tracker","Array","fill","length","positions","map","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","Error","gapEndIndex","_nextRow","indexOf","_findGapEndIndex","max","i","start","lastRowMax","rowCount","row","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","direction","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","offset","calc","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","side","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","test","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","forEach","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_dir","_gutter","_checkCols","_checkRowHeight","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","reset","_tileCoordinator","filter","update","init","index","pos","setStyle","getComputedHeight","newValue","MatGridList_Factory","MatGridList_ContentQueries","MatGridList_HostBindings","features","provide","useExisting","MatGridList_Template","providers","MatGridListModule","ɵmod","ɵinj","factory","MatGridListModule_Factory","imports","ngJitMode","declarations","exports","DetalleConcesionComponent","intIdConcesion","dialogRef","fb","cd","ingresosmesualesservices","pageSize","pageSizeOptions","displayedColumns","dataSource","DATOS","arrdetalleconsecion","icClose","mtdobtenerfechaseleccionada","console","log","mtdobtenerdetalleingresos","paginator","sort","datemes","dateanio","myDate","Date","month","getMonth","year","getFullYear","mtdgetdetalleingresoXConsecion","then","response","data","markForCheck","getMesSeleccionado","getAnioSeleccionado","templateUrl","styleUrls","animations","DetalleConcesionModule","entryComponents","routes","path","component","canActivate","toolbarShadowEnabled","scrollDisableb","IngresosMensualesRoutingModule","forChild","IngresosMensualesComponent","dialog","currencyPipe","ingresosmensualesservices","arrmeses","nombre","arringresosmensuales","arrfechasanios","selection","icContacts","icSearch","icDownload","searchCtrl","mtdobtenerIngresosMensualesxConcesion","mtdobternerIngresosMensualesResumen","mtdgenerarAnios","mtdpintarfechaSeleccionada","valueChanges","pipe","subscribe","onFilterChange","trim","toLowerCase","datefecha","mesSelected","anioSelected","nombreMes","mes","anio","mtdobternerIngresosMensualesResumenParam","mtdobtenerIngresosMensualesxConcesionParam","setMesSeleccionado","setAnioSeleccionado","open","height","mtdgetingresosMensualesResumenPara","push","text","rows","color","transform","mtdgetingresosMensualesxConsecionPara","mtdgetingresosMensualesxConsecion","mtdgetingresosMensualesResumen","mtdclickobtenerIngresosMensualesFecha","IngresosMensualesModule"],"mappings":"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ACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;A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","file":"ingresos-ingresos-mensuales-ingresos-mensuales-module-es5.js","sourcesContent":["import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatGridTile = /** @class */ (() => {\n    class MatGridTile {\n        constructor(_element, _gridList) {\n            this._element = _element;\n            this._gridList = _gridList;\n            this._rowspan = 1;\n            this._colspan = 1;\n        }\n        /** Amount of rows that the grid tile takes up. */\n        get rowspan() { return this._rowspan; }\n        set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n        /** Amount of columns that the grid tile takes up. */\n        get colspan() { return this._colspan; }\n        set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n        /**\n         * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n         * \"Changed after checked\" errors that would occur with HostBinding.\n         */\n        _setStyle(property, value) {\n            this._element.nativeElement.style[property] = value;\n        }\n    }\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatGridTile.ctorParameters = () => [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n    ];\n    MatGridTile.propDecorators = {\n        rowspan: [{ type: Input }],\n        colspan: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\n    return MatGridTile;\n})();\nlet MatGridTileText = /** @class */ (() => {\n    class MatGridTileText {\n        constructor(_element) {\n            this._element = _element;\n        }\n        ngAfterContentInit() {\n            setLines(this._lines, this._element);\n        }\n    }\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n    MatGridTileText.ctorParameters = () => [\n        { type: ElementRef }\n    ];\n    MatGridTileText.propDecorators = {\n        _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\n    return MatGridTileText;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridAvatarCssMatStyler = /** @class */ (() => {\n    class MatGridAvatarCssMatStyler {\n    }\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n    return MatGridAvatarCssMatStyler;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileHeaderCssMatStyler = /** @class */ (() => {\n    class MatGridTileHeaderCssMatStyler {\n    }\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n    return MatGridTileHeaderCssMatStyler;\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatGridTileFooterCssMatStyler = /** @class */ (() => {\n    class MatGridTileFooterCssMatStyler {\n    }\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n    return MatGridTileFooterCssMatStyler;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nlet MatGridList = /** @class */ (() => {\n    class MatGridList {\n        constructor(_element, _dir) {\n            this._element = _element;\n            this._dir = _dir;\n            /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n            this._gutter = '1px';\n        }\n        /** Amount of columns in the grid list. */\n        get cols() { return this._cols; }\n        set cols(value) {\n            this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n        }\n        /** Size of the grid list's gutter in pixels. */\n        get gutterSize() { return this._gutter; }\n        set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n        /** Set internal representation of row height from the user-provided value. */\n        get rowHeight() { return this._rowHeight; }\n        set rowHeight(value) {\n            const newValue = `${value == null ? '' : value}`;\n            if (newValue !== this._rowHeight) {\n                this._rowHeight = newValue;\n                this._setTileStyler(this._rowHeight);\n            }\n        }\n        ngOnInit() {\n            this._checkCols();\n            this._checkRowHeight();\n        }\n        /**\n         * The layout calculation is fairly cheap if nothing changes, so there's little cost\n         * to run it frequently.\n         */\n        ngAfterContentChecked() {\n            this._layoutTiles();\n        }\n        /** Throw a friendly error if cols property is missing */\n        _checkCols() {\n            if (!this.cols) {\n                throw Error(`mat-grid-list: must pass in number of columns. ` +\n                    `Example: <mat-grid-list cols=\"3\">`);\n            }\n        }\n        /** Default to equal width:height if rowHeight property is missing */\n        _checkRowHeight() {\n            if (!this._rowHeight) {\n                this._setTileStyler('1:1');\n            }\n        }\n        /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n        _setTileStyler(rowHeight) {\n            if (this._tileStyler) {\n                this._tileStyler.reset(this);\n            }\n            if (rowHeight === MAT_FIT_MODE) {\n                this._tileStyler = new FitTileStyler();\n            }\n            else if (rowHeight && rowHeight.indexOf(':') > -1) {\n                this._tileStyler = new RatioTileStyler(rowHeight);\n            }\n            else {\n                this._tileStyler = new FixedTileStyler(rowHeight);\n            }\n        }\n        /** Computes and applies the size and position for all children grid tiles. */\n        _layoutTiles() {\n            if (!this._tileCoordinator) {\n                this._tileCoordinator = new TileCoordinator();\n            }\n            const tracker = this._tileCoordinator;\n            const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n            const direction = this._dir ? this._dir.value : 'ltr';\n            this._tileCoordinator.update(this.cols, tiles);\n            this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n            tiles.forEach((tile, index) => {\n                const pos = tracker.positions[index];\n                this._tileStyler.setStyle(tile, pos.row, pos.col);\n            });\n            this._setListStyle(this._tileStyler.getComputedHeight());\n        }\n        /** Sets style on the main grid-list element, given the style name and value. */\n        _setListStyle(style) {\n            if (style) {\n                this._element.nativeElement.style[style[0]] = style[1];\n            }\n        }\n    }\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatGridList.ctorParameters = () => [\n        { type: ElementRef },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ];\n    MatGridList.propDecorators = {\n        _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n        cols: [{ type: Input }],\n        gutterSize: [{ type: Input }],\n        rowHeight: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\n    return MatGridList;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatGridListModule = /** @class */ (() => {\n    class MatGridListModule {\n    }\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList, MatGridTile, MatGridTileText, MatLineModule,\n        MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n    return MatGridListModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","import { Component, Inject, OnInit, ChangeDetectorRef, AfterViewInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\n\nimport icClose from '@iconify/icons-ic/twotone-close';\n\nimport { DetalleConcesionModel } from '../../models/detalleconcesion.model';\nimport { IngresoMensualesService } from '../../services/ingreso-mensuales.service';\n\n@Component({\n  selector: 'vex-detalle-concesion',\n  templateUrl: './detalle-concesion.component.html',\n  styleUrls: ['./detalle-concesion.component.scss'],\n  animations: [\n    stagger40ms\n  ],\n})\nexport class DetalleConcesionComponent implements OnInit, AfterViewInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public intIdConcesion: any,\n              private dialogRef: MatDialogRef<DetalleConcesionComponent>,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private ingresosmesualesservices: IngresoMensualesService) { \n\n                this.mtdobtenerfechaseleccionada();\n              }\n\n  // propiedades del mat-tabla\n  @ViewChild(MatTable, {static: true}) table: MatTable<Element>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [10, 20, 30, 50];\n  \n  // pageEvent: PageEvent;\n  displayedColumns: string[] = [\n    'id', 'createdBy', 'createdDate', 'lastModifiedBy',\n    'lastModifiedDate', 'bitStatus', 'strPlaca', 'strLatitud', 'strLongitud',\n    'booleanAutoRecarga', 'booleanMulta', 'dtHoraInicio', 'dtmFechaInsercionDescuento', 'dtmFechaDescuento',\n    'dtmHoraFin', 'intTiempoComprado', 'int_tiempo', 'fltMonedaSaldoPrevioDescuento', 'fltMonto',\n    'fltMontoInicial', 'fltPorcentajeComision', 'fltMontoPorcentaje', 'fltTotalConComision',\n    'strNombreConcesion', 'fltSaldoAnterior', 'intTiempoDevuelto', 'fltMontoDevolucion', 'fltMontoPorcDevolucion',\n    'fltTotalDevConComision', 'fltMontoReal', 'fltSaldoPrevioDescuento', 'fltValorDescuento',\n    'fltValorDevuelto', 'fltValorFinalDescuento', 'strCambioDescuento', 'strCodigoAutorizacion', 'strCodigoTransaccion',\n    'strComentarios', 'strHashTarjeta', 'strInstalacion', 'strInstalacionAbrv', 'strMonedaValorDescuento',\n    'strReferenciaOperacion', 'strSo', 'strTipo', 'strVersionapp', 'intIdEspacio', 'intIdSaldoId', 'intIdUsuarioId',\n    'intIdVehiculoId', 'tbespacios', 'tbsaldo', 'tbvehiculos', 'intidconcesionId', 'tbconcesiones', 'intIdMulta',\n    'insDescription', 'insShortdesc', 'balanceBefore', 'ticketNumber', 'sector',\n    'tariff', 'discountAmountCurrencyId', 'discountBalanceCurrencyId', 'discountBalanceBefore',\n    'serviceChargeTypeId', 'cardReference', 'cardScheme', 'maskedCardNumber',\n    'cardExpirationDate', 'externalId1', 'externalId2', 'externalId3', 'percVat1', 'percVat2',\n    'partialVat1', 'percFee', 'percFeeTopped', 'partialPercFee', 'fixedFee',\n    'partialFixedFee', 'totalAmount', 'cuspmrPagateliaNewBalance', 'cuspmrType', 'shopkeeperOp',\n    'shopkeeperAmount', 'shopkeeperProfit', 'plate2', 'plate3', 'plate4', 'plate5', 'plate6', 'plate7',\n    'plate8', 'plate9', 'plate10', 'permitAutoRenew', 'permitExpiration', 'transStatus',\n    'refundAmount', 'valorSinBonificar', 'bonificacion', 'tipoVehiculo'];\n\n  dataSource = new MatTableDataSource<any>(DATOS);\n\n  // propidades para recuperar la fecha seleccionada por el usuario\n  datemes: any;\n  dateanio: any;\n\n  // arreglos utilizados para guardar los datos\n  arrdetalleconsecion: any[] = [];\n\n  // iconos\n  icClose = icClose;\n\n  ngOnInit(): void {\n    console.log('Soy el id de la concesion: ' + this.intIdConcesion);\n    this.mtdobtenerdetalleingresos();\n  }\n\n  // paginador\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  // metodo que permite recuperar el detalle de los ingresos por concesion\n  // en base al mes, añi y idconcesion\n  mtdobtenerdetalleingresos() {\n\n    if (this.intIdConcesion) {\n\n      if (!this.datemes && !this.dateanio) {\n\n        this.arrdetalleconsecion = [];\n        const myDate = new Date();\n        const month = myDate.getMonth() + 1;\n        const year = myDate.getFullYear();\n\n        console.log('Fecha no seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosmesualesservices.mtdgetdetalleingresoXConsecion(this.intIdConcesion, month, year)\n            .then((response: any) => {\n              console.log(response);\n              this.arrdetalleconsecion = response.data;\n              this.dataSource.data = this.arrdetalleconsecion;\n              this.cd.markForCheck();\n        });\n      }\n      else {\n        this.arrdetalleconsecion = [];\n        console.log('Fecha seleccionada ' + this.datemes, this.dateanio);\n        this.ingresosmesualesservices.mtdgetdetalleingresoXConsecion(this.intIdConcesion, this.datemes, this.dateanio)\n                .then((response: any) => {\n                  console.log(response);\n                  this.arrdetalleconsecion = response.data;\n                  this.dataSource.data = this.arrdetalleconsecion;\n                  this.cd.markForCheck();\n            });\n      }\n\n    }\n\n    else {\n      console.log('No existe id conseción');\n    }\n\n  }\n\n  // metodo que recupera el mes y año seleccionado por el usuario\n  mtdobtenerfechaseleccionada() {\n   this.datemes = this.ingresosmesualesservices.getMesSeleccionado();\n   this.dateanio = this.ingresosmesualesservices.getAnioSeleccionado();\n  }\n\n}\n\nconst DATOS: any[] = [];\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-dialog-title>\n    <h2 class=\"headline m-0\" fxFlex=\"auto\" *ngIf=\"arrdetalleconsecion.length > 0\">\n        {{ arrdetalleconsecion[0].str_nombre_concesion }}\n    </h2>\n    <!-- Este es el boton de cerrar del popup -->\n    <button type=\"button\" class=\"text-secondary\" mat-icon-button mat-dialog-close>\n    <mat-icon [icIcon]=\"icClose\"></mat-icon>\n    </button>\n</div>\n<mat-dialog-content fxLayout=\"column\" style=\"min-height: fit-content;\" class=\"card overflow-auto\">\n    <div class=\"flex flex-col sm:flex-row\" style=\"margin-top: 5px;\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> ID </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"createdBy\">\n                <th mat-header-cell *matHeaderCellDef> Creado por </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdBy}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"createdDate\">\n                <th mat-header-cell *matHeaderCellDef> Fecha de creación </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.createdDate | date: 'dd/MM/yyyy' }}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"lastModifiedBy\">\n                <th mat-header-cell *matHeaderCellDef> Última modificacion por </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastModifiedBy}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"lastModifiedDate\">\n                <th mat-header-cell *matHeaderCellDef> Última fechade modificación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastModifiedDate | date: 'dd/MM/yyyy'}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"bitStatus\">\n                <th mat-header-cell *matHeaderCellDef> Status </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.bitStatus}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strPlaca\">\n                <th mat-header-cell *matHeaderCellDef> Placa </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strPlaca}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"strLatitud\">\n                <th mat-header-cell *matHeaderCellDef> Latitud </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strLatitud}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strLongitud\">\n                <th mat-header-cell *matHeaderCellDef> Longitud </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strLongitud}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"booleanAutoRecarga\">\n                <th mat-header-cell *matHeaderCellDef> Auto recarga </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.booleanAutoRecarga}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"booleanMulta\">\n                <th mat-header-cell *matHeaderCellDef> Multa </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.booleanMulta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtHoraInicio\">\n                <th mat-header-cell *matHeaderCellDef> Hora inicio </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtHoraInicio | date: 'h:mm:ss a'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtmFechaInsercionDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Fecha insercion descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmFechaInsercionDescuento}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"dtmFechaDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Fecha descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmFechaDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"dtmHoraFin\">\n                <th mat-header-cell *matHeaderCellDef> Hora fin </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.dtmHoraFin | date: 'h:mm:ss a'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intTiempoComprado\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo comprado </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intTiempoComprado}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"int_tiempo\">\n                <th mat-header-cell *matHeaderCellDef> Tiempo </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.int_tiempo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMonedaSaldoPrevioDescuento\">\n                <th mat-header-cell *matHeaderCellDef> Moneda saldo previo descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMonedaSaldoPrevioDescuento | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n             <!-- Symbol Column -->\n             <ng-container matColumnDef=\"fltMonto\">\n                <th mat-header-cell *matHeaderCellDef> Monto </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMonto | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoInicial\">\n                <th mat-header-cell *matHeaderCellDef>Monto inicial </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoInicial | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltPorcentajeComision\">\n                <th mat-header-cell *matHeaderCellDef>Porcentaje comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltPorcentajeComision}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoPorcentaje\">\n                <th mat-header-cell *matHeaderCellDef>Monto porcentaje</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoPorcentaje | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltTotalConComision\">\n                <th mat-header-cell *matHeaderCellDef>Total con comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltTotalConComision | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strNombreConcesion\">\n                <th mat-header-cell *matHeaderCellDef>concesión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strNombreConcesion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltSaldoAnterior\">\n                <th mat-header-cell *matHeaderCellDef>Saldo anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltSaldoAnterior | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intTiempoDevuelto\">\n                <th mat-header-cell *matHeaderCellDef>Tiempo devuelto</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intTiempoDevuelto}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoDevolucion\">\n                <th mat-header-cell *matHeaderCellDef>Monto devolución</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoDevolucion | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoPorcDevolucion\">\n                <th mat-header-cell *matHeaderCellDef>Monto porcentaje devolución</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoPorcDevolucion | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltTotalDevConComision\">\n                <th mat-header-cell *matHeaderCellDef>Total devolución con comisión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltTotalDevConComision | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltMontoReal\">\n                <th mat-header-cell *matHeaderCellDef>Monto real</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltMontoReal | currency:'CAD':'symbol-narrow'}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltSaldoPrevioDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Saldo previo a descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltSaldoPrevioDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Valor descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorDescuento}}</td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorDevuelto\">\n                <th mat-header-cell *matHeaderCellDef>Valor devuelto</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorDevuelto}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fltValorFinalDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Valor final descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fltValorFinalDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCambioDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Cambio de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCambioDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCodigoAutorizacion\">\n                <th mat-header-cell *matHeaderCellDef>Código autorización</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCodigoAutorizacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strCodigoTransaccion\">\n                <th mat-header-cell *matHeaderCellDef>Código transacción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strCodigoTransaccion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strComentarios\">\n                <th mat-header-cell *matHeaderCellDef>Comentarios</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strComentarios}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strHashTarjeta\">\n                <th mat-header-cell *matHeaderCellDef>hash tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strHashTarjeta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strInstalacion\">\n                <th mat-header-cell *matHeaderCellDef>Instalación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strInstalacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strInstalacionAbrv\">\n                <th mat-header-cell *matHeaderCellDef>Instalación abrv</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strInstalacionAbrv}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strMonedaValorDescuento\">\n                <th mat-header-cell *matHeaderCellDef>Moneda valor descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strMonedaValorDescuento}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strReferenciaOperacion\">\n                <th mat-header-cell *matHeaderCellDef>Referencia de operación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strReferenciaOperacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strSo\">\n                <th mat-header-cell *matHeaderCellDef>SO</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strSo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strTipo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strTipo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"strVersionapp\">\n                <th mat-header-cell *matHeaderCellDef>App versión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.strVersionapp}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdEspacio\">\n                <th mat-header-cell *matHeaderCellDef>ID espacio</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdEspacio}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdSaldoId\">\n                <th mat-header-cell *matHeaderCellDef>ID saldo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdSaldoId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdUsuarioId\">\n                <th mat-header-cell *matHeaderCellDef>ID usuario</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdUsuarioId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdVehiculoId\">\n                <th mat-header-cell *matHeaderCellDef>ID vehiculo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdVehiculoId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbespacios\">\n                <th mat-header-cell *matHeaderCellDef>Espacios</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbespacios}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbsaldo\">\n                <th mat-header-cell *matHeaderCellDef>Saldo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbsaldo}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbvehiculos\">\n                <th mat-header-cell *matHeaderCellDef>Vehiculos</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbvehiculos}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intidconcesionId\">\n                <th mat-header-cell *matHeaderCellDef>ID concesión</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intidconcesionId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tbconcesiones\">\n                <th mat-header-cell *matHeaderCellDef>Concesiones</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tbconcesiones}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"intIdMulta\">\n                <th mat-header-cell *matHeaderCellDef>ID multa</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.intIdMulta}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"insDescription\">\n                <th mat-header-cell *matHeaderCellDef>Ins descripción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.insDescription}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"insShortdesc\">\n                <th mat-header-cell *matHeaderCellDef>Ins descripción corta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.insShortdesc}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"balanceBefore\">\n                <th mat-header-cell *matHeaderCellDef>Balance anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.balanceBefore}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"ticketNumber\">\n                <th mat-header-cell *matHeaderCellDef>Número de ticket</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.ticketNumber}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"sector\">\n                <th mat-header-cell *matHeaderCellDef>Sector</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.sector}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tariff\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tariff}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountAmountCurrencyId\">\n                <th mat-header-cell *matHeaderCellDef>ID de moneda de monto de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountAmountCurrencyId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountBalanceCurrencyId\">\n                <th mat-header-cell *matHeaderCellDef>ID de moneda del saldo de descuento</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountBalanceCurrencyId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"discountBalanceBefore\">\n                <th mat-header-cell *matHeaderCellDef>Descuento de saldo anterior</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.discountBalanceBefore}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"serviceChargeTypeId\">\n                <th mat-header-cell *matHeaderCellDef>ID de tipo de cargo de servicio</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.serviceChargeTypeId}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardReference\">\n                <th mat-header-cell *matHeaderCellDef>Tarjeta de referencia</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardReference}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardScheme\">\n                <th mat-header-cell *matHeaderCellDef>Esquema de tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardScheme}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"maskedCardNumber\">\n                <th mat-header-cell *matHeaderCellDef>Mascara de número de tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.maskedCardNumber}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cardExpirationDate\">\n                <th mat-header-cell *matHeaderCellDef>Fecha de vencimiento de la tarjeta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cardExpirationDate}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId1\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 1</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId2\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"externalId3\">\n                <th mat-header-cell *matHeaderCellDef>ID externo 3</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.externalId3}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percVat1\">\n                <th mat-header-cell *matHeaderCellDef>percVat1</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percVat1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percVat2\">\n                <th mat-header-cell *matHeaderCellDef>percVat2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percVat2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialVat1\">\n                <th mat-header-cell *matHeaderCellDef>Vat1 parcial</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialVat1}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa perc</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"percFeeTopped\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa perc superada</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.percFeeTopped}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialPercFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa parcial perc</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialPercFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"fixedFee\">\n                <th mat-header-cell *matHeaderCellDef>Cuota fija</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fixedFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"partialFixedFee\">\n                <th mat-header-cell *matHeaderCellDef>Tarifa fija parcial</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.partialFixedFee}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"totalAmount\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad total</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.totalAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cuspmrPagateliaNewBalance\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad total</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cuspmrPagateliaNewBalance}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"cuspmrType\">\n                <th mat-header-cell *matHeaderCellDef>cuspmrTipo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cuspmrType}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperOp\">\n                <th mat-header-cell *matHeaderCellDef>Operación de comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperOp}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperAmount\">\n                <th mat-header-cell *matHeaderCellDef>Monto de comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"shopkeeperProfit\">\n                <th mat-header-cell *matHeaderCellDef>Beneficio del comerciante</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.shopkeeperProfit}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate2\">\n                <th mat-header-cell *matHeaderCellDef>Placa 2</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate2}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate3\">\n                <th mat-header-cell *matHeaderCellDef>Placa 3</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate3}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate4\">\n                <th mat-header-cell *matHeaderCellDef>Placa 4</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate4}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate5\">\n                <th mat-header-cell *matHeaderCellDef>Placa 5</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate5}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate6\">\n                <th mat-header-cell *matHeaderCellDef>Placa 6</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate6}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate7\">\n                <th mat-header-cell *matHeaderCellDef>Placa 7</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate7}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate8\">\n                <th mat-header-cell *matHeaderCellDef>Placa 8</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate8}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate9\">\n                <th mat-header-cell *matHeaderCellDef>Placa 9</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate9}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"plate10\">\n                <th mat-header-cell *matHeaderCellDef>Placa 10</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.plate10}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"permitAutoRenew\">\n                <th mat-header-cell *matHeaderCellDef>Permitir renovación automática</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.permitAutoRenew}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"permitExpiration\">\n                <th mat-header-cell *matHeaderCellDef>Caducidad del permiso</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.permitExpiration}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"transStatus\">\n                <th mat-header-cell *matHeaderCellDef>Status de la trasacción</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.transStatus}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"refundAmount\">\n                <th mat-header-cell *matHeaderCellDef>Cantidad devuelta</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.refundAmount}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"valorSinBonificar\">\n                <th mat-header-cell *matHeaderCellDef>Valor sin bonificar</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.valorSinBonificar}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"bonificacion\">\n                <th mat-header-cell *matHeaderCellDef>Bonificación</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.bonificacion}}</td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"tipoVehiculo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo vehiculo</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tipoVehiculo}}</td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n    <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\"></mat-paginator>\n</mat-dialog-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { DetalleConcesionComponent } from './detalle-concesion.component';\n\n\n\n@NgModule({\n  declarations: [DetalleConcesionComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatMenuModule,\n    IconModule,\n    MatDividerModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule\n  ],\n  entryComponents: [DetalleConcesionComponent]\n})\nexport class DetalleConcesionModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VexRoutes } from '../../../@vex/interfaces/vex-route.interface';\nimport { IngresosMensualesComponent } from './ingresos-mensuales.component';\nimport { AuthGuard } from '../../pages/auth/login/auth.guard';\n\n// const routes: Routes = [];\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: IngresosMensualesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      toolbarShadowEnabled: true,\n      //containerEnabled: true,\n      scrollDisableb: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IngresosMensualesRoutingModule { }\n","<div class=\"h-full\" fxLayout=\"column\">\n  <div class=\"p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n    <div vexContainer>\n      <h1\n        class=\"display-1 mt-0 mb-4\"\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n      >\n        <span\n          @scaleIn\n          class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-light\"\n        >\n          <ic-icon [icon]=\"icContacts\" size=\"24px\"></ic-icon>\n        </span>\n        <span @fadeInRight class=\"block\">Ingresos Mensuales</span>\n      </h1>\n    </div>\n  </div>\n  <div class=\"mt-4 p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n    <!--  MES - AÑO -->\n    <div class=\"flex flex-col \">\n      <h3>Selecciona una fecha</h3>\n      <form>\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto\">\n          <mat-label for=\"anio\">Selecciona mes</mat-label>\n          <mat-select #mes name=\"mes\" matSelect required>\n            <mat-option *ngFor=\"let mes of arrmeses\" [value]=\"mes.value\">\n              {{ mes.nombre }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto\">\n          <mat-label for=\"anio\">Selecciona año</mat-label>\n          <mat-select #anio name=\"anio\" matSelect required>\n            <mat-option *ngFor=\"let anio of arrfechasanios\" [value]=\"anio.anio\">\n              {{ anio.anio }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <button\n          color=\"primary\"\n          mat-button\n          type=\"button\"\n          (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\"\n        >\n          ACEPTAR\n        </button>\n<!--         \n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto w-1/3 md:w-1/6\">\n          <mat-label>Inicio</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"datepickerRefi\"\n            #fechaInicio\n            (dateChange)=\"\n              mtdchangeobtenerMovimientosxPeriodos(\n                fechaInicio.value,\n                fechaFin.value\n              )\n            \"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"datepickerRefi\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #datepickerRefi></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field class=\"mt-5 sm:ml-3 flex-auto w-1/3 md:w-1/6\">\n          <mat-label>Fin</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"datepickerRefe\"\n            #fechaFin\n            (dateChange)=\"\n              mtdchangeobtenerMovimientosxPeriodos(\n                fechaInicio.value,\n                fechaFin.value\n              )\n            \"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"datepickerRefe\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #datepickerRefe></mat-datepicker>\n        </mat-form-field>\n        \n        <button\n          color=\"primary\"\n          mat-button\n          type=\"button\"\n          (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\"\n        >\n          ACEPTAR\n        </button> -->\n\n      </form>\n    </div>\n    <!--div vexContainer>\n            <h3 fxLayout=\"row\" fxLayoutAlign=\"start center\">Selecciona una fecha</h3>\n            <form>\n                <mat-form-field class=\"flex-auto\">\n                    <mat-label for=\"mes\">Seleciona mes</mat-label>\n                    <select #mes matNativeControl name=\"mes\">\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let mes of arrmeses\" [value]=\"mes.value\">\n                          {{ mes.nombre }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <mat-form-field class=\"flex-auto ml-4\">\n                    <mat-label for=\"anio\">Seleciona año</mat-label>\n                    <select #anio matNativeControl name=\"anio\">\n                        <option value=\"\" selected></option>\n                        <option *ngFor=\"let anio of arrfechasanios\" [value]=\"anio.anio\">\n                          {{ anio.anio }}\n                        </option>\n                    </select>\n                </mat-form-field>\n                <button class=\"ml-3\" color=\"primary\" mat-button type=\"button\" \n                        (click)=\"mtdclickobtenerIngresosMensualesFecha(mes.value, anio.value)\">\n                        ACEPTAR\n                </button>\n            </form>\n        </div-->\n    <div vexContainer class=\"mt-10\">\n      <h2 style=\"text-align: center\">\n        Ingresos mensuales - Mes: {{ mesSelected }} Año: {{ anioSelected }}\n      </h2>\n      <div class=\"mb-2\">\n        <mat-grid-list cols=\"11\" rowHeight=\"50px\">\n          <mat-grid-tile\n            *ngFor=\"let tile of tiles\"\n            [colspan]=\"tile.cols\"\n            [rowspan]=\"tile.rows\"\n            [style.background]=\"tile.color\"\n            [style]=\"tile.style\"\n          >\n            <div class=\"text-inside-grid\">{{ tile.text }}</div>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n    </div>\n  </div>\n  <!-- Buscador -->\n  <div vexContainer class=\"mt-10\">\n    <div\n      class=\"bg-app-bar px-6 h-16 border-b sticky left-0\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n    >\n      <h2\n        class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l\"\n        fxFlex=\"auto\"\n        fxHide.xs\n      >\n        <span *ngIf=\"selection.isEmpty()\">Buscar:</span>\n      </h2>\n      <div\n        class=\"bg-card rounded-full border px-4\"\n        fxFlex=\"800px\"\n        fxFlex.lt-md=\"auto\"\n        fxHide.xs\n        fxLayout=\"row\"\n      >\n        <ic-icon [icIcon]=\"icSearch\" size=\"40px\"></ic-icon>\n        <input\n          [formControl]=\"searchCtrl\"\n          class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\n          placeholder=\"Buscar...\"\n          type=\"search\"\n        />\n      </div>\n      <span fxFlex></span>\n      <button\n        class=\"ml-4\"\n        fxFlex=\"none\"\n        fxHide.gt-xs\n        mat-icon-button\n        type=\"button\"\n      >\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n      </button>\n    </div>\n  </div>\n  <!-- Tabla -->\n  <vex-page-layout-content>\n    <div class=\"card overflow-auto\">\n      <h2 class=\"mt-3 mb-3 ml-2\">Resumen de concesiones</h2>\n      <table\n        #table\n        mat-table\n        [dataSource]=\"dataSource\"\n        matSort\n        class=\"mat-elevation-z8 tbResumen\"\n      >\n        <ng-container matColumnDef=\"nombreConcesion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Conseción</th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.nombreConcesion }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tiempoVendido\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Tiempo vendido\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.tiempoVendido }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"montoVendido\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Monto vendido\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.montoVendido | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"tiempoDevolucion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Tiempo devolución\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.tiempoDevolucion }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"montoDevolucion\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Monto devolución\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.montoDevolucion | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"total\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Total</th>\n          <td\n            mat-cell\n            *matCellDef=\"let element\"\n            (click)=\"mtdclickDetalleIngreso(element.intIdConcesion)\"\n          >\n            {{ element.total | currency: \"CAD\":\"symbol-narrow\" }}\n          </td>\n        </ng-container>\n\n        <!-- <ng-container matColumnDef=\"descargar\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Descargar</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button\n              mat-raised-button\n              color=\"primary\"\n              (click)=\"mtdDescargarInformeConcesion(element)\"\n            >\n              <mat-icon [icIcon]=\"icDownload\" class=\"mr-1\"></mat-icon>\n              Descargar\n            </button>\n          </td>\n        </ng-container> -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <mat-paginator\n        [pageSizeOptions]=\"pageSizeOptions\"\n        [pageSize]=\"pageSize\"\n        class=\"sticky left-0\"\n      ></mat-paginator>\n    </div>\n  </vex-page-layout-content>\n</div>\n","import { Component, OnInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { CurrencyPipe } from '@angular/common';\nimport { fadeInRight400ms } from '../../../@vex/animations/fade-in-right.animation';\nimport { stagger40ms } from '../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '../../../@vex/animations/scale-fade-in.animation';\nimport { scaleIn400ms } from '../../../@vex/animations/scale-in.animation';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport icDownload from '@iconify/icons-fa-solid/cloud-download-alt';\n\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\n\nimport { DetalleConcesionComponent } from '../detalle-concesion/detalle-concesion.component';\nimport { IngresoMensualesService } from '../../services/ingreso-mensuales.service';\nimport { IngresosMensualesModel } from '../../models/ingresosmensuales.model';\nimport { Tile } from '../../models/tile.interface';\n\nimport Swal from 'sweetalert2';\n\n// doracion de UntilDestroy\n@UntilDestroy( )\n@Component({\n  selector: 'vex-ingresos-mensuales',\n  templateUrl: './ingresos-mensuales.component.html',\n  styleUrls: ['./ingresos-mensuales.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IngresosMensualesComponent implements OnInit, AfterViewInit {\n\n  constructor(public fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private currencyPipe: CurrencyPipe,\n              private ingresosmensualesservices: IngresoMensualesService) {\n\n              }\n\n  // arrglo para generar la primera parte del grid view con ayuda de la\n  // interfaces Tile\n  tiles: Tile[] = [];\n\n  // arreglo de meses\n  arrmeses: any [] = [\n    {nombre: 'Enero', value: 1},\n    {nombre: 'Febrero', value: 2},\n    {nombre: 'Marzo', value: 3},\n    {nombre: 'Abril', value: 4},\n    {nombre: 'Mayo', value: 5},\n    {nombre: 'Junio', value: 6},\n    {nombre: 'Julio', value: 7},\n    {nombre: 'Agosto', value: 8},\n    {nombre: 'Septiembre', value: 9},\n    {nombre: 'Octubre', value: 10},\n    {nombre: 'Noviembre', value: 11},\n    {nombre: 'Diciembre', value: 12}\n  ];\n\n  // arreglo del tipo IngresosMensualesModel para\n  // guardar la data del ingresosmensualesservice\n  arringresosmensuales: any[] = [];\n  arrfechasanios: any[] = [];\n\n  // propiedades del mat-tabla\n  @ViewChild(MatTable, {static: true}) table: MatTable<Element>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  pageSize = 10;\n  pageSizeOptions: number[] = [10, 20, 30, 50];\n  displayedColumns: string[] = [ 'nombreConcesion', 'tiempoVendido', 'montoVendido', 'tiempoDevolucion', 'montoDevolucion', 'total'];\n  selection = new SelectionModel<any>(true, []);\n  dataSource = new MatTableDataSource<any>(DATOS);\n\n  // iconos\n  icContacts = icContacts;\n  icSearch = icSearch;\n  icDownload = icDownload;\n\n  // propiedades para mostrar la fecha seleccionada por el usuario\n  datefecha: any;\n  mesSelected: any;\n  anioSelected: any;\n\n  searchCtrl = new FormControl();\n  form: FormGroup;\n\n\n  ngOnInit(): void { \n    this.mtdobtenerIngresosMensualesxConcesion();\n    this.mtdobternerIngresosMensualesResumen();\n    this.mtdgenerarAnios();\n  }\n\n  ngAfterViewInit(): void {\n    this.mtdpintarfechaSeleccionada();\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    \n    // Filtro de la tabla\n    this.searchCtrl.valueChanges.pipe(\n      untilDestroyed(this)\n    ).subscribe(value => this.onFilterChange(value));\n\n  }\n\n  // mtd de filtrado de la tabla\n  onFilterChange(value: string) {\n    if (!this.dataSource) {\n      return;\n    }\n    value = value.trim();\n    value = value.toLowerCase();\n    this.dataSource.filter = value;\n  }\n\n  // metodo que permite pintar la fecha en el titulo del grib\n  mtdpintarfechaSeleccionada() {\n    this.datefecha = new Date();\n    this.mesSelected = this.datefecha.getMonth() + 1;\n    this.anioSelected = this.datefecha.getFullYear();\n    // this.mtdobtenerNombreMeses(this.mesSelected);\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == this.mesSelected);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n  }\n\n  // Metodo que utiliza el evento click para recuperar los datos\n  // del grib y table\n  mtdclickobtenerIngresosMensualesFecha( mes: any, anio: any ) {\n    if ( mes === '' && anio === '') {\n      return;\n    }\n    if ( mes === '' || anio === '') {\n      return;\n    }\n    console.log('Mes2: ' + mes, 'Año2: ' + anio);\n    this.mtdobternerIngresosMensualesResumenParam( mes, anio );\n    this.mtdobtenerIngresosMensualesxConcesionParam( mes, anio );\n    this.ingresosmensualesservices.setMesSeleccionado( mes );\n    this.ingresosmensualesservices.setAnioSeleccionado( anio );\n\n    const nombreMes = this.arrmeses.filter(arrmeses => arrmeses.value == mes);\n    // console.log('mes actualizado', nombreMes);\n    this.mesSelected = nombreMes[0].nombre;\n    this.anioSelected = anio;\n    this.cd.markForCheck();\n  }\n\n  mtdclickDetalleIngreso(intIdConcesion: any) {\n    this.dialog.open(DetalleConcesionComponent, {height: 'auto', data: intIdConcesion});\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // y llena la segunda parte del grid a partir de la\n  // fecha ingresa por el usuario\n  mtdobternerIngresosMensualesResumenParam( mes: any, anio: any ) {\n    this.tiles = [];\n    this.ingresosmensualesservices.mtdgetingresosMensualesResumenPara(mes, anio)\n        .then(( response: any ) => {\n          console.log('Data filtrada', response);\n          this.tiles.push(\n            {text: 'ParkiFácil', cols: 1, rows: 3, color: '#FFFFFF', style: 'font-weight: bold;'},\n            {text: 'Saldo de usuario mes anterior', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga de saldo del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo usuario del mes', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Compra de recargas del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo final usuarios', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Ingreso por comisiones', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga usuario', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión recarga', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Venta concesión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMesAnterior'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['recargaUsuario'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comisionRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMes'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['ventaConcesion'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#F8CBAD', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comision'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoCompra'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoFinalUsuaios'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#2F75B5', style: 'font-weight: bold; color:white;'},\n            {text: this.currencyPipe.transform(response['data']['ingresoXComisiones'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#548235', style: 'font-weight: bold; color:white;'}\n          );\n          this.cd.markForCheck();\n      });\n    this.mtdobtenerIngresosMensualesxConcesionParam(mes, anio);\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // por concesión y llena el mat-table en base a la fecha\n  // ingresada por el usuario\n  mtdobtenerIngresosMensualesxConcesionParam(mes: any, anio: any) {\n    this.arringresosmensuales = [];\n    this.ingresosmensualesservices.mtdgetingresosMensualesxConsecionPara(mes, anio)\n        .subscribe((response: any) => {\n          this.arringresosmensuales = response.data;\n          this.dataSource.data = this.arringresosmensuales;\n          this.cd.markForCheck();\n        });\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // por concesión y llena el mat-table\n  mtdobtenerIngresosMensualesxConcesion() {\n\n    const myDate = new Date();\n    const month = myDate.getMonth() + 1;\n    const year = myDate.getFullYear();\n\n    console.log('Mes: ' + month, 'Año: ' + year);\n    this.ingresosmensualesservices.mtdgetingresosMensualesxConsecion(month, year)\n        .then((response:any) => {\n          console.log('ingresos ',response);\n          this.arringresosmensuales = response.data;\n          // this.arringresosmensuales.sort((a, b) => b.montoVendido - a.montoVendido);\n          this.dataSource.data = this.arringresosmensuales;\n\n    });\n  }\n\n  // Metodo que permite recuperar los ingresos mensuales\n  // y llena la segunda parte del grid\n  mtdobternerIngresosMensualesResumen() {\n\n    const myDate = new Date();\n    const month = myDate.getMonth() + 1;\n    const year = myDate.getFullYear();\n\n    console.log('Mes: ' + month, 'Año: ' + year);\n    this.ingresosmensualesservices.mtdgetingresosMensualesResumen(month, year)\n        .then((response: any) => {\n          console.log(response);\n          this.tiles.push(\n            {text: 'ParkiFácil', cols: 1, rows: 3, color: '#FFFFFF', style: 'font-weight: bold;'},\n            {text: 'Saldo de usuario mes anterior', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga de saldo del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo usuario del mes', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Compra de recargas del mes', cols: 3, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Saldo final usuarios', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Ingreso por comisiones', cols: 1, rows: 2, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Recarga usuario', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión recarga', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Venta concesión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Comisión', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: 'Total cobrado', cols: 1, rows: 1, color: '#C1C0BF', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMesAnterior'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['recargaUsuario'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comisionRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoRecarga'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoUsuarioMes'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#FFFFFF', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['ventaConcesion'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#F8CBAD', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['comision'], 'MXN', 'symbol-narrow'), cols: 1, rows: 1, color: '#C6E0B4', style: 'font-weight: normal;'},\n            {text: this.currencyPipe.transform(response['data']['totalCobradoCompra'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#BDD7EE', style: 'font-weight: bold;'},\n            {text: this.currencyPipe.transform(response['data']['saldoFinalUsuaios'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#2F75B5', style: 'font-weight: bold; color:white;'},\n            {text: this.currencyPipe.transform(response['data']['ingresoXComisiones'], 'CAD', 'symbol-narrow'), cols: 1, rows: 1, color: '#548235', style: 'font-weight: bold; color:white;'}\n          );\n          this.cd.markForCheck();\n        });\n  }\n\n  // metodo que genera los años para llenar el select de años\n  mtdgenerarAnios() {\n\n    const myDate = new Date();\n    const year = myDate.getFullYear();\n\n    for (let index = 2020; index < year + 1; index++) {\n      this.arrfechasanios.push({ anio: index });\n    }\n    console.log(this.arrfechasanios);\n  }\n\n  // metodo que permite encontrar el nombre del mes apartir de \n  // su numero\n  mtdobtenerNombreMeses(mes: any) {\n    if (mes === 1) {\n      this.mesSelected = 'Enero';\n    }\n    if (mes === 2) {\n      this.mesSelected = 'Febrero';\n    }\n    if (mes === 3) {\n      this.mesSelected = 'Marzo';\n    }\n    if (mes === 4) {\n      this.mesSelected = 'Abril';\n    }\n    if (mes === 5) {\n      this.mesSelected = 'Mayo';\n    }\n    if (mes === 6) {\n      this.mesSelected = 'Junio';\n    }\n    if (mes === 7) {\n      this.mesSelected = 'Julio';\n    }\n    if (mes === 8) {\n      this.mesSelected = 'Agosto';\n    }\n    if (mes === 9) {\n      this.mesSelected = 'Septiembre';\n    }\n    if (mes === 10) {\n      this.mesSelected = 'Octubre';\n    }\n    if (mes === 11) {\n      this.mesSelected = 'Noviembre';\n    }\n    if (mes === 12) {\n      this.mesSelected = 'Diciembre';\n    }\n  }\n\n  ngOnDestroy(): void { }\n\n}\n\nconst DATOS: any[] = [];\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IngresosMensualesRoutingModule } from './ingresos-mensuales-routing.module';\nimport { IngresosMensualesComponent } from './ingresos-mensuales.component';\nimport { DetalleConcesionModule } from '../detalle-concesion/detalle-concesion.module';\n\nimport { PageLayoutModule } from '../../../@vex/components/page-layout/page-layout.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BreadcrumbsModule } from '../../../@vex/components/breadcrumbs/breadcrumbs.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContainerModule } from '../../../@vex/directives/container/container.module';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ColorFadeModule  } from '../../../@vex/pipes/color/color-fade.module';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { SecondaryToolbarModule } from '../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSortModule } from '@angular/material/sort';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  declarations: [IngresosMensualesComponent],\n  imports: [\n    CommonModule,\n    IngresosMensualesRoutingModule,\n    DetalleConcesionModule,\n    MatSortModule,\n    PageLayoutModule,\n    FlexLayoutModule,\n    BreadcrumbsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    IconModule,\n    FormsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    ContainerModule,\n    MatSelectModule,\n    ColorFadeModule,\n    MatButtonToggleModule,\n    SecondaryToolbarModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatRadioModule,\n    MatDividerModule,\n  ]\n})\nexport class IngresosMensualesModule { }\n"]}